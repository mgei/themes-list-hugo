author,git_hub_stars,updated,license,tags,name,description,download,demo,text,authors
Aditya Telange,7616,2023-11-25,MIT,"Blog, Dark, Light, Minimal, Responsive",PaperMod,"A fast, clean, responsive Hugo theme",https://github.com/adityatelange/hugo-PaperMod,NA,"Hugo PaperMod | Demo☄️ Fast | ☁️ Fluent | 🌙 Smooth | 📱 ResponsiveHugo PaperMod is a theme based on hugo-paper.
The goal of this project is to add more features and customization to the og theme.Documentation can be found here: 📚 WikiExampleSite can be found here: exampleSite. Demo is built up with exampleSite as source.



Features/Mods 💥 Uses Hugo’s asset generator with pipelining, fingerprinting, bundling and minification by default.3 Modes:Regular Mode.Home-Info Mode.Profile Mode.Table of Content Generation (newer implementation).Archive of posts.Social Icons (home-info and profile-mode)Social-Media Share buttons on posts.Menu location indicator.Multilingual support. (with language selector)TaxonomiesCover image for each post (with Responsive image support).Light/Dark theme (automatic theme switch a/c to browser theme and theme-switch button).SEO Friendly.Multiple Author support.Search Page with Fuse.jsOther Posts suggestion below a postBreadcrumb NavigationCode Block Copy buttonsNo webpack, nodejs and other dependencies are required to edit the theme.Read Wiki For More Details => PaperMod - FeaturesInstall/Update 📥 Read Wiki For More Details => PaperMod - InstallationFAQs / How To’s Guide 🙋 Read Wiki For More Details => PaperMod-FAQsSocial-Icons/Share-Icons 🖼️ Read Wiki For More Details => PaperMod-IconsRelease Changelog 📃 Release ChangeLog has info about stuff added: ReleasesPagespeed Insights (100% ?) 👀 Support 🫶 Star 🌟 this repository.Help spread the word about PaperMod by sharing it on social media and recommending it to your friends. 🗣️You can also sponsor 🏅 on Github Sponsors / Ko-Fi.Special Thanks 🌟 Highlight.jsFuse.jsFeather IconsSimple IconsAll Contributors and SupportersStargazers over time 📈 See AlsoAcademicAnubisBlondeBlowfishBootstrap-BP",NA
George Cushen,7511,2023-11-25,MIT,"Blog, Company, Dark, Landing, Minimal, Multilingual, Portfolio, Responsive",Hugo Blox - Tailwind,"Create any kind of website with fully customizable widgets - 50+ light/dark color themes, language packs, and widgets included.",https://github.com/HugoBlox/hugo-blox-builder,https://hugo-academic-pages.netlify.app/,"Hugo Blox Tailwind UIThe Hugo Blox web framework utilising TailwindCSS and its typography plugin for styling components.See the Blog Starter Template for an example using this module.Development hugo mod npm pack
npm install
You need to add this to your config.yaml to enable Hugo’s Tailwind integration:build:
  writeStats: true
See AlsoAcademicLightbiPaigePikoBeautiful Hugo",NA
Jimmy Cai,3865,2023-10-11,GPL-3.0-only,"Blog, Dark, Light, Personal, Responsive",Stack,Card-style Hugo theme designed for bloggers,https://github.com/CaiJimmy/hugo-theme-stack,https://demo.stack.jimmycai.com,"Hugo Theme StackCard-style Hugo theme designed for bloggers.Quickstart Use this template: CaiJimmy/hugo-theme-stack-starterDemo Starter template demo: demo.stack.jimmycai.comDev build: dev.stack.jimmycai.comDocumentation Visit stack.jimmycai.comCopyright Licensed under the GNU General Public License v3.0Please do not remove the “Theme Stack designed by Jimmy” text and link.If you want to port this theme to another blogging platform, please let me know🙏.See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
George Cushen,3261,2023-12-03,MIT,"Blog, Company, Contact, Dark, Docs, Gallery, Landing, Light, Minimal, Multilingual, Personal, Portfolio, Responsive",Academic,"Use the no-code website framework to easily build your site. Choose from 50+ widgets and deploy with one click! Fully personalize your site with themes, plugins, and language packs.",https://github.com/HugoBlox/theme-academic-cv,https://hugoblox.com/templates/,"Hugo Academic CV ThemeThe Hugo Academic Resumé Template empowers you to easily create your job-winning online resumé, showcase your academic publications, and create online courses or knowledge bases to grow your audience.
️Trusted by 250,000+ researchers, educators, and students. Highly customizable via the integrated no-code, Hugo Blox Builder, making every site truly personalized ⭐⭐⭐⭐⭐Easily write technical content with plain text Markdown, LaTeX math, diagrams, RMarkdown, or Jupyter, and import publications from BibTeX.Check out the latest demo of what you’ll get in less than 10 minutes, or get inspired by our academics and research groups.The integrated Hugo Blox Builder and CMS makes it easy to create a beautiful website for free. Edit your site in the CMS (or your favorite editor), generate it with Hugo, and deploy with GitHub or Netlify. Customize anything on your site with widgets, light/dark themes, and language packs.👉 Get Started📚 View the documentation💬 Chat with the Hugo Blox Builder community or Hugo community🐦 Twitter: @GetResearchDev @GeorgeCushen #MadeWithHugoBlox⬇️ Automatically import your publications from BibTeX with the Hugo Academic CLI💡 Suggest an improvement⬆️ Updating? View the Update Guide and Release NotesWe ask you, humbly, to support this open source movement Today we ask you to defend the open source independence of the Hugo Blox Builder and themes 🐧We’re an open source movement that depends on your support to stay online and thriving, but 99.9% of our creators don’t give; they simply look the other way.❤️ Click here to become a GitHub Sponsor, unlocking awesome perks such as exclusive academic templates and widgets Demo image credits UnsplashLatest news Easily make an academic CV website to get more cites and grow your audience 🚀What's new in v5.2?What's new in v5.1?Version 5.0 (February 2021)Version 5.0 Beta 3 (February 2021)See AlsoPaigePikoHugoplateLightbiTailBliss",NA
Alex Shpak,2564,2023-12-04,MIT,"Docs, Multilingual, Responsive",Book,Hugo documentation theme as simple as plain book,https://github.com/alex-shpak/hugo-book,https://hugo-book-demo.netlify.app,"Hugo Book Theme

Hugo documentation theme as simple as plain book FeaturesRequirementsInstallationMenuBlogConfigurationShortcodesVersioningContributingFeatures Clean simple designLight and Mobile-FriendlyMulti-language supportCustomisableZero initial configurationHandy shortcodesComments supportSimple blog and taxonomyPrimary features work without JavaScriptDark ModeRequirements Hugo 0.79 or higherHugo extended version, read more hereInstallation Install as git submodule Navigate to your hugo project root and run:git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book
Then run hugo (or set theme = ""hugo-book""/theme: hugo-book in configuration file)hugo server --minify --theme hugo-book
Install as hugo module You can also add this theme as a Hugo module instead of a git submodule.Start with initializing hugo modules, if not done yet:hugo mod init github.com/repo/path
Navigate to your hugo project root and add [module] section to your config.toml:[module]
[[module.imports]]
path = 'github.com/alex-shpak/hugo-book'
Then, to load/update the theme module and run hugo:hugo mod get -u
hugo server --minify
Creating site from scratch Below is an example on how to create a new site from scratch:hugo new site mydocs; cd mydocs
git init
git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book
cp -R themes/hugo-book/exampleSite/content.en/* ./content
hugo server --minify --theme hugo-book
Menu File tree menu (default) By default, the theme will render pages from the content/docs section as a menu in a tree structure.You can set title and weight in the front matter of pages to adjust the order and titles in the menu.Leaf bundle menu (Deprecated, to be removed in June 2022) You can also use leaf bundle and the content of its index.md file as menu.Given you have the following file structure:├── content
│   ├── docs
│   │   ├── page-one.md
│   │   └── page-two.md
│   └── posts
│       ├── post-one.md
│       └── post-two.md
Create a file content/menu/index.md with the content:+++
headless = true
+++

- [Book Example]({{< relref ""/docs/"" >}})
  - [Page One]({{< relref ""/docs/page-one"" >}})
  - [Page Two]({{< relref ""/docs/page-two"" >}})
- [Blog]({{< relref ""/posts"" >}})
And Enable it by setting BookMenuBundle: /menu in Site configuration.Example menuExample config fileLeaf bundlesBlog A simple blog is supported in the section posts.A blog is not the primary usecase of this theme, so it has only minimal features.Configuration Site Configuration There are a few configuration options that you can add to your config.toml file.You can also see the yaml example here.# (Optional) Set Google Analytics if you use it to track your website.
# Always put it on the top of the configuration file, otherwise it won't work
googleAnalytics = ""UA-XXXXXXXXX-X""

# (Optional) If you provide a Disqus shortname, comments will be enabled on
# all pages.
disqusShortname = ""my-site""

# (Optional) Set this to true if you use capital letters in file names
disablePathToLower = true

# (Optional) Set this to true to enable 'Last Modified by' date and git author
#  information on 'doc' type pages.
enableGitInfo = true

# (Optional) Theme is intended for documentation use, therefore it doesn't render taxonomy.
# You can remove related files with config below
disableKinds = ['taxonomy', 'taxonomyTerm']

[params]
  # (Optional, default light) Sets color theme: light, dark or auto.
  # Theme 'auto' switches between dark and light modes based on browser/os preferences
  BookTheme = 'light'

  # (Optional, default true) Controls table of contents visibility on right side of pages.
  # Start and end levels can be controlled with markup.tableOfContents setting.
  # You can also specify this parameter per page in front matter.
  BookToC = true

  # (Optional, default none) Set the path to a logo for the book. If the logo is
  # /static/logo.png then the path would be 'logo.png'
  BookLogo = 'logo.png'

  # (Optional, default none) Set leaf bundle to render as side menu
  # When not specified file structure and weights will be used
  # Deprecated, to be removed in June 2022
  BookMenuBundle = '/menu'

  # (Optional, default docs) Specify section of content to render as menu
  # You can also set value to ""*"" to render all sections to menu
  BookSection = 'docs'

  # Set source repository location.
  # Used for 'Last Modified' and 'Edit this page' links.
  BookRepo = 'https://github.com/alex-shpak/hugo-book'

  # Specifies commit portion of the link to the page's last modified commit hash for 'doc' page
  # type.
  # Required if 'BookRepo' param is set.
  # Value used to construct a URL consisting of BookRepo/BookCommitPath/<commit-hash>
  # Github uses 'commit', Bitbucket uses 'commits'
  BookCommitPath = 'commit'

  # Enable 'Edit this page' links for 'doc' page type.
  # Disabled by default. Uncomment to enable. Requires 'BookRepo' param.
  # Path must point to the site directory.
  BookEditPath = 'edit/master/exampleSite'

  # (Optional, default January 2, 2006) Configure the date format used on the pages
  # - In git information
  # - In blog posts
  BookDateFormat = 'Jan 2, 2006'

  # (Optional, default true) Enables search function with flexsearch,
  # Index is built on fly, therefore it might slowdown your website.
  # Configuration for indexing can be adjusted in i18n folder per language.
  BookSearch = true

  # (Optional, default true) Enables comments template on pages
  # By default partials/docs/comments.html includes Disqus template
  # See https://gohugo.io/content-management/comments/#configure-disqus
  # Can be overwritten by same param in page frontmatter
  BookComments = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables portable links and link checks in markdown pages.
  # Portable links meant to work with text editors and let you write markdown without {{< relref >}} shortcode
  # Theme will print warning if page referenced in markdown does not exists.
  BookPortableLinks = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables service worker that caches visited pages and resources for offline use.
  BookServiceWorker = true
Multi-Language Support Theme supports Hugo’s multilingual mode, just follow configuration guide there. You can also tweak search indexing configuration per language in i18n folder.Page Configuration You can specify additional params in the front matter of individual pages:# Set type to 'docs' if you want to render page outside of configured section or if you render section other than 'docs'
type = 'docs'

# Set page weight to re-arrange items in file-tree menu (if BookMenuBundle not set)
weight = 10

# (Optional) Set to 'true' to mark page as flat section in file-tree menu (if BookMenuBundle not set)
bookFlatSection = false

# (Optional) Set to hide nested sections or pages at that level. Works only with file-tree menu mode
bookCollapseSection = true

# (Optional) Set true to hide page or section from side menu (if BookMenuBundle not set)
bookHidden = false

# (Optional) Set 'false' to hide ToC from page
bookToC = true

# (Optional) If you have enabled BookComments for the site, you can disable it for specific pages.
bookComments = true

# (Optional) Set to 'false' to exclude page from search index.
bookSearchExclude = true

# (Optional) Set explicit href attribute for this page in a menu (if BookMenuBundle not set)
bookHref = ''
Partials There are layout partials available for you to easily override components of the theme in layouts/partials/.In addition to this, there are several empty partials you can override to easily add/inject code.Empty PartialPlacementlayouts/partials/docs/inject/head.htmlBefore closing <head> taglayouts/partials/docs/inject/body.htmlBefore closing <body> taglayouts/partials/docs/inject/footer.htmlAfter page footer contentlayouts/partials/docs/inject/menu-before.htmlAt the beginning of <nav> menu blocklayouts/partials/docs/inject/menu-after.htmlAt the end of <nav> menu blocklayouts/partials/docs/inject/content-before.htmlBefore page contentlayouts/partials/docs/inject/content-after.htmlAfter page contentlayouts/partials/docs/inject/toc-before.htmlAt the beginning of table of contents blocklayouts/partials/docs/inject/toc-after.htmlAt the end of table of contents blockExtra Customisation FileDescriptionstatic/favicon.pngOverride default faviconassets/_custom.scssCustomise or override scss stylesassets/_variables.scssOverride default SCSS variablesassets/_fonts.scssReplace default font with custom fonts (e.g. local files or remote like google fonts)assets/mermaid.jsonReplace Mermaid initialization configPlugins There are a few features implemented as plugable scss styles. Usually these are features that don’t make it to the core but can still be useful.PluginDescriptionassets/plugins/_numbered.scssMakes headings in markdown numbered, e.g. 1.1, 1.2assets/plugins/_scrollbars.scssOverrides scrollbar styles to look similar across platformsTo enable plugins, add @import ""plugins/{name}""; to assets/_custom.scss in your website root.Hugo Internal Templates There are a few hugo templates inserted in <head>Google AnalyticsOpen GraphTo disable Open Graph inclusion you can create your own empty file \layouts\_internal\opengraph.html.
In fact almost empty not quite empty because an empty file looks like absent for HUGO. For example:<!-- -->
Shortcodes ButtonsColumnsDetailsHintsKaTeXMermaidTabsBy default, Goldmark trims unsafe outputs which might prevent some shortcodes from rendering. It is recommended to set markup.goldmark.renderer.unsafe=true if you encounter problems.[markup.goldmark.renderer]
  unsafe = true
If you are using config.yaml or config.json, consult the configuration markupVersioning This theme follows a simple incremental versioning. e.g. v1, v2 and so on. There might be breaking changes between versions.If you want lower maintenance, use one of the released versions. If you want to live on the bleeding edge of changes, you can use the master branch and update your website when needed.Contributing Extra credits to contributors Contributions are welcome and I will review and consider pull requests.Primary goals are:Keep it simple.Keep minimal (or zero) default configuration.Avoid interference with user-defined layouts.Avoid using JS if it can be solved by CSS.Feel free to open issues if you find missing configuration or customisation options.See AlsoAcademicAmethystBootstrap Theme for Personal Blog and DocumentationsDark Theme EditorDocsy",NA
Luiz F. A. de Prá,2470,2023-12-04,MIT,"Blog, Minimal, Personal, Responsive",Coder,A simple and clean blog theme for Hugo,https://github.com/luizdepra/hugo-coder,NA,"
A simple and clean blog theme for Hugo.Live Demo See here.Quick Start Add the repository into your Hugo Project repository as a submodule, git submodule add https://github.com/luizdepra/hugo-coder.git themes/hugo-coder.Configure your config.toml. You can either use this minimal configuration as a base, or look for a complete explanation about all configurations here. The config.toml inside the exampleSite is also a good reference.Build your site with hugo server and see the result at http://localhost:1313/.Documentation See the docs folder.License Coder is licensed under the MIT license.Maintenance This theme is maintained by its author Luiz de Prá with the help from these awesome contributors.Sponsoring If you like my project or it was useful for you, consider supporting its development. Just:Special Thanks Gleen McComb, for his great article about custom pagination.All contributors, for every PR and Issue reported.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
The Docsy Authors,2343,2023-11-29,Apache 2.0,"Docs, Multilingual, Responsive",Docsy,A Hugo theme for technical documentation sites,https://github.com/google/docsy,NA,"Docsy



🚧 WARNING 🚧 : main is under development and potentially unstable! Use official Docsy releases. Docsy is a Hugo theme for technical documentation sets,
providing simple navigation, site structure, and more.This is not an officially supported Google product. This project is actively
being maintained.Prerequisites The following are basic prerequisites for using Docsy in your site:Install a recent release of the Hugo “extended” version. If you install from
the Hugo release page, make sure
you download the extended version, which supports SCSS.Install PostCSS so that the site build can create the final CSS assets. You
can install it locally by running the following commands from the root
directory of your project:npm install --save-dev autoprefixer
npm install --save-dev postcss-cli
Starting in
version 8 of postcss-cli,
you must also separately install postcss:npm install -D postcss
Any additional prerequisites depend on the
installation option
you choose. We recommend using Docsy as a Hugo module, which requires that you
have the go language installed in addition to Hugo and PostCSS.For complete prerequisites and instructions, see our
Get started guides.Example and usage You can find an example project that uses Docsy in the
Docsy Example Project repo.The Docsy
Example Project is hosted at example.docsy.dev. For
real-life examples of sites that use Docsy (and their source repos), see our
Examples page.To use the Docsy theme for your own site:(Recommended) Use the
example project, which includes the
Docsy theme as a Hugo module, as a template to create your project. You can
customize this pre-configured basic site into your own Docsy themed site.
Learn more&mldr;Add Docsy to your existing Hugo site. You can add Docsy as a Hugo module, as a
Git submodule, or clone the Docsy theme into your project.See the Get started guides for
details about the various usage options.Documentation Docsy has its own user guide (using Docsy, of course!) with lots more
information about using the theme. It is hosted by Netlify at
docsy.dev. For deploy logs and more, see Deploys from the
site’s Netlify dashboard.Alternatively you can use Hugo to generate and serve a local copy of the guide
(also useful for testing local theme changes), making sure you have installed
all the prerequisites listed above:git clone --depth 1 https://github.com/google/docsy.git
cd docsy/userguide/
npm install
npm run serve
Contributing Read CONTRIBUTING.md for details on our code of conduct, and the process for
submitting pull requests to us. Thank you to all past, present, and future
contributors!License This project is licensed under the Apache License 2.0 - see the
LICENSE.md file for detailsSee AlsoAcademicAmethystBookBootstrap Theme for Personal Blog and DocumentationsDark Theme Editor",NA
nanxiaobei,1790,2023-11-07,MIT,"Blog, Light, Responsive",Paper,"A simple, clean, flexible Hugo theme",https://github.com/nanxiaobei/hugo-paper,https://hugo-paper.vercel.app,"Create now ➫ 🔗 kee.soPaper 6.24Demo → hugo-paper.vercel.appA simple, clean, customizable Hugo theme.⚡️ Fast | 👒 Customizable | 🫙 SmoothLinks Product Hunt: producthunt.com/posts/hugo-paper-6Hugo themes: themes.gohugo.io/hugo-paperOverview Options Available options to config.toml or hugo.toml:disqusShortname = 'YOUR_DISQUS_SHORTNAME'   # use disqus comments

[params]
  # color style
  color = 'linen'                           # linen, wheat, gray, light

  # header social icons
  twitter = 'YOUR_TWITTER_ID'               # twitter.com/YOUR_TWITTER_ID
  github = 'YOUR_GITHUB_ID'                 # github.com/YOUR_GITHUB_ID
  instagram = 'YOUR_INSTAGRAM_ID'           # instagram.com/YOUR_INSTAGRAM_ID
  linkedin = 'YOUR_LINKEDIN_ID'             # linkedin.com/in/YOUR_LINKEDIN_ID
  mastodon = 'YOUR_MASTODON_LINK'           # e.g. 'https://mastodon.instance/@xxx'
  rss = true                                # show rss icon

  # home page profile
  avatar = 'GRAVATAR_EMAIL'                 # gravatar email or image url
  name = 'YOUR_NAME'
  bio = 'YOUR_BIO'


  # misc
  disableHLJS = true                        # disable highlight.js
  disablePostNavigation = true              # disable post navigation
  monoDarkIcon = true                       # show monochrome dark mode icon
  gravatarCdn = 'GRAVATAR_CDN_LINK'         # e.g. 'https://cdn.v2ex.com/gravatar/'
  graphCommentId = ""YOUR_GRAPH_COMMENT_ID""  # use graph comment (disqus alternative)
  math = true                               # enable KaTeX math typesetting globally

  # giscus
[params.giscus]
  repo = 'YOUR_GISCUS_REPO'                 # see https://giscus.app for more details
  repoId = 'YOUR_GISCUS_REPO_ID'
  category = 'YOUR__GISCUS_CATEGORY'
  categoryId = 'YOUR_GISCUS_CATEGORY_ID'
  mapping = 'pathname'
  theme = 'light'
  lang = 'zh-CN'
Available options to front matter:comments = false                            # disable comments for a specific page
math = true                                 # enable KaTeX math typesetting for a specific page
Install As hugo module Inside the folder of your Hugo project, run:hugo mod init github.com/<USERNAME>/<REPONAME>
Add paper theme ad dependency of your site:hugo mod init github.com/<USERNAME>/<REPONAME>
Open config.toml or hugo.toml, remove the theme line (if present) and add module section at the bottom of the file:[module]
  [[module.imports]]
    path = ""github.com/nanxiaobei/hugo-paper""
For more information, please read the official guide of Hugo.As git submodule Inside the folder of your Hugo project, run:git submodule add https://github.com/nanxiaobei/hugo-paper themes/paper
Open config.toml or hugo.toml, change theme to ""paper"":theme = ""paper""
For more information, please read the official guide of Hugo.License MIT License (c) nanxiaobeiSee AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Henk Verlinde,1764,2023-10-27,MIT,"Blog, Bootstrap, Dark Mode, Docs, Landing, Minimal",Doks,"Build beautiful, high-performance documentation websites with Doks.",https://github.com/gethyas/doks,https://doks.netlify.app,"DoksDoks is a documentation theme for Hyas.Demo doks.netlify.appInstall The recommended way to install the latest version of Doks is by running the command below:npm create hyas@latest -- --template doks
Looking for help? Start with our Getting Started guide.Documentation Visit our official documentation.Support Having trouble? Get help in the official Doks Discussions.Contributing New contributors welcome! Check out our Contributor Guides for help getting started.Links License (MIT)Code of ConductProject FundingWebsiteSponsors Doks is supported by Netlify, Algolia, and several other amazing organizations and inidviduals. Sponsor Doks! ❤️See AlsoHB Starter Theme TemplateLotus DocsPaigeAcademicBootstrap Theme for Personal Blog and Documentations",NA
Djordje Atlialp,1387,2023-11-22,MIT,"Blog, Dark, Light, Minimal, Multilingual, Personal, Responsive",hello-friend-ng,A simple theme for Hugo. That's it.,https://github.com/rhazdon/hugo-theme-hello-friend-ng,NA,"Hello Friend NGGeneral informations This theme was highly inspired by the hello-friend and hermit. A lot of kudos for their great work.Table of Contents FeaturesHow to startHow to configureMoreBuilt in shortcodesimageCode highlightingFaviconAudio SupportSocial IconsKnown issuesHow to edit the themeChangelogSponsoringLicenceFeatures Theming: dark/light mode, depending on your system preferences or the users choiceGreat reading experience thanks to Inter font, made by Rasmus AnderssonNice code highlighting thanks to PrismJSAn easy way to modify the theme with Hugo toolingFully responsiveSupport for audio in posts (thanks to @talbotp)Builtin (enableable/disableable) multilanguage menuSupport for social iconsSupport for sharing buttonsSupport for CommentoSupport for Plausible (thanks to @Joffcom)Support for utterances comment systemHow to start You can download the theme manually by going to https://github.com/rhazdon/hugo-theme-hello-friend-ng.git and pasting it to themes/hello-friend-ng in your root directory.You can also clone it directly to your Hugo folder:$ git clone https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng
If you don’t want to make any radical changes, it’s the best option, because you can get new updates when they are available. To do so, include it as a git submodule:$ git submodule add https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng
How to configure The theme doesn’t require any advanced configuration. Just copy the following config file.
To see all possible configurations, check the docs.
Note: There are more options to configure. Take a look into the config.toml in exampleSite.baseurl      = ""localhost""
title        = ""My Blog""
languageCode = ""en-us""
theme        = ""hello-friend-ng""
paginate     = 10

[params]
  dateform        = ""Jan 2, 2006""
  dateformShort   = ""Jan 2""
  dateformNum     = ""2006-01-02""
  dateformNumTime = ""2006-01-02 15:04""

  # Subtitle for home
  homeSubtitle = ""A simple and beautiful blog""

  # Set disableReadOtherPosts to true in order to hide the links to other posts.
  disableReadOtherPosts = false

  # Enable sharing buttons, if you like
  enableSharingButtons = true
  
  # Show a global language switcher in the navigation bar
  enableGlobalLanguageMenu = true

  # Metadata mostly used in document's head
  description = ""My new homepage or blog""
  keywords = ""homepage, blog""
  images = [""""]

[taxonomies]
    category = ""blog""
    tag      = ""tags""
    series   = ""series""

[languages]
  [languages.en]
    title = ""Hello Friend NG""
    keywords = """"
    copyright = '<a href=""https://creativecommons.org/licenses/by-nc/4.0/"" target=""_blank"" rel=""noopener"">CC BY-NC 4.0</a>'
    readOtherPosts = ""Read other posts""

  [languages.en.params]
    subtitle  = ""A simple theme for Hugo""

    [languages.en.params.logo]
      logoText = ""hello friend ng""
      logoHomeLink = ""/""
    # or
    #
    # path = ""/img/your-example-logo.svg""
    # alt = ""Your example logo alt text""

  # And you can even create generic menu
  [[menu.main]]
    identifier = ""blog""
    name       = ""Blog""
    url        = ""/posts""
More things Built-in shortcodes Of course you are able to use all default shortcodes from hugo (https://gohugo.io/content-management/shortcodes/).image Properties:src (required)alt (optional)position (optional, default: left, options: [left, center, right])styleExample:{{< image src=""/img/hello.png"" alt=""Hello Friend"" position=""center"" style=""border-radius: 8px;"" >}}
Code highlighting By default the theme is using PrismJS to color your code syntax. All you need to do is to wrap you code like this:
``` html
  // your code here
```
Favicon Check the docs.Audio Support You wrote an article and recorded it? Or do you have a special music that you would like to put on a certain article? Then you can do this now without further ado.In your article add to your front matters part:audio: path/to/file.mp3
Social Icons: A large variety of social icons are available and can be configured like this:[[params.social]]
  name = ""<site>""
  url = ""<profile_URL>""
Take a look into this list of available icon options.If you need another one, just open an issue or create a pull request with your wished icon. :)Known issues There is a bug in Hugo that sometimes causes the main page not to render correctly. The reason is an empty taxonomy part.
Related issue tickets: !14 !59.Either you comment it out completely or you write the following in[taxonomies]
  tag      = ""tags""
  category = ""categories""
How to edit the theme Just edit it. You don’t need any node stuff. ;)Sponsoring If you like my work and if you think this project is worth to support it, justLicence Copyright © 2019-2021 Djordje AtlialpThe theme is released under the MIT License. Check the original theme license for additional licensing information.See AlsoAcademicAnubisColor Your WorldHugoplateLightbi",NA
halogenica,1059,2023-11-10,MIT,"Blog, Bootstrap, Company, Light, Minimal, Multilingual, Portfolio, Responsive",Beautiful Hugo,An adaptation of the Beautiful Jekyll theme,https://github.com/halogenica/beautifulhugo,NA,"Beautiful Hugo - An adaptation of the Beautiful Jekyll themeLive demo See https://hugo-theme-beautifulhugo.netlify.app/Installation Install Hugo and create a new site. See the Hugo documentation for details.Git Submodule Add Beautifulhugo as git submodule:$ git submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo
Hugo module Initialize your site as hugo module:$ hugo mod init github.com/USERNAME/SITENAME
Add Beautifulhugo module as a dependency of your site:$ hugo mod get github.com/halogenica/beautifulhugo
Site preview Copy the content of exampleSite at the root of your project:cp -r themes/beautifulhugo/exampleSite/* . -iv
If you installed Beautifulhugo as hugo module, set your theme in your config file (hugo.toml):[[module.imports]]
  path = ""github.com/halogenica/beautifulhugo""
Start Hugo:hugo serve
Extra Features Responsive This theme is designed to look great on both large-screen and small-screen (mobile) devices.Syntax highlighting This theme has support for either Hugo’s lightning fast Chroma, or both server side and client side highlighting. See the Hugo docs for more.Chroma - New server side syntax highlighting To enable Chroma, add the following to your site parameters:pygmentsCodeFences = true
pygmentsUseClasses = true
Then, you can generate a different style by running:hugo gen chromastyles --style=trac > static/css/syntax.css
Pygments - Old server side syntax highlighting To use this feature install Pygments (pip install Pygments) and add the following to your site parameters:pygmentsStyle = ""trac""
pygmentsUseClassic = true
Pygments is mostly compatible with the newer Chroma. It is slower but has some additional theme options. I recommend Chroma over Pygments. Pygments will use syntax.css for highlighting, unless you also set the config pygmentsUseClasses = false which will generate the style code directly in the HTML file.Highlight.js - Client side syntax highlighting [Params]
    useHLJS = true
Client side highlighting does not require pygments to be installed. This will use highlight.min.css instead of syntax.css for highlighting (effectively disabling Chroma). Highlight.js has a wider range of support for languages and themes, and an alternative highlighting engine.Disqus support To use this feature, uncomment and fill out the disqusShortname parameter in config.toml.Staticman support Add Staticman configuration section in config.toml or config.yamlSample config.toml configuration[Params.staticman]
  api = ""https://<API-ENDPOINT>/v3/entry/{GIT-HOST}/<USERNAME>/<REPOSITORY-BLOGNAME>/master/comments""
[Params.staticman.recaptcha]
      sitekey: ""6LeGeTgUAAAAAAqVrfTwox1kJQFdWl-mLzKasV0v""
      secret: ""hsGjWtWHR4HK4pT7cUsWTArJdZDxxE2pkdg/ArwCguqYQrhuubjj3RS9C5qa8xu4cx/Y9EwHwAMEeXPCZbLR9eW1K9LshissvNcYFfC/b8KKb4deH4V1+oqJEk/JcoK6jp6Rr2nZV4rjDP9M7nunC3WR5UGwMIYb8kKhur9pAic=""
Note: The public API-ENDPOINT https://staticman.net is currently hitting its API limit, so one may use other API instances to provide Staticman comment service.The section [Params.staticman.recaptcha] is optional. To add reCAPTCHA to your site, you have to replace the default values with your own ones (to be obtained from Google.) The site secret has to be encrypted withhttps://<API-ENDPOINT>/v3/encrypt/<SITE-SECRET>
You must also configure the staticman.yml in you blog website.comments:
  allowedFields: [""name"", ""email"", ""website"", ""comment""]
  branch            : ""master""
  commitMessage     : ""New comment in {options.slug}""
  path: ""data/comments/{options.slug}""
  filename          : ""comment-{@timestamp}""
  format            : ""yaml""
  moderation        : true
  requiredFields    : ['name', 'email', 'comment']
  transforms:
    email           : md5
  generatedFields:
    date:
      type          : ""date""
      options:
        format      : ""iso8601""
  reCaptcha:
    enabled: true
    siteKey: ""6LeGeTgUAAAAAAqVrfTwox1kJQFdWl-mLzKasV0v""
    secret: ""hsGjWtWHR4HK4pT7cUsWTArJdZDxxE2pkdg/ArwCguqYQrhuubjj3RS9C5qa8xu4cx/Y9EwHwAMEeXPCZbLR9eW1K9LshissvNcYFfC/b8KKb4deH4V1+oqJEk/JcoK6jp6Rr2nZV4rjDP9M7nunC3WR5UGwMIYb8kKhur9pAic=""
If you don’t have the section [Params.staticman] in config.toml, you won’t need the section reCaptcha in staticman.ymlSite Disclaimer If you need to put a Disclaimer on your website (e.g. “My views are my own and not my employer’s”), you can do so via the following:Uncomment and edit the disclaimerText parameter in config.toml.If you need to adjust the disclaimer’s styling, modify the declarations within the footer div.disclaimer selector in static/css/main.css.The code for the disclaimer text is in layouts/partials/footer.html. Moving this code block to another partial file (or relocating it within footer.html) will require changes to the css selector in main.css as well.Google Analytics To add Google Analytics, simply sign up to Google Analytics to obtain your Google Tracking ID, and add this tracking ID to the googleAnalytics parameter in config.toml.Note that the Google Analytics tracking code will only be inserted into the page when the site isn’t served on Hugo’s built-in server, to prevent tracking from local testing environments.Commit SHA on the footer If the source of your site is in a Git repo, the SHA corresponding to the commit the site is built from can be shown on the footer. To do so, two site parameters commit has to be defined in the config file config.toml:enableGitInfo = true
[Params]
  commit = ""https://github.com/<username>/<siterepo>/tree/""
See at vincenttam/vincenttam.gitlab.io for an example of how to add it to a continuous integration system.Multilingual To allow Beautiful Hugo to go multilingual, you need to define the languages
you want to use inside the languages parameter on config.toml file, also
redefining the content dir for each one. Check the i18n/ folder to see all
languages available.[languages]
  [languages.en] 
    contentDir = ""content/en"" # English
  [languages.ja]
    contentDir = ""content/ja"" # Japanese
  [languages.br]
    contentDir = ""content/br"" # Brazilian Portuguese
Now you just need to create a subdir within the content/ folder for each
language and just put stuff inside page/ and post/ regular directories.content/      content/      content/  
└── en/       └── br/       └── ja/ 
    ├── page/     ├── page/     ├── page/
    └── post/     └── post/     └── post/
Self Hosted assets for GDPR / EU-DSGVO compliance With default settings, visiting to a website using Beautifulhugo connects also to remote services like google fonts or jsdelivr to embed fonts, js and other assets.To avoid this, set the following param in config.toml:[Params]
  selfHosted = true
Extra shortcodes There are two extra shortcodes provided (along with the customized figure shortcode):Details This simply adds the html5 detail attribute, supported on all modern browsers. Use it like this:{{< details ""This is the details title (click to expand)"" >}}
This is the content (hidden until clicked).
{{< /details >}}
Split This adds a two column side-by-side environment (will turn into 1 col for narrow devices):{{< columns >}}
This is column 1.
{{< column >}}
This is column 2.
{{< endcolumns >}}
Social Media Icons In order to show social media icons in the footer, add a section like this to your config.yaml. You can see the full list of supported social media sites in data/beautifulhugo/social.toml.author: 
  name: ""Author Name""
  website: ""https://example.com""
  github: halogenica/beautifulhugo
  twitter: username
  discord: 96VAXXvjCB
About This is an adaptation of the Jekyll theme Beautiful Jekyll by Dean Attali. It supports most of the features of the original theme, and many new features. It has diverged from the Jekyll theme over time, with years of community updates.License MIT Licensed, see LICENSE.See AlsoLightbiAcademicPaigeBootstrap-BPHugo Blox - Tailwind",NA
panr,1050,2023-06-10,MIT,"Blog, Dark, Light, Minimal, Multilingual, Personal, Responsive",hello-friend,A simple theme for Hugo. That's it.,https://github.com/panr/hugo-theme-hello-friend,NA,"Hello FriendThe theme is no longer maintained, but can still be used Even if the repository is archived you can still use the theme, fork it, download it, expand it, etc. Remember that each Hugo theme is a module that can be modified to match your needs. The theme is fully “open” and it depends only on the internal engines implemented in Hugo.The theme brings many useful features thanks to all people that contributed to it (I want to thank you all!). At the time of archiving the theme has reached 14th place on the official Hugo Themes list. This is huge! Thanks to you!DEMO - https://hugo-hello-friend.now.sh/ Hello FriendDEMO - https://hugo-hello-friend.now.sh/FeaturesBuilt-in shortcodesCode highlightingImproved RSS FeedHow to startHow to run your siteHow to configureHow to add a cover image to your postsHow to display the Last Modified Date in your postsHow to hide “Read more” buttonAdd-onsHow to edit the themeFound a bug?New cool idea or featureHello Friend theme user?LicenseFeatures dark/light mode, depending on your preferences (the theme of your operating system is default, but you can change it)great reading experience thanks to Inter font, made by Rasmus Anderssonnice code highlighting thanks to PrismJSfully responsiveBuilt-in shortcodes image (prop required: src; props optional: alt, position (left is default | center | right), style)eg: {{< image src=""/img/hello.png"" alt=""Hello Friend"" position=""center"" style=""border-radius: 8px;"" >}}figure (same as image, plus few optional props: caption, captionPosition (left | center is default | right), captionStyleeg: {{< figure src=""/img/hello.png"" alt=""Hello Friend"" position=""center"" style=""border-radius: 8px;"" caption=""Hello Friend!"" captionPosition=""right"" captionStyle=""color: red;"" >}}imgproc Hugo shortcode for image processing, plus additional position param [ left | center | right ] (optional).eg: {{< imgproc ""img/hello.png"" Resize ""250x"" center />}}More detailed info on processing commands at https://gohugo.io/content-management/image-processing/code (prop required: language; props optional: title, id, expand (default “△”), collapse (default “▽”), isCollapsed)eg:{{< code language=""css"" title=""Really cool snippet"" id=""1"" expand=""Show"" collapse=""Hide"" isCollapsed=""true"" >}}
pre {
  background: #1a1a1d;
  padding: 20px;
  border-radius: 8px;
  font-size: 1rem;
  overflow: auto;

  @media ($phone) {
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  code {
    background: none !important;
    color: #ccc;
    padding: 0;
    font-size: inherit;
  }
}
{{< /code >}}
Code highlighting By default the theme is using PrismJS to color your code syntax. All you need to do is to wrap you code like this:
```html
  // your code here
```
Supported languages: bash/shell, css, clike, javascript, apacheconf, actionscript, applescript, c, csharp, cpp, coffeescript, ruby, csp, css-extras, diff, django, docker, elixir, elm, markup-templating, erlang, fsharp, flow, git, go, graphql, less, handlebars, haskell, http, java, json, kotlin, latex, markdown, makefile, objectivec, ocaml, perl, php, php-extras, r, sql, processing, scss, python, jsx, typescript, toml, reason, textile, rust, sass, stylus, scheme, pug, swift, yaml, haml, twig, tsx, vim, visual-basic, wasm.Improved RSS Feed Some enhancements have been made to Hugo’s internal RSS generation code.A page’s cover image now appears at the top of its feed display. This image is set manually using the cover params. If unset, the RSS generator searches for the first image file in the page bundle whose name includes ‘featured’, ‘cover’, or ’thumbnail’.You can optionally display the full page content in your RSS feed (default is Description or Summary data from Front Matter). Set rssFullText = true in your config.toml file to enable this option.You can choose a site image to be displayed when searching for your RSS feed. Set rssImage = ""image/url/here"" in your config.toml file to enable this option.How to start You can download the theme manually by going to https://github.com/panr/hugo-theme-hello-friend.git and pasting it to themes/hello-friend in your root directory.You can also choose one of the 3 possibilities to install the theme:as Hugo Moduleas a standalone local directoryas a git submodule⚠️ The theme needs at least Hugo Extended v0.90.x.Install theme as Hugo Module # If this is the first time you're using Hugo Modules
# in your project. You have to initiate your own module before
# you fetch the theme module.
#
# hugo mod init [your website/module name]
hugo mod get github.com/panr/hugo-theme-hello-friend
and in your config file add:[module]
  # this is needed when you fetch the theme as a submodule to your repo.
  # replacements = ""github.com/panr/hugo-theme-hello-friend -> themes/hello-friend""
[[module.imports]]
  path = 'github.com/panr/hugo-theme-hello-friend'
Keep in mind that the theme by default won’t show up in the themes directory. This means that you are using the theme as it was on the repository at the moment you fetched it. Your local go.sum file keeps all the references. Read more about Hugo Modules in the official documentation.⚠️ If you encounter any issues with:Error: module ""hello-friend"" not found; either add it as a Hugo Module or store it in ""[...your custom path]/themes"".: module does not exist
then please try to remove theme = ""hello-friend"" from your config file.Install theme locally git clone https://github.com/panr/hugo-theme-hello-friend.git themes/hello-friend
This will clone the repository directly to the themes/hello-friend directory.Install theme as a submodule git submodule add -f https://github.com/panr/hugo-theme-hello-friend.git themes/hello-friend
This will install the repository as a sumbodule in the themes/hello-friend directory.How to run your site From your Hugo root directory run:hugo server -t hello-friend
and go to localhost:1313 in your browser. From now on all the changes you make will go live, so you don’t need to refresh your browser every single time.How to configure The theme doesn’t require any advanced configuration. Just copy:baseurl = ""/""
languageCode = ""en-us""
# Add it only if you keep the theme in the `themes` directory.
# Remove it if you use the theme as a remote Hugo Module.
theme = ""hello-friend""
paginate = 5

[params]
  # dir name of your blog content (default is `content/posts`).
  # the list of set content will show up on your index page (baseurl).
  contentTypeName = ""posts""

  # OS theme is default when not provided, but you can force it to ""light"" or ""dark""
  defaultTheme = ""dark""

  # if you set this to 0, only submenu trigger will be visible
  showMenuItems = 2

  # Show reading time in minutes for posts
  showReadingTime = false

  # Show table of contents at the top of your posts (defaults to false)
  # Alternatively, add this param to post front matter for specific posts
  # toc = true

  # Show full page content in RSS feed items
  #(default is Description or Summary metadata in the front matter)
  # rssFullText = true

[languages]
  [languages.en]
    title = ""Hello Friend""
    subtitle = ""A simple theme for Hugo""
    keywords = """"
    copyright = """"
    menuMore = ""Show more""
    writtenBy = ""Written by""
    readMore = ""Read more""
    readOtherPosts = ""Read other posts""
    newerPosts = ""Newer posts""
    olderPosts = ""Older posts""
    minuteReadingTime = ""min read""
    dateFormatSingle = ""2006-01-02""
    dateFormatList = ""2006-01-02""
    # leave empty to disable, enter display text to enable
    # lastModDisplay = """"

    [languages.en.params.logo]
      logoText = ""hello friend""
      logoHomeLink = ""/""
    # or
    #
    # path = ""/img/your-example-logo.svg""
    # alt = ""Your example logo alt text""

    [languages.en.menu]
      [[languages.en.menu.main]]
        identifier = ""about""
        name = ""About""
        url = ""/about""
      [[languages.en.menu.main]]
        identifier = ""showcase""
        name = ""Showcase""
        url = ""/showcase""
to config.toml file in your Hugo root directory and change params fields. In case you need, here’s a YAML version.NOTE: Please keep in mind that currently main menu doesn’t support nesting.How to add a cover image to your posts Adding a cover image to your post is simple and there are two options when you edit your index.md file in content/posts/blog-entry-xy/index.md:Use cover = ""/path/to/absolute/img.jpg"" to link an absolute imageResulting in https://www.yourpage.com/path/to/absolute/img.jpgUse cover = ""img.jpg"" and useRelativeCover = true to link the image relative to the blog post folderResulting in https://www.yourpage.com/posts/blog-entry-xy/img.jpgUse coverAlt = ""description of image"" to add custom alt text to the cover image (defaults to post or page title as alt text)Use coverCaption = ""Image Credit to [Barry Bluejeans](https://unsplash.com/)"" to add a caption for the cover image.How to display the Last Modified Date in your posts Add lastModDisplay = ""[your display text]"" to config.toml to enable last modified date on your posts. Note - an empty string value """" does not display anything.Example: lastModDisplay = ""Modified:"" –> “Modified: Jan 01, 0001”:octocat: Hugo’s enableGitInfo option is a nice complement to this feature.How to hide “Read more” button In a post’s front matter you have to add hideReadMore param set to true. This will result in that the post won’t have “Read more” button in the list view.Add-ons Archive — Theme has built-in archive page for main content (see contentTypeName variable in config). If you need archive on your blog just copy https://github.com/panr/hugo-theme-hello-friend/blob/master/exampleSite/content/archive.md to your content dir. If you need multilangual archives, duplicate content/archive.md and add .Lang variable, eg: content/archive.pl.md (remember to change url in duplicated file).Comments — for adding comments to your blog posts please take a look at layouts/partials/comments.html https://github.com/panr/hugo-theme-terminal/blob/master/layouts/partials/comments.html.Prepended <head> — if you need to add something inside <head> element, and before any of the theme’s <script> and <link> tags are declared, please take a look at layouts/partial/prepended_head.html https://github.com/panr/hugo-theme-hello-friend/blob/master/layouts/partials/prepended_head.htmlExtended <head> — if you need to add something inside <head> element, after all of all of the theme’s <script> and <link> tags are declared, please take a look at layouts/partial/extended_head.html https://github.com/panr/hugo-theme-hello-friend/blob/master/layouts/partials/extended_head.htmlExtended <footer> — if you need to add something before end of <body> element, please take a look at layouts/partial/extended_footer.html https://github.com/panr/hugo-theme-hello-friend/blob/master/layouts/partials/extended_footer.htmlHow to edit the theme If you are using as a remote Hugo Module (you don’t have the theme files in the theme/hello-friend) and you have to override only some of the styles, you can do this easily by adding static/style.css in your root directory and point things you want to change.If you have the theme files in the theme directory, then you can directly edit anything in the theme, you just have to go to themes/hello-friend and modify the files. No compilation step needed.Found a bug? If you spot any bugs, please use Issue Tracker or create a new Pull Request to fix the issue.New cool idea or feature? The theme is in constant development since 2019 and has got many cool features that helped many of you and made the theme better. But there were also many features that I wasn’t sure about because I want to keep the theme as simple as possible.So, let’s say you have an idea of how to extend the theme. That’s cool and you’re welcome to do that, just follow these steps:fork the themeimplement the featurewrite an instruction how to use the featuregive a working example of the implementation for other usersadd info about your work to COMMUNITY-FEATURES.mdmake a PR with edited COMMUNITY-FEATURES.mdThis will help keeping the theme close to its roots, and also allow anyone who wishes to improve it and match their needs, to do whatever they want.Sounds OK? Cool, let’s rock! 🤘Hello Friend theme user? I’d be happy to know more about you and what you are doing. If you want to share it, please make a contribution and add your site to the list! 🤗License Copyright © 2019-2022 Radosław Kozieł (@panr)The theme is released under the MIT License. Check the original theme license for additional licensing information.See AlsoAcademicAnubisColor Your WorldHugoplateLightbi",NA
theNewDynamic,993,2023-11-22,MIT,"Blog, Multilingual, Responsive",Ananke Gohugo Theme,A Base theme for building full featured Hugo sites,https://github.com/theNewDynamic/gohugo-theme-ananke,NA,"Ananke, A theme for Hugo, a framework for building websites.The intent of this theme is to provide a solid starting place for Hugo sites with basic features and include best practices for performance, accessibility, and rapid development.DEMOFeaturesResponsiveAccessibleContact formCustom Robots.txt (changes values based on environment)Internal templates for meta data, google analytics, and DISQUS or COMMENTO commentsRSS DiscoveryTable of Contents (must declare toc: true in post parameter)Stackbit configuration (Stackbit)Also includes examples of Hugo Features or Functions:Pagination (internal template)TaxonomiesArchetypesCustom shortcodeRelated contentHugo built-in menui18nwithHUGO_ENVfirstaftersortSite LanguageCodewhereContent ViewsPartialsTemplate layouts (type “post” uses a special list template, single template, and a content view)TagslenConditionalsge (greater than or equal to).Site.Params.mainSections to avoid hard-coding “blog,” etc. [release note]This theme uses the “Tachyons” CSS library. This will allow you to manipulate the design of the theme by changing class names in HTML without touching the original CSS files. For more information see the Tachyons website.Installation As a Hugo Module (recommended) ⚠️ If you installed a Hugo binary, you may not have Go installed on your machine. To check if Go is installed:$ go version
Go modules were considered production ready in v1.14. Download Go.From your project’s root directory, initiate the hugo module system if you haven’t already:$ hugo mod init github.com/<your_user>/<your_project>
Add the theme’s repo to your config.toml:theme = [""github.com/theNewDynamic/gohugo-theme-ananke""]
As Git Submodule Inside the folder of your Hugo site run:$ git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.toml. To use it, copy the config.toml in the root folder of your Hugo site. Feel free to change the strings in this theme.You may need to delete the line: themesDir = ""../..""Add comments To enable comments, add following to your config file:DISQUS:[services.disqus]
  shortname = 'YOURSHORTNAME'
COMMENTO:[params]
  commentoEnable = true
Change the hero background For any page or post you can add a featured image by including the local path in front matter (see content in the exampleSite/content/_readme.md file for examples): featured_image: '/images/gohugo-default-sample-hero-image.jpg'Featured image as Page Resources If user is using Page Resources, the theme will try and match the featured_image from with a page resource of type image and use its relative permalink. If no featured_image is set, the theme will look for a Page Resource of type image whose filepath incudes either cover or featureOther hero settings If you would like to hide the header text on the featured image on a page, set omit_header_text to true. See exampleSite/content/contact.md for an example.You don’t need an image though. The default background color is black, but you can change the color, by changing the default color class in the config.toml file. Choose a background color from any on the Tachyons library site, and preface it with “bg-”example: background_color_class = ""bg-blue"" or background_color_class = ""bg-gray""Activate the contact form This theme includes a shortcode for a contact form that you can add to any page (there is an example on the contact page in the exampleSite folder). One option is to use formspree.io as proxy to send the actual email. Each month, visitors can send you up to one thousand emails without incurring extra charges. Visit the Formspree site to get the “action” link and add it to your shortcode like this:{{< form-contact action=""https://formspree.io/your@email.com"" >}}
Read more link The homepage and other areas of the site use a read more link on the element. You can customize the copy of this link to make it more descriptive with the parameter read_more_copy available as a site and front matter parameter.# config.yaml
# Globally for all pages:
params:
  read_more_copy: Read more about this entry
# Just for french
languages:
  fr:
    name: Français
    weight: 2
    params:
       read_more_copy: En savoir plus à ce sujet
Using front matter and cascade, this can be customized for a whole section, or just for one page.# content/posts/tower-bridge-london.md
  title: The Tower Bridge of London
  read_more_copy: Read more about this bridge
Social Follow + Share The theme automatically adds “Follow” link icons to the header and footer and “Share” link icons to pages unless disable_share parameter is set to true either on the site level (site params) or page level (front matter). Each built-in services sports a label, an icon and a color.In order to register a service to be used, user must add an ananke_socials parameter to its project configuration file and list them through it in the desired order. Each entry must bear aname*: It matches the built-in service reference (Ex: twitter, github)url*: The url of the handle’s profile on the service (Ex: https://twitter.com/theNewDynamic, https://github.com/
theNewDynamic)rel: (default: noopener) Controls the rel attribute of the “follow” link. Useful for Mastodon verification which requires a rel=""me"" on the link.params:
  ananke_socials:
  - name: twitter
    url: https://twitter.com/theNewDynamic
  - name: github
    url: https://github.com/theNewDynamic
  - name: mastodon
    url: https://social.example.com/@username
    rel: me noopener
If user needs to overwrite default color and label of the service, they simply need to append the following to the entry:label: The displayed name of the service to be used to popuplate [title] attributes and read-only. (Ex: Twitter, GitHub)color: Used for styling purposes. (Ex: ‘#1da1f2’, ‘#6cc644’)params:
  ananke_socials:
  - name: twitter
    url: https://twitter.com/theNewDynamic
    label: TND Twitter
  - name: github
    url: https://github.com/theNewDynamic
    label: TND GitHub Account
    color: '#ff6800'
Limit Follow or Share If a user needs to control Share and Follow of a service, for example enabling “Share on Facebook” without having a Facebook Page to “follow”, they can set follow: false one the registered service.params:
  ananke_socials:
  - name: facebook
    label: Facebook
    follow: false
  - name: twitter
    url: https://twitter.com/theNewDynamic
    label: TND Twitter
Social Icons Customization On top of easily customizing the built-in services’ label and color, user can overwrite their icon by adding an svg file at /assets/ananke/socials with a filename matching the service’s name.
For example, in order to use your own GitHub icon, simply add an svg file at /assets/ananke/socials/github.svgBuilt-in Services Here is the list of built-in services. Those marked with an * are also part of the “Share” module.twitter*instagramyoutubegithubgitlabkeybaselinkedin*mediummastodonslackstackoverflowfacebook*rssComplement In order to add an unkown service (absent from the list above), you simply need to add all three settings to ananke_socials: name, url, label, color, and optionally add an icon file matching the name to the assets/ananke/socials directory. In the absence of an icon, the theme will print the service’s label.Content indexing If the theme is ran in production, pages will be indexed by search engines. To prevent indexing on some given pages, add private: true to its Front Matter.Update font or body classes The theme is set, by default, to use a near-white background color and the “Avenir” or serif typeface. You can change these in your config file with the body_classes parameter, like this:[params]
  body_classes = ""avenir bg-near-white""
which will give you a body class like this:<body class=""avenir bg-near-white"">
note: The body_classes parameter will not change the font used in post content. To do this, you must use the post_content_classes parameter.You can find a list of available typefaces here.And a list of background colors here.n.b. in future versions we will likely separate the typeface and other body classes.CSS Ananke stylesheet is built with Hugo Pipes’s Asset Bundling alone to maximize compatibiliy. The theme simply bundles its several files into one minified and fingerprinted (in production) CSS file.Ananke uses Tachyon.io utility class library.Custom CSS WARNING: Pending resolution of this discussion, Custom CSS only works with Hugo ExtendedIn order to complement the default CSS with your own, you can add custom css files to the project.Just add a assets/ananke/css directory to your project and add the file(s) in it.Register the files using the custom_css key in your site’s parameter. The path referenced in the parameter should be relative to the assets/ananke/css folder.The css files will be added in their registered order to final main.css file.For example, if your css files are assets/ananke/css/custom.css and assets/ananke/special.css then add the following to the config file:  [params]
    custom_css = [""custom.css"",""special.css""]
IMPORTANT: Files registered through the custom_css array, while unlimited in number, must be of the same type (Ex: all scss or all css)Note on retrocompatibiliy for custom css: If the files registered through the custom_css setting are not found in assets/ananke/css the theme will expect them to live at the given path relative to the static directory and load them as requests.Show Reading Time and Word Count If you add a key of show_reading_time true to either the Config Params, a page or section’s front matter, articles will show the reading time and word count.Adding Scripts to the Page Head Some scripts need to be added within the page head. To add your own scripts to the page head, simply insert them into the head-additions.html partial located in the layouts/partials folder.Logo You can replace the title of your site in the top left corner of each page with your own logo. To do that put your own logo into the static directory of your website, and add the site_logo parameter to the site params in your config file. For example:[params]
  site_logo = ""img/logo.svg""
Set Content Font Color You can set the font color of the main content both globally and on individual pages:Globally:
Set the text_color param in the config.toml file.[params]
  text_color = ""green""
Individual Page (prioritized over global):
Set the text_color param in a page’s markdown file front matter.note: The value of text_color must be a valid tachyons color class. A list can be found here.Localize date format Dates of blog posts and single pages are rendered with the default date format commonly used in the USA and Canada. It is possible to specify a different format.[params]
  date_format = ""2. January 2006""
With hugo 0.87.0 and above, you can also use predefined layout, like :date_full, and it will output localized dates or times.
See hugo’s documentation of the time.Format function for more details.Using a canonical url When you want to publish content that is already published on a different site. You need to reference a canonical url of the original content.
By defining the canonicalUrl in the front matter definition the canonical url is set in the headers.canonicalUrl: https://mydomain.com/path-to-the-oringinal-content/
Nearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo serverNow enter localhost:1313 in the address bar of your browser.Production To run in production (e.g. to have Google Analytics show up), run HUGO_ENV=production before your build command. For example:HUGO_ENV=production hugo
Note: The above command will not work on Windows. If you are running a Windows OS, use the below command:set HUGO_ENV=production
hugo
Contributing If you find a bug or have an idea for a feature, feel free to use the issue tracker to let me know.TODO:fix hard-coded link to sectionSee AlsoAcademicAnubisBear CubBeautiful HugoBilberry Hugo Theme",NA
James Panther,935,2023-11-26,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Personal, Responsive",congo,"A powerful, lightweight theme for Hugo built with Tailwind CSS.",https://github.com/jpanther/congo,https://jpanther.github.io/congo/,"CongoCongo is designed to be a powerful, lightweight theme for Hugo. It’s built using Tailwind CSS with a clean and minimalist design that prioritises to your content.🌏 Demo site📑 Theme documentation🐛 Bug reports & issues💡 Questions & feature requestsFeatures Fully responsive layout built with Tailwind CSS 3.0Multiple colour schemes (or fully customise your own)Dark mode (forced on/off or auto-switching with user toggle)Highly customisable configurationMultiple homepage layoutsFlexible with any content types, taxonomies and menusMultilingual content support including support for RTL languagesAbility to link to posts on third-party websitesClient-side site search powered by Fuse.jsDiagrams and visualisations using MermaidCharts using Chart.jsMathematical notation using KaTeXSVG icons from FontAwesome 6Automatic image resizing using Hugo PipesHeading anchors, Tables of Contents, Code copy, Buttons, Badges and moreHTML and Emoji support in articles 🎉SEO friendly with links for sharing to social mediaFathom Analytics and Google Analytics supportRSS feeds, Favicons and comments supportAdvanced customisation using simple Tailwind colour definitions and stylesOptimised for performance and accessibility with perfect Lighthouse scoresFully documented with regular updatesDocumentation Congo has extensive documentation that covers all aspects of the theme. Be sure to read the docs to learn more about how to use the theme and its features.Installation Congo supports several installation methods - as a Hugo Module (easiest), a git submodule, or as a completely manual install.Detailed instructions for each method can be found in the Installation docs. You should consult the documentation for the simplest setup experience. Below is a quick start guide using Hugo modules if you’re already confident installing Hugo themes.Quick start using Hugo Note: Ensure you have Go and Hugo installed, and that you have created a new Hugo project before proceeding.From your project directory, initialise Hugo Modules:hugo mod init github.com/<username>/<repo-name>
Create config/_default/module.toml and add the following:[[imports]]
path = ""github.com/jpanther/congo/v2""
Start your server using hugo server and the theme will be downloaded automatically.In the root folder of your website, delete the config.toml file that was generated by Hugo. Copy the *.toml config files from the theme into your config/_default/ folder.Note: Do not overwrite the module.toml file you created above!You will find these theme config files in the Hugo cache directory, or download a copy from GitHub.Follow the Getting Started instructions to configure your website.Installing theme updates As new releases are posted, you can update the theme using Hugo. Simply run hugo mod get -u from your project directory and the theme will automatically update to the latest release.Detailed update instructions are available in the docs.Contributing Congo is expected to evolve over time. I intend to keep adding features and making changes as required.Feel free to get in touch with any issues or suggestions for new features you’d like to see.🐛 Bug reports & issues: Use GitHub Issues💡 Ideas for new features: Open a discussion on GitHub Discussions🙋‍♀️ General questions: Head to GitHub DiscussionsIf you’re able to fix a bug or implement a new feature, I welcome PRs for this purpose. Learn more in the contributing guidelines.See AlsoBlowfishCompostHugoplateLightbiPaige",NA
reuixiy,953,2022-07-03,MIT,"Blog, Minimal, Multilingual",MemE,MemE is a powerful and highly customizable GoHugo theme for personal blogs.,https://github.com/reuixiy/hugo-theme-meme,NA,"English |
简体中文 |
繁體中文MemEDescription MemE is a powerful and highly customizable GoHugo theme for personal blogs. MemE focuses on elegance, simplicity, modernity, and code correctness. Also, I hope you would enjoy MemE like a meme and share MemE like a meme! Just like what your blog and articles do! 😝Preview Browser support MemE uses CSS variables and let statements extensively. These features are supported by the following browsers:Chrome 49+Firefox 44+Edge 15+Opera 36+Safari 10+Internet Explorer does not support CSS variables.Quick Start https://gohugo.io/getting-started/quick-start/Install Hugo (extended version) For Arch Linux users:~ $ sudo pacman -S hugo
~ $ hugo new site blog
For users of other systems, see: https://gohugo.io/getting-started/installing/Install MemE ~ $ cd blog
~/blog $ git init
~/blog $ git submodule add --depth 1 https://github.com/reuixiy/hugo-theme-meme.git themes/meme
Blogging Replace config.toml with config examples.~/blog $ rm config.toml && cp themes/meme/config-examples/en/config.toml config.toml
Create a new post and the about page:~/blog $ hugo new ""posts/hello-world.md""
~/blog $ hugo new ""about/_index.md""
Now:~/blog $ hugo server -D
Customize MemE MemE uses SCSS via Hugo Pipes to generate CSS instead of static CSS file and provides a _custom.scss for customization.Just create a ~/blog/assets/scss/custom/_custom.scss and add your own styles into this file. Your _custom.scss will override ~/blog/themes/meme/assets/scss/custom/_custom.scss and your custom CSS will be applied correctly.Actually, you can override any template of theme in Hugo, see this unofficial mirror page: https://gohugobrasil.netlify.com/themes/customizing/Update MemE ~/blog $ git submodule update --rebase --remote
If failed, try:Delete meme folder, e.g.~/blog $ rm -rf themes/meme
Clone MemE again~/blog $ git clone --depth 1 https://github.com/reuixiy/hugo-theme-meme.git themes/meme
Note that MemE makes some brand new features or breaking changes sometimes, so please be sure to check the modification history of config.toml and update the related items after the update!Awesome MemE See #2.Supported Front Matter Click to expand!NameDescriptionNotestitle*stringlinkTitle*stringsubtitledisplayed below the titlestring, Markdown supporteddate*stringlastmod*stringpublishDate*stringexpiryDate*string<taxonomies> eg: categories, tags, series*arraydescription*string, Markdown supportedsummary*string, Markdown supportedimages*arrayslug*stringurl*stringdraft*booleanisCJKLanguage*booleanweight*integertype*string, if equal to “poetry”, will use a special layout for itlayout*stringoutputs*arrayaliases*arraymarkup*stringmetaset false to disable post-metabooleantocdisplay TOCboolean, override enableTOC in config.tomltocNumdisplay TOC numberboolean, override displayTOCNum in config.tomlanchorenable headings anchorboolean, override enableHeadingsAnchor in config.tomldisplayCopyrightdisplay post-copyrightboolean, override displayPostCopyright in config.tomlbadgedisplay updated-badgeboolean, override displayUpdatedBadge in config.tomlgitinfodisplay post-gitinfoboolean, override displayPostGitInfo in config.tomlsharedisplay post-shareboolean, override displayPostShare in config.tomlrelateddisplay related-postsboolean, override displayRelatedPosts in config.tomlkatexadd KaTeX supportboolean, override enableKaTeX in config.tomlmathjaxadd MathJax supportboolean, override enableMathJax in config.tomlmermaidadd Mermaid supportboolean, override enableMermaid in config.tomlcommentsset false to disable comments in mainSections or set true to enable comments in non-mainSectionsbooleansmallCapssmall caps?boolean, override enableSmallCaps in config.tomldropCapdrop cap?boolean, override enableDropCap in config.tomldropCapAfterHrdrop cap after every horizontal rule tag?boolean, override enableDropCapAfterHr in config.tomldeleteHrBeforeDropCapdelete horizontal rule tag before drop cap?boolean, override deleteHrBeforeDropCap in config.tomlindentindent instead of margin?boolean, override paragraphStyle in config.tomlindentFirstParagraphindent the first paragraph?boolean, override indentFirstParagraph in config.tomlalignnormal, justify, centerstring, if equal to “normal”, will override enableJustify in config.tomloriginaloriginal? You can add the following 8 terms if you set false. The author is required, other optionalboolean, override original in config.tomlauthorauthor of original poststringlinklink of original poststring, URLcopyrightlicense of the poststring, Markdown supportedwebsiteauthor’s websitestringemailauthor’s emailstringmottoauthor’s descriptionstringavatarauthor’s avatarstring, URLtwitterauthor’s twitter idstringdisqus_url*string, if not set, will use Permalink as defaultdisqus_identifier*string, if not set, will use RelPermalink as defaultdisqus_title*string, if not set, will use Title as default*: see https://gohugo.io/content-management/front-matter/and https://gohugo.io/templates/internal/#configure-disqusSee AlsoEdAcademicAnubisBear CubBeautiful Hugo",NA
Thibaud Leprêtre,896,2022-08-21,GNU General Public License v3.0,"Blog, Minimal, Personal, Responsive",Tranquilpeak,A gorgeous responsive theme for Hugo blog framework,https://github.com/kakawait/hugo-tranquilpeak-theme,NA,"TranquilpeakA gorgeous responsive theme for Hugo blog framework.Alpha/Beta versions ATTENTION during alpha or beta versions breaking changes are possible on config file.You can track breaking changes label.How can I migrate my current version? Please read CHANGELOG.md.Summary GeneralFeaturesQuick startDemoDocumentationContributingShowcaseLicenseGeneral Authors: Thibaud Leprêtre (kakawait) and Louis Barranqueiro (LouisBarranqueiro)Version: 0.5.3-BETA (based on Hexo version 3.1.0)Compatibility: Hugo v0.53Features General features:Fully responsiveOptimized for tablets & mobilesConfigurable menu of the sidebarPages to filter tags, categories and archivesBackground cover imageBeautiful about pageSupport Open Graph protocolEasily customizable (fonts, colors, layout elements, code coloration, etc..)Support internationalization (i18)Posts features:Thumbnail imageCover imageResponsive videos & imagesSharing optionsNavigation menuGitHub theme for code highlighting (customizable)Image galleryTags for images (FancyBox), wide images, tabbed code blocks, highlighted text, alertsTable of contentsIntegrated services:DisqusGitlakGoogle analyticsGravatarFacebook InsightsMissing features from original Hexo version  Algolia (https://github.com/kakawait/hugo-tranquilpeak-theme/issues/8) Pagination customization tagPagination, categoryPagination and archivePagination (https://github.com/kakawait/hugo-tranquilpeak-theme/issues/17)ATTENTION following features will not be possible due to Hugo limitationsArchives pages by years /archives/2015Archives pages by month /archives/2015/01Quick start Please read user documentation, it’s short and useful to discover all features and possibilities of the theme, especially the writing posts sectionFor people who want to use the original version of Tranquilpeak without modifications (users) Go to the directory where you have your Hugo site and run:mkdir themes
cd themes
git clone https://github.com/kakawait/hugo-tranquilpeak-theme.git
After installing the Tranquilpeak theme successfully, we recommend you to take a look at the exampleSite directory. You will find a working Hugo site configured with the Tranquilpeak theme that you can use as a starting point for your site.First, let’s take a look at the config.toml. It will be useful to learn how to customize your site. Feel free to play around with the settings.More information on user documentation to install and configure the themeFor people who want to create their own version of tranquilpeak (developers) Run git clone https://github.com/kakawait/hugo-tranquilpeak-theme.gitFollow developer documentation to edit and build the themeDemo Check out Tranquilpeak theme in live : hugo-tranquilpeak-theme demoShowcase Checkout showcase https://tranquilpeak.kakawait.com/2015/06/who-is-using-tranquilpeak-hugo-theme/How can I add my site to the showcase Click here to add your blog into the showcase.Please fill the following information:public urlname (optional)description (optional)Documentation If it’s your first time using Hugo, please check Hugo official documentationFor users To install and configure the theme, consult the following documentation : user documentationFor developers To understand the code, the workflow and edit the theme, consult the following documentation : developer documentationContributing All kinds of contributions (enhancements, features, documentation & code improvements, bugs reporting) are welcome.Read guidelines for contributing for more information.Credits Hugo version of Tranquilpeak is a based on original Hexo version https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak. This version is simply a port to Hugo static site generator.License hugo-tranquilpeak-theme is released under the terms of the GNU General Public License v3.0.See AlsoCalligraphyTatBanTheme2.0eiioAcademicAnatole",NA
xianmin,875,2023-12-03,MIT,"Blog, Multilingual, Responsive",Jane,A readable theme for Hugo,https://github.com/xianmin/hugo-theme-jane,NA,"hugo-theme-jane Jane is a readable theme for Hugo. It’s a fork of hugo-theme-even with a lot of additional changes.Demo | 中文说明This theme focuses on improving the reading experience.Other Key features:Responsive and mobile friendlyMultilingual Mode supportShortcodes : image, blockquote, music, etc.Separate design for Tags & Categories PageSocial network linkingBetter Pagination, TOC, footnote behaviorUse the awesome Chroma syntax highlightingCustom css, Custom js, Custom head supportSub menu supportSearch OptimizationQuick Start Note: This tutorial assumes that you are using Hugo for the first time . Hugo is one of the most popular open-source static site generators. You can check the Hugo Official Docs for more help.1. Install Hugo Download the appropriate version for your platform from Hugo Releases. Once downloaded, the binary can be run from anywhere. Ideally, you should install it somewhere in your PATH for easy use. /usr/local/bin is the most probable location.2. Create a New Site hugo new site myBlog
The above will create a new Hugo site in a folder named myBlog.3. Use Hugo-Theme-Jane Clone this repository into themes folder:cd myBlog
git clone https://github.com/xianmin/hugo-theme-jane.git --depth=1 themes/jane
Alternative, installation as a moduleIf you have Go installed you can install the theme as a hugo module, then there will be no need to clone it into the themes folder:hugo mod init example.com/my-blog
After that, you would need to use github.com/xianmin/hugo-theme-jane as your theme and not hugo-theme-jane in your config.toml file.Copy the example site content:cp -r themes/jane/exampleSite/content ./
Copy the default site config:cp themes/jane/exampleSite/config.toml ./
Take a look at the example site:hugo server
Open http://localhost:1313/ , you will see your site running with the example content.4. Start a Blog The default config file config.toml is located in your site root directory. You can customize it to match the details of your site. Documentation about configuring Hugo can be found in the Official DocumentationThe default content files are located in the ./content/post directory.5. Generate Your Website Run hugo , this generates your website to the public/ directory by default.Nice work!If you have extra time or want to know more about Hugo , check out the awesome Hugo Official Docs .Site Configuration Take a look in the exampleSite folder.This directory contains an example config file and the content for the demo.
It serves as an example setup for you to configure to your liking.Copy the config.toml to the root directory of your website. Overwrite the existing config file if necessary.Single Post Configuration Front Matter : Hugo allows you to add front matter in yaml, toml, or json to your content files.YAML Example:---
# Common-Defined
title: ""An Example Post""
date: 2018-01-01T16:01:23+08:00
lastmod: 2018-01-02T16:01:23+08:00
draft: false
tags: [""tag-1"", ""tag-2"", ""tag-3""]
categories: [""index""]
author: ""xianmin""

# User-Defined
# You can close(false) or open(true) something for this content.
# P.S. comment can only be closed
comment: false
toc: false
# You can also define another contentCopyright
contentCopyright: '<a rel=""license noopener"" href=""https://creativecommons.org/licenses/by-nc-nd/4.0/"" target=""_blank"">CC BY-NC-ND 4.0</a>'
reward: false
mathjax: true
---
Multilingual (Language) Support Hugo-Theme-Jane supports the creation of websites with multiple languages side by side.You should define the available languages in a languages section in your site configuration.Translations are collected from the i18n/ folder.To use the translations:# use Chinese translation
defaultContentLanguage = ""zh-cn""  # Default language to use (if you set up multilingual support)
[Languages.zh-cn]
  languageCode = ""zh-cn""
To use the Multilingual Mode, see Multilingual Mode | Hugo .Contributing If you are interested in fixing issues and contributing directly to this theme, please see the document How to Contribute .There are many ways to contribute to the Jane theme:submitting pull requestsreporting issuesproviding new translationscreating suggestionscorrect inappropriate English expression (ok, my English is not good)Contributors This project exists thanks to all the people who contribute:License Hugo-theme-jane is licensed under the MIT license. Check the LICENSE file for details.See AlsoAcademicAnanke Gohugo ThemeAnubisBear CubBeautiful Hugo",NA
Vimux,827,2023-11-28,GPLv2,"Blog, Light, Multilingual, Responsive",Mainroad,"Mainroad is a responsive, clean and content-focused Hugo theme.",https://github.com/Vimux/Mainroad,https://mainroad-demo.netlify.app/,"MainroadMainroad is a responsive, simple, clean and content-focused Hugo theme based on the
MH Magazine lite theme.Demo • DocsFeatures:Responsive designMain & secondary menusWidgetized sidebarTranslations. Over 15 languages and countingConfigurable theme settings (sidebar position, author box, post navigation, highlight color) via config.tomlHugo internal templates (Open Graph, Schema, Twitter Cards, Disqus, Google Analytics)Wide cross-browser compatibilityDesktop: IE11+, Chrome, Firefox, SafariMobile: Android browser (on Android 4.4+), Safari (on iOS 7+), Google Chrome, Opera miniCustom Google Fonts support, MathJax, Table of Contents, SVG icons and much more…Installation Before starting, please be sure that you have
installed Hugo and
created a new site. After that, you are ready
to install Mainroad.From your project’s root directory, run:git clone https://github.com/vimux/mainroad.git themes/mainroad
Or, if you don’t plan to make any significant changes but want to track and update the theme, you can add it as a git
submodule via the following command:git submodule add https://github.com/vimux/mainroad.git themes/mainroad
Next, open config.toml in the base of the Hugo site and ensure the theme option is set to mainroad:theme = ""mainroad""
Configuration Config.toml example baseurl = ""/""
title = ""Mainroad""
languageCode = ""en-us""
paginate = ""10"" # Number of posts per page
theme = ""mainroad""
disqusShortname = """" # Enable Disqus comments by entering your Disqus shortname
googleAnalytics = """" # Enable Google Analytics by entering your tracking id

[Author] # Used in authorbox
  name = ""John Doe""
  bio = ""John Doe's true identity is unknown. Maybe he is a successful blogger or writer. Nobody knows it.""
  avatar = ""img/avatar.png""

[Params]
  description = ""John Doe's Personal blog about everything"" # Site description. Used in meta description
  copyright = ""John Doe"" # Footer copyright holder, otherwise will use site title
  opengraph = true # Enable OpenGraph if true
  schema = true # Enable Schema
  twitter_cards = true # Enable Twitter Cards if true
  readmore = false # Show ""Read more"" button in list if true
  authorbox = true # Show authorbox at bottom of pages if true
  toc = true # Enable Table of Contents
  pager = true # Show pager navigation (prev/next links) at the bottom of pages if true
  post_meta = [""author"", ""date"", ""categories"", ""translations""] # Order of post meta information
  mainSections = [""post"", ""blog"", ""news""] # Specify section pages to show on home page and the ""Recent articles"" widget
  dateformat = ""2006-01-02"" # Change the format of dates
  mathjax = true # Enable MathJax
  mathjaxPath = ""https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js"" # Specify MathJax path
  mathjaxConfig = ""TeX-AMS-MML_HTMLorMML"" # Specify MathJax config
  googleFontsLink = ""https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700"" # Load Google Fonts
  customCSS = [""css/custom.css""] # Include custom CSS files
  customJS = [""js/custom.js""] # Include custom JS files

  # DEPRECATED PARAMS
  subtitle = """" # Deprecated in favor of .Site.Params.logo.subtitle
  highlightColor = """" # Deprecated in favor of .Site.Params.style.vars.highlightColor

[Params.style.vars]
  highlightColor = ""#e22d30"" # Override highlight color

  # Override font-family sets
  # Take care of different quotes OR escaping symbols in these params if necessary
  fontFamilyPrimary = ""'Open Sans', Helvetica, Arial, sans-serif""
  # Secondary font-family set responsible for pre, code, kbd, and samp tags font
  fontFamilySecondary = ""SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace""

[Params.logo]
  image = ""img/placeholder.png"" # Logo image. Path relative to ""static""
  title = ""Mainroad"" # Logo title, otherwise will use site title
  subtitle = ""Just another site"" # Logo subtitle

[Params.thumbnail]
  visibility = [""list"", ""post""] # Control thumbnail visibility

[Params.sidebar]
  home = ""right"" # Configure layout for home page
  list = ""left""  # Configure layout for list pages
  single = false # Configure layout for single pages
  # Enable widgets in given order
  widgets = [""search"", ""recent"", ""categories"", ""taglist"", ""social"", ""languages""]

[Params.widgets]
  recent_num = 5 # Set the number of articles in the ""Recent articles"" widget
  categories_counter = false # Enable counter for each category in ""Categories"" widget
  tags_counter = false # Enable counter for each tag in ""Tags"" widget

[Params.widgets.social]
  cached = false # activate cache if true
  # Enable parts of social widget
  facebook = ""username""
  twitter = ""username""
  instagram = ""username""
  linkedin = ""username""
  telegram = ""username""
  github = ""username""
  gitlab = ""username""
  bitbucket = ""username""
  email = ""example@example.com""

# Custom social links
[[Params.widgets.social.custom]]
  title = ""Youtube""
  url = ""https://youtube.com/user/username""
  icon = ""youtube.svg"" # Optional. Path relative to ""layouts/partials""
  rel = ""noopener noreferrer"" # Set to false to remove the rel attribute

[[Params.widgets.social.custom]]
  title = ""My Home Page""
  url = ""https://example.com""

[Params.widgets.search]
  cached = false # activate cache if true
  url = ""https://google.com/search""
  [Params.widgets.search.input]
    name = ""sitesearch""
    pre = """"
Do not copy example config as-is. Use only those parameters that you need.For more information about all available standard configuration settings, please read
All Hugo Configuration Settings.Front Matter example ---
# Common-Defined params
title: ""Example article title""
date: ""2017-08-21""
description: ""Example article description""
categories:
  - ""Category 1""
  - ""Category 2""
tags:
  - ""Test""
  - ""Another test""
menu: main # Optional, add page to a menu. Options: main, side, footer

# Theme-Defined params
thumbnail: ""img/placeholder.png"" # Thumbnail image
lead: ""Example lead - highlighted near the title"" # Lead text
comments: false # Enable Disqus comments for specific page
authorbox: true # Enable authorbox for specific page
pager: true # Enable pager navigation (prev/next) for specific page
toc: true # Enable Table of Contents for specific page
mathjax: true # Enable MathJax for specific page
sidebar: ""right"" # Enable sidebar (on the right side) per page
widgets: # Enable sidebar widgets in given order per page
  - ""search""
  - ""recent""
  - ""taglist""
---
For more information about all available standard front matter variables, please read
Hugo Front Matter.Contributing Have you found a bug or got an idea for a new feature? Feel free to use the
issue tracker to let me know. Or make directly a
pull request, but please respect the following
contributing guide.License This theme is released under the GPLv2 license.See AlsoAcademicAnubisBeautiful HugoBootstrap Theme for Personal Blog and DocumentationsBootstrap-BP",NA
Athul Cyriac Ajay,791,2023-11-04,MIT,"Blog, Minimal, Personal, Responsive",Archie,Archie is a minimal and clean theme for hugo with a markdown-ish UI.,https://github.com/athul/archie,NA,"Archie - Hugo themeArchie is a minimal and clean theme for hugo with a markdown-ish UI.Forked from Ezhil ThemeDemo Check the Demo hosted on GitHub Pages :smile: . You can find the source code to that in the site branch of this repositoryFeature Google Analytics ScriptCalloutsTagsAuto Dark Mode(based on system theme)Dark/Light Mode toggletl:dr; frontamatterCache busting for CSS filesDisqus CommentsInstallation In your Hugo website directory, create a new folder named theme and clone the repo$ mkdir themes
$ cd themes
$ git clone https://github.com/athul/archie.git
Edit the config.toml file with theme=""archie""
For more information read the official setup guide of Hugo.Writing Posts Create a new .md file in the content/posts folder---
title: Title of the post
description:
date:
tldr: (optional)
draft: true/false (optional)
tags: [tag names] (optional)
---
Credits Forked from Ezhil Theme and Licensed under MIT License
Inspired by design of blog.jse.liConfig Options Custom CSS Custom CSS files can be included though the customcss config parameter.Note: CSS files should be placed under the assets directory e.g. assets/css/first.css.[params]
	customcss = [""css/first.css"", ""css/second.css""]
Config of the Demo Site baseURL = ""https://athul.github.io/archie/""
languageCode = ""en-us""
title = ""Archie""
theme=""archie""
copyright = ""© Athul""
# Code Highlight
pygmentsstyle = ""monokai""
pygmentscodefences = true
pygmentscodefencesguesssyntax = true

disqusShortname = ""yourDisqusShortname""

paginate=3 # articles per page

[params]
	mode=""auto"" # color-mode → light,dark,toggle or auto
	useCDN=false # don't use CDNs for fonts and icons, instead serve them locally.
	subtitle = ""Minimal and Clean [blog theme for Hugo](https://github.com/athul/archie)""
	mathjax = true # enable MathJax support
	katex = true # enable KaTeX support

# Social Tags

[[params.social]]
name = ""GitHub""
icon = ""github""
url = ""https://github.com/athul/archie""

[[params.social]]
name = ""Twitter""
icon = ""twitter""
url = ""https://twitter.com/athulcajay/""

[[params.social]]
name = ""GitLab""
icon = ""gitlab""
url = ""https://gitlab.com/athul/""

# Main menu Items

[[menu.main]]
name = ""Home""
url = ""/""
weight = 1

[[menu.main]]
name = ""All posts""
url = ""/posts""
weight = 2

[[menu.main]]
name = ""About""
url = ""/about""
weight = 3

[[menu.main]]
name = ""Tags""
url = ""/tags""
weight = 4
If you liked my work please consider supporting me on BuymeACoffeeSee AlsoAcademicAnatoleAnubisAstatineBear Cub",NA
Nuno Coracao,740,2023-12-01,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Personal, Responsive",Blowfish,"A powerful, lightweight theme for Hugo built with Tailwind CSS.",https://github.com/nunocoracao/blowfish,https://blowfish.page/,"Blowfish





Blowfish is designed to be a powerful, lightweight theme for Hugo. It’s built using Tailwind CSS with a clean and minimalist design that prioritises to your content. The theme is a fork of Congo.🌏 Demo site📑 Theme documentation💎 Merch Store🐛 Bug reports & issues💡 Questions & feature requestsFeatures Fully responsive layout built with Tailwind CSS 3.0Multiple colour schemes (or fully customise your own)Dark mode (forced on/off or auto-switching with user toggle)Highly customisable configurationFirebase integration to support dynamic dataViews count & like mechanismRelated articlesMultiple homepage layoutsMultiple authorsSeries of articlesFlexible with any content types, taxonomies and menusHeader and footer menusNested menus & sub-navigation menuMultilingual content support inlcuding support for RTL languagesAbility to link to posts on third-party websitesSupport for several shortcodes like Gallery, Timeline, GitHub cards, and CarouselsBuymeacoffee integrationClient-side site search powered by Fuse.jsDiagrams and visualisations using MermaidCharts using Chart.jsTypeIt integrationMathematical notation using KaTeXSVG icons from FontAwesome 6Automatic image resizing using Hugo PipesHeading anchors, Tables of Contents, Code copy, Buttons, Badges and moreHTML and Emoji support in articles 🎉SEO friendly with links for sharing to social mediaFathom Analytics and Google Analytics supportRSS feeds, Favicons and comments supportAdvanced customisation using simple Tailwind colour definitions and stylesOptimised for performance and accessibility with perfect Lighthouse scoresFully documented with regular updatesDocumentation Blowfish has extensive documentation that covers all aspects of the theme. Be sure to read the docs to learn more about how to use the theme and its features.Installation Blowfish supports several installation methods - as a git submodule, a Hugo Module, or as a completely manual install.Detailed instructions for each method can be found in the Installation docs. You should consult the documentation for the simplest setup experience. Below is a quick start guide using submodules if you are using git, or Hugo modules if you’re already confident installing Hugo themes.Quick start using git submodules Note: Ensure you have Git, Go, and Hugo installed, and that you have created a new Hugo project before proceeding.From your project directory, initialise git:git init
Configure Blowfish as a git submodule:git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish
In the root folder of your website, delete the config.toml file that was generated by Hugo. Copy the *.toml config files from the theme into your config/_default/ folder.You will find these theme config files in the Hugo cache directory, or download a copy from GitHub.Follow the Getting Started instructions to configure your website.Quick start using Hugo Note: Ensure you have Go and Hugo installed, and that you have created a new Hugo project before proceeding.From your project directory, initialise Hugo Modules:hugo mod init github.com/<username>/<repo-name>
Create config/_default/module.toml and add the following:[[imports]]
path = ""github.com/nunocoracao/blowfish/v2""
Start your server using hugo server and the theme will be downloaded automatically.In the root folder of your website, delete the config.toml file that was generated by Hugo. Copy the *.toml config files from the theme into your config/_default/ folder.Note: Do not overwrite the module.toml file you created above!You will find these theme config files in the Hugo cache directory, or download a copy from GitHub.Follow the Getting Started instructions to configure your website.Installing theme updates As new releases are posted, you can update the theme using Hugo. Simply run hugo mod get -u from your project directory and the theme will automatically update to the latest release.Detailed update instructions are available in the docs.Contributing Blowfish is expected to evolve over time. I intend to keep adding features and making changes as required.Feel free to get in touch with any issues or suggestions for new features you’d like to see.🐛 Bug reports & issues: Use GitHub Issues💡 Ideas for new features: Open a discussion on GitHub Discussions🙋‍♀️ General questions: Head to GitHub DiscussionsIf you’re able to fix a bug or implement a new feature, I welcome PRs for this purpose. Learn more in the contributing guidelines.Stargazers over time MastodonSee AlsoCompostHugoplateLightbiPaigePiko",NA
devcows,713,2023-05-26,MIT,"Blog, Company, Minimal, Portfolio, Responsive",Universal,A port of the Universal theme,https://github.com/devcows/hugo-universal-theme,NA,"Universal Theme for HugoUniversal is a clean and stylish website template built with Bootstrap. It stands out with its clean design and elegant typography.Demo site: https://devcows.github.io/hugo-universal-themeSponsor this project:https://paypal.me/ryanfox1985https://www.patreon.com/ryanfox1985This Hugo theme was ported from Bootstrapious for training and fun. It has a very nice and customizable landing page, a comments system by Disqus, site search by Google, contact forms by Formspree, Google Analytics, and optional widgets for the sidebar.Table of Contents Universal Theme for HugoTable of ContentsFeaturesInstallationConfigurationLanguageStyleCommentsGoogle AnalyticsLogoContact formMenuSidebar widgetsTop barBlog post thumbnailsLanding pageCarouselFeaturesTestimonialsSee moreClientsRecent postsFooterAbout usRecent postsContactMeta tagsUsageContributingLicenseThanksFeatures Responsive designCustomizable landing pageCarouselTestimonialsFeaturesCustomersRecent postsContact form by FormspreeGoogle searchDisqus commentsGoogle AnalyticsInstallation Go to the directory where you have your Hugo site and run:$ mkdir themes
$ cd themes
$ git clone https://github.com/devcows/hugo-universal-theme
For more information read the official setup guide of Hugo.Configuration After installing the Universal theme successfully, we recommend you to take a look at the exampleSite directory. You will find a working Hugo site configured with the Universal theme that you can use as a starting point for your site.First, let’s take a look at the config.toml. It will be useful to learn how to customize your site. Feel free to play around with the settings.Language Available translations are in the /i18n directory. You can configure the language modifying the following key.defaultContentLanguage = ""en""
Style You can change the color of the theme by modifying the following key.style = ""default""
Available options are: default (light-blue), blue, green, marsala, pink, red, turquoise, violet.
There is the possibility to override the CSS and set your custom styles, override this file static/css/custom.css in your site.Comments The optional comments system is powered by Disqus. If you want to enable comments, create an account in Disqus and write down your shortname.disqusShortname = ""devcows""
You can disable the comments system by leaving the disqusShortname empty.Google Analytics You can optionally enable Google Analytics. Type your tracking code in the ``.googleAnalytics = ""UA-XXXXX-X""
Leave the googleAnalytics key empty to disable it.Logo A logo can be selected, two parameters logo and logo_small can be defined. By default logo is used for medium and big screens and the logo_small value will be used when the site is rendered on small screens. Also there is the possibility to disable the logo and render a alternative text.[params]
    disabled_logo = false
    logo_text = ""Universal""

    logo = ""img/logo.png""
    logo_small = ""img/logo-small.png""
Contact form You can optionally create a contact page and include a contact form.A contact page is just like a regular Hugo page. But it must include the field id with the value contact.+++
title = ""Contact""
id = ""contact""
+++
You can enable or disable the Google Maps widget on the contact page by setting params.enableGoogleMaps to true or false in config.toml. Make sure to also provide a valid googleMapsApiKey if you decide to enable the widget – otherwise it likely won’t work. By clicking on the pin, Google Maps opens a route description with the coordinates latitude and longitude. Additionally, you can define the direction if you want to have another destination for the directions or the Google Maps entry of your company. If enableGoogleMaps is set to false on the other hand, the subsequent googleMapsApiKey, latitude, longitude and direction will be ignored.Example configuration:[params]
    enableGoogleMaps = true
    googleMapsApiKey = ""site_key_for_google_maps""

    latitude = ""-12.043333""
    longitude = ""-77.028333""
    direction = ""Desamparados Station, Distrito de Lima 15001, Peru""
Since Hugo sites are static, the contact form uses Formspree as a proxy. The form makes a POST request to their servers to send the actual email. Formspree and the submissions for the free plan are limited, checkout the plans for details.To enable the form in the contact page, just type your Formspree email in the config.toml file, and specify whether to use ajax(paid) to send request or plain HTTP POST(free). Also there is the possibility to enable a captcha using recaptcha.[params]
    email = ""your@email.com""
    contact_form_ajax = false

    enableRecaptchaInContactForm = true
    googleRecaptchaKey = ""site_key_for_google_recaptcha""
Menu You can also define the menu items that will appear in the top bar. Edit the [[params.menu]] entries to create your menu.[[params.menu]]
    name = ""Contact""
    url  = ""/contact""
    weight = 4
The weight parameter will determine the order of the menu entries. A top level menu item can contain a dropdown with
an optional image, sections and multiple columns of menu items.To create a single list of menu items in the dropdown, first give your top level menu item unique identifier:[[menu.main]]
    name       = ""Home""
    identifier = ""menu.home""
    url        = ""/""
    weight     = 1
Now create additional menu items and use the above unique identifier as the value for the parent attribute:[[menu.main]]
    name       = ""Option 1: Default Page""
    url        = ""/""
    weight     = 1
    parent     = ""menu.home""

[[menu.main]]
    name       = ""Option 2: Application""
    url        = ""/""
    weight     = 2
    parent     = ""menu.home""
It is also possible to display a dropdown menu with 4 columns. This theme supports 2 variations:4 columns of menu items with sections2 column wide image + 2 columns of menu items with sectionsTo display 4 columns of menu items, start using sections. Sections are menu items treated special by this theme:[[menu.main]]
    name       = ""All Pages""
    identifier = ""menu.allpages""
    url        = """"
    weight     = 4

[[menu.main]]
    name       = ""Home""
    identifier = ""section.ap-home""
    url        = """"
    weight     = 1
    parent     = ""menu.allpages""
    post       = 1

[[menu.main]]
    name       = ""Portfolio""
    identifier = ""section.ap-portfolio""
    url        = """"
    weight     = 1
    parent     = ""menu.allpages""
    post       = 2

[[menu.main]]
    name       = ""Shop""
    identifier = ""section.ap-shop""
    url        = """"
    weight     = 1
    parent     = ""menu.allpages""
    post       = 3

[[menu.main]]
    name       = ""Blog""
    identifier = ""section.ap-blog""
    url        = """"
    weight     = 3
    parent     = ""menu.allpages""
    post       = 4

[[menu.main]]
    name       = ""Blog Listing Big""
    url        = ""/blog/""
    weight     = 1
    parent     = ""section.ap-blog""
The above example shows a reduced version of the All Pages menu item from the example site. As you can see,
we first create menu items with an identifier starting with section.. If you create entries like this, these
will appear as section headers in your drop down.Each of these entries contain values for both the weight and post attribute. The post attribute is hijacked
to indicate in which column a section will be put in. Within a column, the weight value is respected to show the
sections top to bottom.Use to the unique section identifier (e.g. section.ap-blog) as the parent value to add a menu item to a specific
section. Using weight and post on the sections allow you to balance the columns with approximately the same
amount of entries.To display a 2 column wide image and 2 columns of menu items, the process is similar as above. However, we hijack
the url field of the top level menu item to link the image from our static assets:[[menu.main]]
    name       = ""Portfolio""
    identifier = ""menu.portfolio""
    url        = ""/img/template-homepage.png""
    weight     = 3
When a url is filled in, only column 1 and 2 (the post value in the section menu items) will be displayed.
When using an image, don’t configure section menu items in column 3 or 4. These will not be rendered.Important: Do not change the identifier key of existing menu entries!Sidebar widgets You can enable/disable the sidebar widgets that will be shown in the blog section. The following widgets are currently available:Search bar (powered by Google)Categories listTags listYou can enable/disable them under params.widgets.[params.widgets]
    search = true
    categories = true
    tags = true
Top bar The top bar is typically used to provide contact information and social links. It is disabled by default, and it can be enabled inside the params.topbar settings.[params.topbar]
    enable = true
    text = ""<p>Contact us on +420 777 555 333 or hello@universal.com.</p>""
The text shows up on the left side and accepts HTML.The social links on the right side are configured as a top-level menu.[[menu.topbar]]
    weight = 1
    name = ""GitHub""
    url = ""https://github.com/devcows/hugo-universal-theme""
    pre = ""<i class='fas fa-2x fa-github'></i>""

[[menu.topbar]]
    weight = 2
    name = ""Facebook""
    url = ""http://facebook.com""
    pre = ""<i class='fas fa-2x fa-facebook'></i>""
Menu behavior The dropdown menu is displayed by default when the user clicks on the menu item. However, you can also use the dropdown_mouse_over setting to change this behavior and use the mouse over instead.[params]
    dropdown_mouse_over = true
Blog post thumbnails After creating a new post you can define a banner by entering the relative path to the image.banner = ""img/banners/banner-4.jpg""
It must contain a relative path to the banner inside the static directory.Landing page The landing page consists in many sections that can be activated and configured individually. Let’s go through all sections from top to bottom.Carousel The carousel content is configured in the data directory.data
└── carousel
    ├── customizable.yaml
    ├── design.yaml
    ├── features.yaml
    └── multipurpose.yaml
Each carousel entry is represented as a YAML file inside data/carousel. Let’s see the customizable.yaml as an example of a carousel entry.weight: 4
title: ""Easy to customize""
description: >
  <ul class=""list-style-none"">
    <li>7 preprepared colour variations.</li>
    <li>Easily to change fonts</li>
  </ul>  
image: ""img/carousel/template-easy-code.png""
href: ""https://devcows.github.io/hugo-universal-theme/""
The weight field determines the position of the entry. title is a text-only field. The description field accepts HTML code. The image must contain the relative path to the image inside the static directory. The optional href field contains a relative or absolute url that the user will be redirected to when clicking the carousel (specific to each carousel item).Once the carousel is configured, some options can be defined like: auto play, speed, etc. in the config.toml file.[params.carouselHomepage]
    enable = true
    auto_play = true
    slide_speed = 2000
    pagination_speed = 1000
Features Features are also defined in the data directory just like the carousel:data
└── features
    ├── consulting.yaml
    ├── email.yaml
    ├── print.yaml
    ├── seo.yaml
    ├── uiux.yaml
    └── webdesign.yaml
The content of the consulting.yaml example feature file looks like this:weight: 4
name: ""Consulting""
icon: ""fas fa-lightbulb""
url: """"
description: ""Fifth abundantly made Give sixth hath. Cattle creature i be don't them behold green moved fowl Moved life us beast good yielding. Have bring.""
The meaning of the individual YAML keys is as follows:KeyDescriptionweightA means to set the order of multiple features; features with a lower weight are displayed first (left to right, top to bottom)nameThe title text below the feature icon; Markdown is supportediconThe CSS class of the feature icon; in this example we have used icons powered by FontAwesomeurlAn optional URL the feature icon should point to; if specified, the icon will become a clickable hyperlinkdescriptionA short text below the title text to describe the feature; Markdown is supportedOnce you have completed your features, enable them in the config.toml file. Also the number of elements per row can be defined, by default is 3 (choose a divisor of 12 like 2, 3, 4 or 6).[params.features]
    enable = true
    cols = 3
Testimonials Testimonials are defined in the data directory.data
└── testimonials
    ├── 1.yaml
    ├── 2.yaml
    ├── 3.yaml
    ├── 4.yaml
    └── 5.yaml
You can add as many testimonials files as you want. Be sure you fill in all fields as in the following example.text: ""One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections.""
name: ""John McIntyre""
position: ""CEO, TransTech""
avatar: ""img/testimonials/person-1.jpg""
Then, enable it in the configuration file and add a title and subtitle.[params.testimonials]
    enable = true
    title = ""Testimonials""
    subtitle = ""We have worked with many clients and we always like to hear they come out from the cooperation happy and satisfied. Have a look what our clients said about us.""
See more This section is used to provide a link to another place. It can be an external site, or a page or post within your Hugo site.You can enable it in the configuration file.[params.see_more]
    enable = true
    icon = ""far fa-file-alt""
    title = ""Do you want to see more?""
    subtitle = ""We have prepared for you more than 40 different HTML pages, including 5 variations of homepage.""
    link_url = ""http://your-site.com/more""
    link_text = ""Check other homepages""
Clients The clients section is used to show a list of logos of companies you have collaborated with. The clients are defined in the data directory as YAML files.data
└── clients
    ├── 1.yaml
    ├── 2.yaml
    ├── 3.yaml
    ├── 4.yaml
    ├── 5.yaml
    └── 6.yaml
Each client file contains the following information.name: ""customer-1""
image: ""img/clients/customer-1.png""
url: ""http://www.customer-1.com""
The name of the client. image is a relative path to the logo inside the static directory. And url is an optional field in case you want to link the logo to the client’s website.Then, you can enable the section in the configuration file.[params.clients]
    enable = true
    title = ""Our Partners""
    subtitle = ""We have proudly collaborated with the following companies.""
Recent posts The recent posts sections shows the four latest published blog posts, with their featured image and an optional summary. It defaults to show recent posts from all main sections. This is either the section with the most posts or can be set explicitly in the configuration file (see linked docs).You can enable it in the configuration file.summaryLength = 70

[params.recent_posts]
    enable = true
    title = ""From our blog""
    subtitle = ""Pellen""
    hide_summary = false
Recent posts use .Summary property and by default, Hugo automatically takes the first 70 words of your content as its summary and stores it into the .Summary page variable for use in your templates. You may customize the summary length by setting summaryLength in your site configuration.
When setting the hide_summary configuration property to true the summary will be hidden on the recent posts as well as the blogs list page.Footer In the footer there are three blocks customizables: About us, Recent posts and contact. Each block can be set via parameters.About usA text can be defined, in case there is no text defined the entire block will be hidden:[params]
    about_us = ""<p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>""
Recent postsRecent posts block can be enabled or disabled (hidden).[params.footer.recent_posts]
    enable = true
ContactIn contact section there is a button to redirect to contact page, there is the possibility to customize the url also a contact text can be defined, in case there is no text defined the entire block will be hidden:[params]
    contact_url = ""/contact""
    address = """"""<p class=""text-uppercase""><strong>Universal Ltd.</strong>
        <br>13/25 New Avenue
        <br>Newtown upon River
        <br>45Y 73J
        <br>England
        <br>
        <strong>Great Britain</strong>
      </p>
      """"""
Meta tags The following HTML metadata can be set for every page. While the default value for some of them can be defined in config.toml, all of these properties can also be set through the respective Hugo front matter variables:HTML meta name/propertyHugo front matter variableDefault variable in config.tomlarticle:authorfacebook_author-article:publisherfacebook_sitefacebook_siteauthorauthor-description / og:description / twitter:descriptiondescriptiondefaultDescriptionkeywordskeywordsdefaultKeywordsog:image / twitter:imagebannerdefault_sharing_imagetitle / og:title / twitter:titletitle-twitter:creatortwitter_author-twitter:sitetwitter_sitetwitter_siteBesides, certain Open Graph metadata is automatically set:article:published_time, article:modified_time, og:updated_time and article:expiration_time are set based on Hugo’s (predefined) front matter variables date, publishDate, lastmod and expiryDate.article:section and article:tag are set based on Hugo’s categories and tags taxonomies. Since there can only be one article:section, only the first element of the categories array is used as article:section.You can set default values for all pages in the config.toml file as below:[params]
    defaultKeywords = [""devcows"", ""hugo"", ""go""]
    defaultDescription = ""Site template made by Devcows using Hugo""
    default_sharing_image = ""img/sharing-default.png""
    facebook_site = ""https://www.facebook.com/GolangSociety/""
    twitter_site = ""GoHugoIO""
The resulting HTML will be the following:<meta name=""keywords"" content=""devcows, hugo, go"">
<meta name=""description"" content=""Site template made by Devcows using Hugo"">
<meta property=""og:description"" content=""Site template made by Devcows using Hugo"">
<meta property=""og:image"" content=""img/sharing-default.png"">
<meta property=""og:image:type"" content=""image/png"">
<meta property=""og:image:width"" content=""800"">
<meta property=""og:image:height"" content=""420"">
<meta property=""article:publisher"" content=""https://www.facebook.com/GolangSociety/"">
<meta name=""twitter:description"" content=""Site template made by Devcows using Hugo"">
<meta name=""twitter:site"" content=""@GoHugoIO"">
You can also override the default values from the config.toml by setting the respective keys in the individual pages front matter. As an example, here’s the front matter from the faq.md file in the exampleSite directory:+++
title = ""FAQ""
description = ""Frequently asked questions""
keywords = [""FAQ"",""How do I"",""questions"",""what if""]
+++
Which results in the following HTML:<title>FAQ</title>
<meta name=""keywords"" content=""FAQ,How do I,questions,what if"">
<meta name=""description"" content=""Frequently asked questions"">
<meta property=""og:description"" content=""Frequently asked questions"">
<meta name=""twitter:description"" content=""Frequently asked questions"">
If your site needs a custom Javascript library or CSS style you can override this file layouts/partials/custom_headers.html with the proper content like:<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
Usage In order to see your site in action, run Hugo’s built-in local server.$ hugo server -w
Now enter localhost:1313 in the address bar of your browser.For more information check out the official Hugo documentation.Contributing Did you find a bug or do you have an idea for a new feature? Feel free to use the issue tracker to let us know. Or make a pull request directly.License This port is released under the MIT License. Check the original theme license for additional licensing information.Thanks Thanks to Steve Francia for creating Hugo and the awesome community around the project. And also thanks to Bootstrapious for creating this awesome theme.See AlsoAcademicBeautiful HugoHugo Blox - TailwindLightbiPiko",NA
Bjørn Erik Pedersen,711,2023-09-24,Apache-2.0,"Api, Docs, Multilingual, Responsive",DocuAPI,Beautiful documentation for your API.,https://github.com/bep/docuapi,https://docuapi.netlify.app/,"DocuAPI is a beautiful multilingual API documentation theme for Hugo. This theme is built on top of the beautiful work of Robert Lord and others on the Slate project (Apache 2 License). The JS part has recently been rewritten from Jquery to AlpineJS.Visit the demo site.Use Import the theme in your Hugo config:[[module.imports]]
path = ""github.com/bep/docuapi/v2""
Note, if you want the older jQuery-version, replace the path with github.com/bep/docuapi.If you want to edit the SCSS styles, you need:The extended Hugo version.PostCSS CLI (run npm install to install requirements)See the exampleSite and more specific its site configuration for the available options.Most notable: This theme will use all the (non drafts) pages in the site and build a single-page API documentation. Using weight in the page front matter is the easiest way to control page order.If you want a different page selection, please provide your own layouts/index.html template.You can customize the look-and-feel by adding your own CSS variables in assets/scss/docuapi_overrides.scss. See the exampleSite folder for an example.Hooks You can override the layouts by providing some custom partials:partials/hook_head_end.html is inserted right before the head end tag. Useful for additional styles etc.partials/hook_body_end.html which should be clear by its name.partials/hook_left_sidebar_start.html the start of the left sidebarpartials/hook_left_sidebar_end.html the end of the left sidebarpartials/hook_left_sidebar_logo.html the log img sourceThe styles and Javascript import are also put in each partial and as such can be overridden if really needed:partials/styles.htmlpartials/js.htmlStargazers over time See AlsoAcademicAmethystBookBootstrap Theme for Personal Blog and DocumentationsDark Theme Editor",NA
nodejh,664,2023-11-03,MIT,"Blog, Minimal, Responsive",mini,"A fast, minimalist and responsive hugo theme for bloggers.",https://github.com/nodejh/hugo-theme-mini,NA,"Hugo Theme MiniEnglish | 简体中文A fast, minimalist and responsive hugo theme.Online demoExample Site SourceFeatures:FastMinimalistResponsiveArchiveTags1. Installation 1.1 As a Hugo Module (recommended) ⚠️ If you installed a Hugo binary, you may not have Go installed on your machine. To check if Go is installed:$ go version
Go modules were considered production ready in v1.14. Download Go.From your project’s root directory, initiate the hugo module system if you haven’t already:$ hugo mod init github.com/<your_user>/<your_project>
Add the theme’s repo to your config.yaml:theme: 
   - github.com/nodejh/hugo-theme-mini
1.2 As Git Submodule Inside the folder of your Hugo site run:$ git submodule add https://github.com/nodejh/hugo-theme-mini.git themes/mini
Add the theme’s directory to your config.yaml:theme: mini
For more information read the official setup guide of Hugo.2. Getting started After installing the theme successfully it requires a just a few more steps to get your site running.2.1 The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.yaml. To use it, copy the config.yaml in the root folder of your Hugo site. Feel free to change the strings in this theme.⚠️ You may need to delete the line: themesDir: ../../2.2 Default Content Language You can set default content language by defaultContentLanguage:defaultContentLanguage: en
Default is en. Now support:en: Englishzh: Chinesenl: Dutchfr: Frenches: Spanishda: DanishMore about multiple languages: Multilingual Mode.2.3 Add Comments To enable comments, add following to your config file:Disqus shortname: disqusShortname: your-disqus-shortnameEnable Comment:params:
  enableComments: true
2.4 Google Analytics To enable google analytics, add following to your config file:Google Analytics ID: googleAnalytics: your-google-analytics-idEnable Google Analytics:params:
  enableGoogleAnalytics: true
2.5 Logo and favicon You can replace the log in the top of each page and favicon with your own images. To do that put your own logo and favicon into the images directory of your website static directory, then named them avatar.png and favicon.ico. For example:- content
- static
└── images
    ├── avatar.png
    └── favicon.ico
2.6 Nearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo server
Now enter http://localhost:1313 in the address bar of your browser.2.7 Production To run in production (e.g. to have Google Analytics show up), run HUGO_ENV=production before your build command. For example:HUGO_ENV=production hugo
Note: The above command will not work on Windows. If you are running a Windows OS, use the below command:set HUGO_ENV=production
hugo
3. Optional Configuration 3.1 Table of Content To enable table of content, you could set showToc to true.For example:showToc: true
3.2 Disable Comments on a single post You can set enableComments to false in front matter to disable disqus comments on a single post.For example:---
title: Some title
enableComments: false
---
3.3 Custom CSS and JS You can put your custom css and js files to static directory, or use remote css and js files which start with http:// or https://.For example:customCSS:
  - css/custom.css # local css in `static/css/custom.css`
  - https://example.com/custom.css # remote css
customJS:
  - js/custom.js # local js in `static/js/custom.js`
  - https://example.com/custom.js # remote js
3.4 Math Typesetting Mathematical notation is enabled by KaTeX.To enable KaTex globally set the parameter math to true in project’s configurationTo enable KaTex on a per page basis include the parameter math to true in content files3.5 Hidden Post Summary in Home Page To hidden post summary in home page, you could set hiddenPostSummaryInHomePage to true, default is false.For example:hiddenPostSummaryInHomePage: true
License MITSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
PCloud,646,2023-04-14,MIT,"Blog, Dark, Responsive",DoIt,"A Clean, Elegant but Advanced Hugo Theme for Hugo.",https://github.com/HEIGE-PCloud/DoIt,https://hugodoit.pages.dev,"DoIt Theme | HugoEnglish README | 简体中文说明DoIt is a clean, elegant and advanced blog theme for Hugo.It is based on the LoveIt Theme, LeaveIt Theme and KeepIt Theme.The DoIt theme inherits the excellent functions of these themes, and adds new functions and optimizations on this basis. Please read Why Choose DoIt to learn more.The goal of DoIt theme is to create a powerful and easy-to-use Hugo theme, so you can go straight into your blog content creation and just do it without worrying about the complex technical details.Getting started Head to this documentation page for a complete guidence to get started with the DoIt theme.Migrate from LoveIt If you are currently using the LoveIt theme, it is very easy to migrate to DoIt.You can add this repo as a submodule of your site directory.git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt
And later you can update the submodule in your site directory to the latest commit using this command:git submodule update --remote --merge
Alternatively, you can download the latest release .zip file of the theme and extract it in the themes directory. (Not recommended, the repo is being updated frequently so the releases may out of date.)Next, go to the config.toml and change the default theme to DoIt.- theme = ""LoveIt""
+ theme = ""DoIt""
Now the migration is finished and everything is ready 🎉Many new features and configurations have been added to the DoIt theme, check the changelog and documentation for more information.Demo Site To see this theme in action, here is a live demo site which is rendered with DoIt theme.Why choose DoIt Custom HeaderCustom CSS StyleA new home page, compatible with the latest version of HugoA lot of style detail adjustments, including color, font size, margins, code preview styleMore readable dark modeSome beautiful CSS animationsEasy-to-use and self-expanding table of contentsMore social links, share sites and comment systemSearch supported by algolia or Fuse.jsCopy code to clipboard with one clickExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagram syntax shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSEmbedded music player supported by APlayer and MetingJSBilibili player supportedKinds of admonitions shortcode supportedCustom style shortcodes supportedCDN for all third-party libraries supportedMulitple Authors supported&mldr;In short,
if you prefer the design language and freedom of the DoIt theme,
if you want to use the extended Font Awesome icons conveniently,
if you want to embed mathematical formulas, flowcharts, music or Bilibili videos in your posts,
the DoIt theme may be more suitable for you.Features Performance and SEO Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed InsightsOptimized SEO performance with a correct SEO SCHEMA based on JSON-LDGoogle Analytics supportedFathom Analytics supportedBaidu Analytics supportedUmami Analytics supportedPlausible Analytics supportedCloudflare Web Analytics supportedSplitbee Analytics supportedSearch engine verification supported (Google, Bind, Yandex and Baidu)CDN for third-party libraries supportedAppearance and Layout Responsive layoutLight/Dark/Black modeGlobally consistent design languagePagination supportedEasy-to-use and self-expanding table of contentsMultilanguage supported and i18n readyBeautiful CSS animationBrand new Page Layout optimized for wide screensCompatibility for PWASocial and Comment Systems Gravatar supported by GravatarLocal Avatar supportedUp to 64 social links supportedUp to 28 share sites supportedDisqus comment system supported by DisqusGitalk comment system supported by GitalkValine comment system supported by ValineWaline comment system supported by WalineFacebook comments system supported by FacebookTelegram comments system supported by Telegram CommentsCommento comment system supported by CommentoUtterances comment system supported by UtterancesTwikoo comment system supported by TwikooVssue comment system supported by VssueRemark42 comment system supported byRemark42giscus comment system supported by giscusExtended Features Search supported by algolia or Fuse.jsTwemoji supportedAutomatically highlighting codeCopy code to clipboard with one clickImages gallery supported by lightgallery.jsExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagrams shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSMusic player shortcode supported by APlayer and MetingJSBilibili player shortcodeKinds of admonitions shortcodeCustom style shortcodeCustom script shortcodeCustom friend shortcodeAnimated typing supported by TypeItDynamic scroll supported by native CSSCookie consent banner supported by cookieconsentOption to cache remote images&mldr;Documentation Build Documentation Locally:hugo server --source=exampleSite
Multilingual and i18n DoIt supports the following languages:EnglishSimplified ChineseFrenchPolishBrazilian PortugueseItalianSpanishGermanSerbianRussianRomanianVietnameseContribute with a new languageLanguages CompatibilityRoadmap Changelog Questions, ideas, bugs, pull requests All feedback is welcome! Head over to the issue tracker.License DoIt is licensed under the MIT license. Check the LICENSE file for details.Thanks to the authors of following resources included in the theme:normalize.cssFont AwesomeSimple IconsAnimate.cssautocomplete.jsalgoliasearchFuse.jsobject-fit-imagesTwemojilightgallery.jsclipboard.jsSharer.jsTypeItKaTeXmermaidEChartsMapbox GL JSAPlayerMetingJSGitalkValineWalineTwikooVssueRemark42cookieconsentAuthor PCloudSee AlsoAcademicAnatoleAnubisAstatineAutoPhugo",NA
Huabing Zhao,627,2023-09-04,Apache,"Blog, Light, Minimal, Responsive",Clean White,"A clean, elegant blog theme for hugo",https://github.com/zhaohuabing/hugo-theme-cleanwhite,NA,"Clean White Theme for HugoCleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live demo site using this theme.It is based on huxblog Jekyll Theme
and Clean Blog Jekyll Theme.These two upstream projects have done awesome jobs to create a blog theme, what I’m doing here is porting it to Hugo, of which I like the simplicity and the much faster compiling speed. Some other features which I think could be useful, such as site search with algolia and proxy for Disqus access in China, have also been built in the CleanWhite theme. Other fancy features of upstream projects are not supported by this Hugo theme, I’d like to make it as simple as possible and only focus on blog purpose, at least for now.
While I created this theme, I followed the Hugo theme best practice and tried to make every part of the template as a replaceable partial html, so it could be much easier for you to make your customization based on it.Screenshots Home
Post
Search
Archive
Disqus
Wechat Pay & Alipay
Mind Map
Bilibili Video
Quick Start The simplest way is to start with the example site coming with this theme, then you can play around and add your own stuff.$ mkdir test
$ cd test
$ mkdir themes
$ cd themes
$ git clone https://github.com/zhaohuabing/hugo-theme-cleanwhite.git
$ cp -r hugo-theme-cleanwhite/exampleSite/** ../
$ cd ..
$ hugo serve
If your site is already a git project, you may want to choose to add the cleanwhite theme as a submodule to avoid messing up your existing git repository.$ mkdir themes
$ git submodule add https://github.com/zhaohuabing/hugo-theme-cleanwhite.git themes/hugo-theme-cleanwhite
Run Hugo Build-in Server Locally$ hugo serve -t  hugo-theme-cleanwhite
Now enter localhost:1313 in the address bar of your browser.If you start from scratch, there is a working Hugo site configured with the CleanWhite theme in the exampleSite directory. You can use it as a starting point for your site.For more information read the official setup guide of HugoConfiguration First, let’s take a look at the config.toml. It will be useful to learn how to customize your site. Feel free to play around with the settings.Comment Systems The following comment systems have been supported by this theme:Giscus Giscus is a comment system powered by GitHub Discussions.Install the Giscus app on your GitHub repo, and set the parameters as below:  [params.giscus]
  data_repo=""your GitHub repo""
  data_repo_id=""your repo id""
  data_category=""your category""
  data_category_id=""your category id""
  data_mapping=""pathname""
  data_reactions_enabled=""1""
  data_emit_metadata=""0""
  data_theme=""light""
  data_lang=""en""
  crossorigin=""anonymous""
Disqus To enable Disqus, create an account in Disqus and write down your shortname.disqusShortname = ""your-disqus-short-name""
Disqus behind a proxy If Disqus can’t be directly accessed, we can set up a proxy with disqus-php-api in a host which sets between the client browser and the Disqus server. The idea is that if Disqus can be reached in the guest network, the blog page will show the original Disqus comments UI, otherwise, it will downgrade and use the proxy to access the Disqus, the UI will be a little different, but the visitors can still write their comments on the page.The client side java script has already been integrated to CleanWhite them, but you need to set up a proxy server yourself.The proxy is written in php, which can be found here: https://github.com/zhaohuabing/disqus-php-api/tree/master/apiYou need to specify your Disqus account information in the config.php.define('PUBLIC_KEY', '');
define('SECRET_KEY', '');
define('DISQUS_USERNAME', '');
define('DISQUS_EMAIL', '');
define('DISQUS_PASSWORD', '');
define('DISQUS_WEBSITE', '');
define('DISQUS_SHORTNAME', '');
Set the proxy server address in the site config file of your Hugo project.disqus_proxy = ""http://yourdisqusproxy.com""
Twikoo Twikoo is a simple, safe, free comment system based on Tencent CloudBase (tcb).To deploy Twikoo, please refer to the installation guide on the twikoo website.Just enter the twikoo env_id in the configuration file to connect your blog to the deployed Twikoo. twikoo_env_id = ""your twikoo env id""
Site Search with Algolia Follow this tutorial to create your index in Algolia. The index is just the storage of the indexing data of your site in the the cloud . The search page of CleanWhite theme will utilize this indexing data to do the search.Go to the directory where you have your Hugo site and run the following commands:$ npm init
$ npm install atomic-algolia --save
Next, open up the newly created package.json, where we’ll add an NPM script to update your index at Algolia. Find “scripts”, and add the following:""algolia"": ""atomic-algolia""
Algolia index output format has already been supported by the CleanWhite theme, so you can just build your site, then you’ll find a file called algolia.json in your public directory, which we can use to update your index in Algolia.
Generate index file:$ hugo
Create a new file in the root of your Hugo project called .env, and add the following contents:ALGOLIA_APP_ID={{ YOUR_APP_ID }}
ALGOLIA_ADMIN_KEY={{ YOUR_ADMIN_KEY }}
ALGOLIA_INDEX_NAME={{ YOUR_INDEX_NAME }}
ALGOLIA_INDEX_FILE={{ PATH/TO/algolia.json }}
Make sure double curly braces be replaced together.Now you can push your index to Algolia by simply running:$ npm run algolia
Add the following variables to your hugo site config so the search page can get access to algolia index data in the cloud:algolia_search = true
algolia_appId = {{ YOUR_APP_ID }}
algolia_indexName = {{ YOUR_INDEX_NAME }}
algolia_apiKey = {{ YOUR_SEARCH_ONLY_KEY }}
Open search page in your browser: http://localhost:1313/searchAnalytics You can optionally enable Google or Baidu Analytics. Type your tracking code in thegoogleAnalytics = ""G-XXXXX""
ba_track_id  = ""XXXXXXXXXXXXXXXX""
Leave the googleAnalytics or ‘ba_track_id ’ key empty to disable it.Wechat Pay & Alipay Rewards You can enable Wechat Pay & Alipay to allow readers send you money. So if they like your articles, you may even get rewards from your writing. Now you must be motivated to write more.Enable Wechat Pay & Alipay in the site configreward = true
Replace the QR codes of Wechat Pay & Alipay by overriding the photos in folder /static/img/reward/, otherwise the money will be sent to my accounts!Enable Wechat Pay & Alipay in the site configreward = true
Mind Map Mind Map is supported with shortcode ‘mind’, instering the following code snippet into your markdown file can create a mind map showing in the screenshots.{{% mind %}}
- Root
    - Level 1
        - Level 2
        - Level 2
            - Level 3
            - Level 3
                - Level 4
                    - Level 5
                        - Level 6
    - Level 1
        - Level 2
        - Level 2
     - Level 1
        - Level 2
        - Level 2
     - Level 1
        - Level 2
        - Level 2
     - Level 1
        - Level 2
        - Level 2
{{% /mind %}}
Embedded Videos Use the below hugo shortcodes to embed videos into your posts.Bilibili (B站){{< bilibili BV1kZ4y137gv >}}
Youtube{{< youtube cllc1ZGlhsQ >}}
Vimeo{{< vimeo 146022717 >}}
Plantuml Plantuml support can be enabled at site or page level by adding the following line in the config.yaml or page header.plantuml: true
Then you can just put plantuml source code in markdown files and the picture will be generated automatically.An example:
```plantuml
@startuml
Alice -> Bob: Authentication Request
Bob --> Alice: Authentication Response

Alice -> Bob: Another authentication Request
Alice Thanks Thanks for the great jobs of huxblog Jekyll Theme and Clean Blog Jekyll Theme which are the the two upstream projects CleanWhite Hugo theme is based on.Feedback If you find any problems, please feel free to raise an issue or create a pull request to fix it.If it’s helpful for you, I would appreciate it if you could star this repository, thanks!Who is using cleanwhite？(谁在使用 cleanwhite？) Sincerely thank everyone who constantly keeps on using and supporting cleanwhite. Feel free to leave a comment on this issue to include information about your blog.See AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Yihui Xie,627,2023-08-08,MIT,"Blog, Minimal, Personal",XMin,"eXtremely Minimal Hugo theme: about 150 lines of code in total, including HTML and CSS",https://github.com/yihui/hugo-xmin,NA,"HUGO XMINKeep it simple, but not simpler XMin is a Hugo theme written by Yihui Xie in about four hours: half an hour was spent on the Hugo templates, and 3.5 hours were spent on styling. The main motivation for writing this theme was to provide a really minimal example to beginners of Hugo templates. This XMin theme contains about 130 lines of code in total, including the code in HTML templates and CSS (also counting empty lines).find . -not -path '*/exampleSite/*' \( -name '*.html' -o -name '*.css' \) | xargs wc -l
       5 ./layouts/404.html
      12 ./layouts/_default/single.html
      20 ./layouts/_default/list.html
      13 ./layouts/_default/terms.html
       0 ./layouts/partials/foot_custom.html
       0 ./layouts/partials/head_custom.html
       9 ./layouts/partials/footer.html
      20 ./layouts/partials/header.html
      51 ./static/css/style.css
       7 ./static/css/fonts.css
     137 total
I can certainly further reduce the code, for example, by eliminating the CSS, but I believe a tiny bit of CSS can greatly improve readability. You cannot really find many CSS frameworks that only contain 50 lines of code.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Alexander Bilz,625,2023-05-13,MIT,"Blog, Dark, Minimal, Personal, Responsive",Anatole,Anatole is a beautiful minimalist two-column hugo theme based on farbox-theme-Anatole.,https://github.com/lxndrblz/anatole,https://anatole-demo.netlify.app/,"Anatole Hugo Theme  Anatole is a beautiful minimalist two-column hugo theme based on farbox-theme-Anatole.Demo A live demo of the theme can be found under the following domain:
https://anatole-demo.netlify.app/Features Anatole’s aims to be minimalistic and sleek but still brings some great functionality, including:Dark modeMultilingualRTL supportPortfolio (optional)Post Thumbnails (optional)100⁄100 Google Lighthouse scoreAnalytics powered by Google Analytics, Simple Analytics and Umami (optional)Comments powered by Disqus, Commento, Gitalk or Utteranc.es (optional)KaTex support (optional)Formspree Contact Form (optional)Twitter Cards supportOpen Graph supportGoogle Fonts supportCustom JavaScript and CSS (optional)Compliant to strict CSPPost SeriesMermaid diagram support (optional)Preview the Example Site git clone https://github.com/lxndrblz/anatole.git anatole
cd anatole/exampleSite
hugo server --themesDir ../..
Documentation 🚧 The documentation has moved!The latest documentation for the theme can be found within the Wiki Tab on GitHub.License Anatole is licensed under the MIT license.Contributions This theme is maintained by its author Alexander Bilz and with the help from these awesome contributors. All contributions (including features, translations, code cleanups, improved documentation & bugs reporting) are welcome.Read the guidelines for more information about contributing to this project.Sponsoring If you like this theme, give it a star on GitHub, and consider supporting its development:Special Thanks 🎁 Go to Cai Cai, for the great Anatole Farbox theme that formed the foundation for this theme.Go to Kareya Saleh for providing the profile picture used in the exampleSite.Go to Petri R for providing the portfolio picture used in the exampleSite.Go to Ales Krivec for providing the thumbnail picture used in the exampleSite image-test post.Go to Tobias Ahlin for his SpinKit that is used in the exampleSite redirect post.Go to FontAwseome for providing the icons used in this project.See AlsoAcademicAnubisAstatineBear CubBlonde",NA
Josh Dzielak,622,2023-06-21,MIT,NA,reveal-hugo,NA,https://github.com/dzello/reveal-hugo,NA,"reveal-hugo

A Hugo theme for Reveal.js that makes authoring and customization a breeze. With it, you can turn any properly-formatted Hugo content into a HTML presentation.⚠️ The latest version of this theme requires hugo version >= v0.93.0. If you need compatibility with an earlier version, try a previous release.Example Using reveal-hugo, presentations with multiple slides can be created with just one markdown file, like so:+++
title = ""How to say hello""
+++

# English
Hello.

---

# Français
Salut.

---

# Español
Hola.
Just use --- surrounded by blank lines to split content into different slides.Documentation Visit reveal-hugo.dzello.com to see a presentation created with this theme and learn about all of the different functionality available to you.For a full-length blog post about reveal-hugo, checkout Harness the Power of Static Site Generators to Create Presentations on the Forestry.io blog.Demos Jump to the exampleSite folder in this repository to see the source code for the above presentation and several more. Here are links to those presentations live:logo-example - Shows how to add a logo to your presentationcustom-theme-example - Uses Hugo pipes to compile and use a custom Reveal.js SCSS theme (recommended!)section-example - Very basic example that shows how to create a presentation for a Hugo sectionplugin-example - Shows how to add additional Reveal.js plugins to your presentation, for example an image gallerytemplate-example - An example of using the slide shortcode with powerful templatesbundle-example - An example of creating a presentation from one or more markdown files in a leaf bundlehugo-hl-example - An example of using Hugo’s compile-time syntax highlighterhighlightjs-linenumbers-example - An example of using the multiline and multi-step capabilities of highlight.jsStarter repository If you want to start creating a presentation right away, clone the programming-quotes repository and start hacking.Tutorial: Create your first presentation You should be able to complete this section with no prior knowledge of Hugo or Reveal.js. At the end, you’ll have a working presentation with instant reloading.Create a hugo skeleton site To start, install Hugo and create a new Hugo site:hugo new site my-presentation
Change into the directory of the new site:cd my-presentation
Initialize a git repository:git init
Get the reveal-hugo theme Method 1 (recommended): use theme as hugo module Turn your new skeleton site into a hugo module by issuing this command from site root:hugo mod init github.com/me/my-presentation
Declare the reveal-hugo theme module as a dependency of your site:hugo mod get github.com/dzello/reveal-hugo
Open config.toml and add the following line:theme = [""github.com/dzello/reveal-hugo""]
Method 2 (traditional): use theme as git submodule Add the reveal-hugo theme as a submodule in the themes directory:git submodule add git@github.com:dzello/reveal-hugo.git themes/reveal-hugo
Open config.toml and add the following line:theme = [""reveal-hugo""]
Configure your presentation Add some more contents to your config.toml:[markup.goldmark.renderer]
unsafe = true

[outputFormats.Reveal]
baseName = ""index""
mediaType = ""text/html""
isHTML = true
This tells Hugo to use the reveal-hugo theme and it registers a new output format called “Reveal”.Next, create a file in content/_index.md and add the following:+++
title = ""My presentation""
outputs = [""Reveal""]
+++

# Hello world!

This is my first slide.
Back on the command line, run:$ hugo server
Navigate to http://localhost:1313/ and you should see your presentation.To add more slides, just add content to _index.md or create new markdown files in content/home. Remember that each slide must be separated by --- with blank lines above and below.# Hello world!

This is my first slide.

---

# Hello Mars!

This is my second slide.
Cloning an existing repository (method 2 only) If you have an existing repository that was setup with the above steps, you have to pull in the theme submodule after cloning your repository using the following command:git submodule update --init
Theme update (method 1 only) When making use of reveal-hugo theme as hugo module, updating your theme is really easy:At the command prompt, change to the root directory of your existing site.cd /path/to/my-presentation
Then invoke hugo’s module get subcommand with the update flag -u:hugo mod get -u github.com/dzello/reveal-hugo
Hugo will automatically pull in the latest theme version. That’s it, your update is done!Usage The Usage guide is contained in the example presentation that lives in this repository in the exampleSite directory. You can access a live version at reveal-hugo.dzello.com.Root vs. section presentations Here’s what the folder structure would look like with one root presentation and one section presentation.- content
  - home # special section for appending to root presentation
    - body.md # appends to the root presentation
    - conclusion.md # appends to the root presentation
  - _index.md # beginning of the root presentation
  - ted-talk
    - _index.md # beginning of the ted talk presentation
    - body.md # appends to the ted talk presentation
    - conclusion.md # appends to the ted talk presentation
This will create two presentations, one at / and one at /ted-talk/. The order that slides are appended to each can be controlled by the weight parameter specified in each file’s front matter. The slides in _index.md will always come first, though you don’t have to put any slides in there if you want to.Shortcodes reveal-hugo comes with a variety of shortcodes that help you take advantage of some very useful Reveal.js features.fragment shortcode Wrap any content in the fragment shortcode and it will appear incrementally. Great for bulleted lists where you want one bullet point at a a time to appear.- {{% fragment %}}One{{% /fragment %}}
- {{% fragment %}}Two{{% /fragment %}}
- {{% fragment %}}Three{{% /fragment %}}
frag shortcode Like fragment but more terse - content is placed inline in a self-closing shortcode.- {{< frag c=""One"" >}}
- {{< frag c=""Two"" >}}
- {{< frag c=""Three"" >}}
slide shortcode The slide shortcode lets you set custom HTML and Reveal.js attributes for each slide - things like id, class, transition, background just to name a few. The names are the same as Reveal.js but without the ‘data-’ prefix.Add the shortcode above the slide content, below the --- separator. Do not place content inside of the shortcode.---

{{< slide id=""hello"" background=""#FFF"" transition=""zoom"" transition-speed=""fast"" >}}

# Hello, world!

---
Here’s a list of documented slide attributes from the Reveal.js docs:autoslidestatebackgroundbackground-colorbackground-imagebackground-sizebackground-positionbackground-repeatbackground-videobackground-video-loopbackground-video-mutedbackground-interactivebackground-iframebackground-transitiontransition (can have different in and out transitions)transition-speednotes (can also use the note shortcode)timingYou can also pass through your own, a data- prefix will be added automatically to each one (except for id and class).section shortcode To create groups of slides that can be navigated vertically, surround your markdown with the section shortcode.{{% section %}}

# Vertical slide 1

---

# Vertical slide 2

{{% /section %}}
note shortcode Add speaker notes for each slide with the note shortcode.{{% note %}}
Don't forget to thank the audience.
{{% /note %}}
💡 Tip: you can also add notes by adding a note attribute to the slide shortcode.markdown shortcode Markdown surrounded by the markdown shortcode will not be rendered by Hugo but by Reveal.js itself. This is useful if you want to use some native Reveal.js markdown syntax that isn’t supported by reveal-hugo.{{% markdown %}}
# I'm rendered...
...by Reveal.js
{{% /markdown %}}
Maths and equations (via MathJax) Option 1: math code block You can author your equation inside a math code block:```math
\tag*{(1)} P(E) = {n \choose k} p^k (1-p)^{n-k}
```
Use of the code block will automatically activate needed MathJax script for equation display.If you want to use inline equations (like $E=mc^2$) wrap your math content in two single-$:Albert Einstein's famous formula: $E=mc^2$
If you want to use inline equations and no math code block for auto activation is present in your slides, you need to manually enable MathJax by setting the parameter math to true in your page frontmatter.Option 2: math shortcode Alternatively, you can author your equation inside a math shortcode:{{< math >}}
\tag*{(1)} \frac{n!}{k!(n-k)!} = \binom{n}{k}
{{< /math >}}
Use of the shortcode will automatically activate needed MathJax script for equation display.For inline equations (like $E=mc^2$) use the self closing form of the math shortcode:Albert Einstein's famous formula: {{< math ""E=mc^2"" />}}
For the sake of brevity, the inline content can be given as unnamed first shortcode parameter, as in the code fragment above. In a more concise form, the math content can also be assigned to a named shortcode parameter inline: {{< math inline=""E=mc^2"" />}}.HTML slides If you need to create fancier HTML for a slide than you can do with markdown, just add data-noprocess to the <section> element.<section data-noprocess>
  <h1>Hello, world!</h1>
</section>
Reusable slides and sections Sometimes you need to reuse a slide in the same presentation or across different presentations. reveal-hugo makes use of Hugo data templates to make both cases easy.To create reusable slides, create a TOML (or JSON or YAML) file in your site’s data directory. Give it a name that reflects its content or just slides.toml. In that file, add a key for each reusable slide. The name should reflect the slide’s content and the value should be the slide’s markdown.thankyou = '''

# Thank you!

Any questions?

'''
💡 Tip: TOML’s multiline string syntax comes in handy here, note the ‘’’.Each key can contain one or more slides separated by --- and newlines. That way you can create reusable sections.thankyou = '''

# Thank you!

---

Any questions?

'''
To render a slide from a data template, use the slide shortcode with a content attribute:{{% slide content=""slides.thankyou"" /%}}
The part before the “.” is the name of the file in the data directory. The part after the dot is the key to look up in that file.You can use all the additional slide shortcode attributes. They will be applied to every slide in the data template.Configuration Customize the Reveal.js presentation by setting these values in config.toml or the front matter of any presentation’s _index.md file.reveal_hugo.theme: The Reveal.js theme used; defaults to “black”reveal_hugo.custom_theme: The path to a locally hosted Reveal.js theme in the static or assets folderreveal_hugo.custom_theme_compile: If set to true, the theme will be compiled with Hugo pipes (and must live in the assets folder)reveal_hugo.custom_theme_options: Provide a dictionary to customize theme compilation, see Hugo’s SCSS docs for a list of optionsreveal_hugo.highlight_theme: The highlight.js theme used; defaults to “default”reveal_hugo.reveal_cdn: The location to load Reveal.js files from; defaults to the reveal-js folder in the static directory to support offline development. To load from a CDN instead, set this value to https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.7.0 or whatever CDN you prefer.reveal_hugo.highlight_cdn: The location to load highlight.js files from; defaults to to the highlight-js folder in the static directory to support offline development. To load from a CDN instead, set this value to https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0 or whatever CDN you prefer.reveal_hugo.load_default_plugins: If set to true (default), the plugins included by default are loaded. These are markdown, highlight.js, notes and zoom.reveal_hugo.plugins: (see below) An array of additional Reveal.js plugins to load. The appropriate files will need to have been copied into the static or content directory. See here for a big list of plugins you can try. The original implementation used to accept an array of javascript files (e.g. [""plugin/gallery/gallery.plugin.js""]), but now reveal-hugo can fully load plugin javascript and css. To enable this mode, You need to provide an array of plugin definition objects with name, source and an optional css, verbatim and order fields. Reveal-hugo will try to load the plugins at the path specified by source. If verbatim=true is used, the path is tried as-is. Otherwise, the path is resolved from the content dir or static dir. Finally, the reveal_cdn is prepended to the path if no other conditions are satisfied. The order field controls the order of javascript loading and will seldomly used. See plugin-example for a plugin walkthrough.This is how parameters will look in your config.toml:[params.reveal_hugo]
theme = ""moon""

# the following supposes that menu is accessible in static dir
[[params.reveal_hugo.plugins]]
# Name the plugin. This should be the same name used to register a reveal-js plugin,
# for example: `RevealMenu`, `RevealNotes`
name = ""RevealMenu""
source = ""menu/menu.js""
css = ""menu/menu.css""
# verbatim = true # should the css and source paths be used as-is ?
# order = 6 # control the order in which the plugin should be used.
Or in the front matter of an _index.md file:[reveal_hugo]
theme = ""moon""

[[reveal_hugo.plugins]]
name = ""gallery""
source = ""plugin/gallery/gallery.plugin.js""
css = ""plugin/gallery/gallery.css""
Include any other attributes in those sections that you’d like to be fed as arguments to Reveal.initialize in snakecase, so slide_number instead of slideNumber. Params are converted from snakecase to camelcase before passing to Reveal.js. This is necessary to maintain the proper case of the parameters.Here’s an example of configuring Reveal.js parameters alongside a theme and highlight.js theme:[reveal_hugo]
theme = ""moon""
highlight_theme = ""solarized-dark""
slide_number = true
transition = ""zoom""
See the extensive list of Reveal.js configuration options here.Syntax highlighting Syntax highlighting can be done with Hugo at compile-time or using Reveal.js with the pre-installed highlight.js plugin. Presentations can use both if they wish for different pieces of code.To do highlighting with Hugo, use the highlight shortcode and check out the hugo-hl-example example presentation.To see an example of highlighting with Reveal.js, check out the highlightjs-linenumbers-example presentation.By default, markdown code fences will be processed with Hugo. To turn that off, add this to your config.toml file:[markup.highlight]
codeFences = false
Now, the code in the fences will be highlighted by highlight.js instead.Custom Reveal.js themes If you have a custom reveal theme to use (in .css form), place it in the static folder and specify it in the configuration. For example, if your css file lives here:| static
  | stylesheets
    - custom-theme.css
Then this is what you’ll put in config.toml:[params.reveal_hugo]
custom_theme = ""stylesheets/custom-theme.css""
Compiling a custom Reveal.js theme with Hugo pipes Reveal.js theme customization is easiest to do by overriding variables in the SCSS or PostCSS build process. You can take advantage of Hugo pipes to do the theme compilation. In this case, your SCSS, Saas or PostCSS file needs to live in assets:| assets
  | stylesheets
    - custom-theme.scss
If you just wanted to change the presentation colors, here’s what you might put in custom-theme.scss:@import ""../reveal-js/dist/theme/template/mixins"";
@import ""../reveal-js/dist/theme/template/settings"";

$backgroundColor: rgb(3, 129, 45);
$mainColor: #fff;
$headingColor: #fff;
To learn more about Reveal.js theme customization, check out the Reveal.js theme docs.This is what the front matter would look like:[params.reveal_hugo]
custom_theme = ""stylesheets/custom-theme.scss""
custom_theme_compile = true
You can also add options that will be passed to Hugo’s toCSS method:[reveal_hugo.custom_theme_options]
targetPath = ""css/custom-theme.css""
enableSourceMap = true
Check out the custom-theme-example presentation to see a working example.Adding HTML to the layout If you need to add something to the HTML layout, you can create partials that live at specific locations, depending on which presentation you want to customize and where you want the HTML inserted into the page.PresentationBefore </head>Before </body>Before closing </div> of div.revealAllreveal-hugo/head.htmlreveal-hugo/body.htmlreveal-hugo/end.htmlRoothome/reveal-hugo/head.htmlhome/reveal-hugo/body.htmlhome/reveal-hugo/end.htmlSection{section}/reveal-hugo/head.html{section}/reveal-hugo/body.html{section}/reveal-hugo/end.htmlThis is the recommended way to add custom CSS and JavaScript to each presentation.💡 Tip: In Hugo, partials live in the layouts folder:For example, if you have HTML that is to be placed before every presentation, this would be the structure:- layouts
  - partials
    - reveal-hugo
      - head.html
      - body.html
      - end.html
Offline development Offline-friendly development is the default. The Reveal.js and Highlight.js files are loaded from the static directory by default. (See above for how to use a CDN instead). If you need file:/// URLs to work, make sure to set relativeURLs and uglyURLs in your config.toml.relativeURLs = true
uglyURLs = true
Note: uglyURLs isn’t strictly required, but it is useful if you’re loading against the filesystem as it makes sure that all URLs end in .html and links point directly at them instead of to a folder.Tutorial: Add a Reveal.js presentation to an existing Hugo site If your Hugo site already has a theme but you’d like to create a presentation from some of its content, that’s very easy.Get the reveal-hugo theme Method 1 (recommended): use theme as hugo module On your site root, check for the existence of a file go.mod which marks your site as hugo module.
If this file is not present yet, create it by issuing this command from site root:hugo mod init github.com/me/my-presentation
Declare the reveal-hugo theme module as a dependency of your site:hugo mod get github.com/dzello/reveal-hugo
Open config.toml, look for the line theme = ... and add reveal-hugo to your site’s array of themes :theme = [""your-current-theme"", ""github.com/dzello/reveal-hugo""]
Method 2 (traditional): use theme as git submodule Add the reveal-hugo theme as a submodule in the themes directory:git submodule add git@github.com:dzello/reveal-hugo.git themes/reveal-hugo
Open config.toml, look for the line theme = ... and add reveal-hugo to your site’s array of themes :theme = [""your-current-theme"", ""reveal-hugo""]
Note: Use of Hugo versions below 0.42 With hugo < v0.42, you have to manually copy a few files out of this theme into a few of your site’s directories:cd my-hugo-site
git clone https://github.com/dzello/reveal-hugo.git themes/reveal-hugo
cd themes/reveal-hugo
cp -r layouts static ../../
Files and directories are named such that they shouldn’t conflict with your existing content. Of course, you should double check before copying, especially the shortcodes which can’t be put under a directory.Configure your site for presentations Next, add the Reveal output format to your site’s config.toml file[outputFormats.Reveal]
baseName = ""index""
mediaType = ""text/html""
isHTML = true
Now you can add outputs = [""Reveal""] to the front matter of any section’s _index.md file and that section’s content will be combined into a presentation and written to index.html. If you already have a index.html page for that section, just change the baseName above to reveal and the presentation will be placed in a reveal.html file instead.Note: If you specify outputs = [""Reveal""] for a single content file, you can prevent anything being generated for that file. This is handy if you other default layouts that would have created a regular HTML file from it. Only the list file is required for the presentation.Recipes Create a presentation from a leaf bundle or single page type By default, reveal-hugo doesn’t create presentations for single pages (i.e. pages other than _index.md) as it assumes those pages are pieces of a larger presentation in the section starting with _index.md. This might not be the case if your content is structured in a leaf bundle (the main file is then index.md with no underscore, which Hugo treats as a single page) or if you just want to put a presentation in a single file, say presentation.md. In these cases, you just need to tell Hugo to use a different layout.If you’re using a leaf page bundle, set the following in the front matter of the index.md file:layout = ""bundle""
If you’re in a single page file like presentation.md, set the following in the front matter:layout = ""list""
Create a page that lists out all presentations See this issue for a template that you can use.Reveal.js tips These are some useful Reveal.js features and shortcuts.’s’ - type ’s’ to enter speaker mode, which opens a separate window with a time and speaker notes‘o’ - type ‘o’ to enter overview mode and scroll through slide thumbnails‘f’ - type ‘f’ to go into full-screen modeHere are a few useful Reveal.js-related tools:decktape for exporting a presentation as a PDFMore revealjs themes including robot-lung and sunblindFind many more on the Reveal.js wiki: Plugins, tools and hardware.Implementations Have you built something with reveal-hugo? Add a link to it here.dzello’s Paris Wedding Weekend Guide (source)DevOps Training (source)Changelog 2018-08-03: The slide shortcode is now easier to use. An auto-closing version sits inside the slide instead of needing to surround its content and add a closing tag.Contributing Contributions are very welcome. See CONTRIBUTING.md for more details.",NA
Jan Raasch,622,2023-03-15,MIT,"Blog, Dark Mode, Light, Minimal, Responsive",Hugo Bear Blog,"A Hugo theme based on »Bear Blog«. Free, no-nonsense, super-fast blogging. »Bear Blog« now includes a dark color scheme to support dark mode!",https://github.com/janraasch/hugo-bearblog,https://janraasch.github.io/hugo-bearblog/,"Hugo ʕ•ᴥ•ʔ Bear Blog 🧸 A Hugo-theme based on Bear Blog.Free, no-nonsense, super-fast blogging.Demo For a current & working demo of this theme, please check out https://janraasch.github.io/hugo-bearblog/ 🎯.Screenshots ⬜️ Light⬛️ DarkWhen the user’s browser is running »dark mode«, the dark color scheme will be used automatically. The default is the light/white color scheme. Check out the style.html-file for the implementation.Installation If you already have a Hugo site on your machine, you can simply add this theme viagit submodule add https://github.com/janraasch/hugo-bearblog.git themes/hugo-bearblog
Then, adjust the config.toml as detailed below.For more information, read the official setup guide of Hugo.Adjust configuration / config.toml Please check out the config.toml included in the exampleSite of this theme.Content & structure Starting fresh If you are starting fresh, simply copy over the contents of the exampleSite-directory included in this theme to your source directory. That should give you a good idea about how things work, and then you can go on from there to make the site your own.Adding / editing content Index-Page The contents of the index-page may be changed by editing your content/_index.md-file.Page You can add a new page via runninghugo new my-new-page.md
Blog-Post You can add a new blog-post via runninghugo new blog/my-new-post.md
Adding your branding / colors / css Add a custom_head.html-file to your layouts/partials-directory. In there you may add a <style>-tag, or you may add a <link>-tag referencing your own custom.css (in case you prefer to have a separate .css-file). Check out the style.html-file to find out which CSS-styles are applied by default.Issues / Feedback / Contributing Please use GitHub issues and Pull Requests.Special Thanks 🎁 A special thank you goes out to Herman, for creating the original ʕ•ᴥ•ʔ Bear Blog.License MIT License © Jan RaaschSee AlsoBlowfishCompostGruvhugoHugoplateLightbi",NA
Stefan M.,544,2023-03-03,MIT,"Company, Landing, Light, Responsive",Hugo Fresh,A Hugo adaptation of the Fresh theme from CSS Ninja,https://github.com/StefMa/hugo-fresh,NA,"The Fresh theme for Hugo
Fresh is a theme for the Hugo static site generator adapted from the gorgeous, Bulma-based theme of the same name from CSS Ninja. You can find a live demo of the original theme here and a live demo of the Hugo theme here.See AlsoAcademicPikoUp Business ThemeAdritian Free Hugo ThemeAgnes",NA
Munif Tanjim,544,2022-09-21,MIT,"Blog, Minimal, Responsive",Minimo,Minimalist theme for Hugo,https://github.com/MunifTanjim/minimo,NA,"

MinimoMinimalist theme for Hugo.Documentation Check the Minimo Documentation for detailed documentation of Minimo.Getting Up & Running Follow these guides for getting your site up & running with Minimo:Install Minimo: Installation GuideSetup Authors: Authors Setup GuideConfigure Widgets: Widgets DocumentationUpdating Minimo Follow the Updating Guide to update Minimo to its latest version.After updating Minimo, always check that your site’s config.toml file matches the latest config.toml file format.A good idea is to double check all the Configuration settings of Minimo.Development If you find a bug or want to request a new feature, feel free to open an issue.Changelog Changelog for MinimoLicense Minimo is licensed under the MIT License. Check the LICENSE file for details.The following resources are included/used in the theme:Feather by Cole Bemis - Licensed under the MIT License.See AlsoCalligraphyEdEtchMinimoTatBanTheme2.0",NA
Gurusabarish,519,2023-12-05,MIT,"Blog, Personal, Portfolio, Responsive",Hugo Profile,A high performance and mobile first hugo template for personal portfolio and blog.,https://github.com/gurusabarish/hugo-profile,https://hugo-profile.netlify.app,"Hugo Profile | Wiki Page  
A high performance and mobile first hugo template for personal portfolio and blogExample Site: hugo-profile.netlify.appFeaturesFully ResponsiveMinimalist DesignSEO Friendly.Light/Dark/autoTaxonomiesColor customizationAnalytics SupportGoogle AnalyticsComment SupportDisqusIntegration with FormSpree for submitting “Contact me” formTechnology used: Bootstrap, fontawesomeRequirementsHugo Version 0.87.0 or higherHow to use this templateHugo themeDirect deployment using netlifyFor more detailsHugo theme Install Hugo and create a site using hugo new site my-site -f=yamlClone this repo inside your themes foldercd themes
git clone https://github.com/gurusabarish/hugo-profile.git
Create config.yaml (you can use config.toml too) inside root folderSetup the configurations in config.yaml. referenceYou should have the mentioned (inside the config file) images in static folder to use them.For more details: Hugo’s official docs, content managementDirect deployment using netlify Fork this repo or create new repo using use this template button and connect repo to netlify.whenever you customize the files exampleSite folder, netlify will automatically deploy your changes.For more details: host on netlify, content managementDeploymentRun hugo. It will generate a folder called public. You can use the files inside public folder for deployment. You should delete the public folder for each time when you are using hugo command.IssuesIf you have a question, please open an issue for help and to help those who come after you. The more information you can provide, the better!ContributingContributions, issues, and feature requests are welcome! For major changes, please open an issue first to discuss what you would like to change.LicenseLicensed under MIT🤝 SupportGive a ⭐️ or buy me a ~coffee~ tea if you like this project!See AlsoAcademicGokarnaHugo InitioHugo LiftoffIris",NA
NA,530,2023-08-30,MIT,"Blog, Dark",Clarity,A theme based on VMware's Clarity Design System for publishing technical blogs with Hugo.,https://github.com/chipzoller/hugo-clarity,https://neonmirrors.net/,"Hugo Clarity ThemeA technology-minded theme for Hugo based on VMware’s open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.Preview on Desktop Light ModeDark ModePreview on Mobile Light ModeDark ModeTable of Contents FeaturesPrerequisitesGetting up and runningConfigurationGlobal ParametersPage ParametersMenusMain MenuSocial mediaSearch EngineBlog directoryMobile menu positioningTags and taxonomiesImagesOrganizing page resourcesModern image formatsImage captionsAdding figure positions to image captionsInline imagesFloating imagesRound bordersAdding CSS classesFeatured imageThumbnail imageShare imageLogo alignmentCodeTable of contentsPinning featured postsNoticesCustom CSS and JSCustom Site DisclaimerForcing light or dark modeInternationalization - I18NHooksCommentsMath notationOpen Street MapSearchContributingCode of conductLicenseFeatures Blog with tagging and category optionsSearchDeeplinksChoice of whether to use Hugo Page BundlesNative image lazy-loadingCustomizable (see config)Dark mode (with UI controls for user preference setting)Toggleable table of contentsToggleable automatic figure numberingConfigurable site disclaimer (i.e. “my views are not my employer’s”)Flexible image configuration, and support for modern formats like WebPLogo alignmentMobile support with configurable menu alignmentSyntax highlightingRich code block functions including:Copy to clipboardToggle line wrap (dynamic)Toggle line numbersLanguage labelToggle block expansion/contraction (dynamic)To put it all in context, here is a preview showing all functionality.Prerequisites Firstly, ensure you have installed the extended version of Hugo 0.91.0 or above. See installation steps from Hugo’s official docs for more information. Note that software repositories may be several versions behind and may not include the extended version.Getting up and running Read the prerequisites above and verify you’re using the extended version of Hugo 0.91.0 or newer.There are several ways to use this theme:Option 1a: Development in the browser For trying out the theme, quick experimentation, and to contribute Pull Requests, Gitpod is the easiest option. Use the button above and it will spin up a prebuilt environment with a site ready to go.If you want to contribute a PR, this is a good overview of that process, and there’s also an optional browser extension. Read more about contributing to Hugo ClarityOption 1b: Development on your machine If you prefer not to use Gitpod, you can also test, develop and contribute PRs locally from your computer.git clone https://github.com/chipzoller/hugo-clarity
cd hugo-clarity/exampleSite/
hugo server --themesDir ../..
Note that while this is a good way to work on Hugo Clarity, isn’t a good way to work on your own site, since it uses the content from exampleSite, and wouldn’t be aware of any overrides your site might apply to the theme.Read more about contributing to Hugo ClarityOption 2: Hugo modules This option arguably requires the least effort to run and maintain your website with the Hugo Clarity theme.We assume you’ve already run hugo new site <sitename> and are in the <sitename> directory.Ensure you have the go binary installed on your machine. (Mac users: brew install go.)Run the following command:hugo mod init <sitename>
Hugo Clarity comes with exampleSite files prefilled with helpful configuration and sample posts. If you’re starting a new Hugo site and don’t have any content yet, it’s easiest to grab the whole thing:wget -O - https://github.com/chipzoller/hugo-clarity/archive/master.tar.gz | tar xz && cp -a hugo-clarity-master/exampleSite/* . && rm -rf hugo-clarity-master && rm -f config.toml
If you are using PowerShell, paste this instead:wget -O - https://github.com/chipzoller/hugo-clarity/archive/master.tar.gz | tar xz -and cp -a hugo-clarity-master/exampleSite/* . -and rm -rf hugo-clarity-master -and rm -f config.toml
If you do already have a site and don’t want to risk overwriting anything, we suggest copying the contents of config over, as well as replacing your archetypes/post.md (if it exists) with Hugo Clarity’s. Then migrate any necessary settings from <sitename>/config.toml to <sitename>/config/_default/config.toml and remove the original <sitename>/config.toml file.Open <sitename>/config/_default/config.toml and change theme = ""hugo-clarity"" to theme = [""github.com/chipzoller/hugo-clarity""]You can now run:hugo server
If that seems like a lot of setup, it’s meant to reduce the pain of pulling in new versions of Hugo Clarity when they are released.To pull in theme updates, run hugo mod get -u github.com/chipzoller/hugo-clarity. You can also update all your Hugo modules with hugo mod get -u ./... – read more about updating Hugo modules.There is more you can do with hugo modules, but this will suffice for our use case here.Option 3: Git submodules For those not ready to use Hugo modules, you can use the “old way” using git alone.We assume you’ve already run hugo new site <sitename>, are in the <sitename> directory, and have a working git repo (git init).Run:git submodule add https://github.com/chipzoller/hugo-clarity themes/hugo-clarity
Hugo Clarity comes with exampleSite files prefilled with helpful configuration and sample posts. If you’re starting a new Hugo site and don’t have any content yet, it’s easiest to grab the whole thing:cp -a themes/hugo-clarity/exampleSite/* . && rm -f config.toml
If you do already have a site and don’t want to risk overwriting anything, we suggest copying the contents of config over, as well as replacing your archetypes/post.md (if it exists) with Hugo Clarity’s. Then migrate any necessary settings from <sitename>/config.toml to <sitename>/config/_default/config.toml and remove the original <sitename>/config.toml file.You can now run:hugo server
While this is less setup than option 2 initially, it comes with important caveats. First, to pull in new versions of the theme, you’ll need to run git submodule update --remote --merge and commit those changes to your git repo. Second, if you clone your repo to another machine, have multiple people working on your site, or have a continuous-integration or deployment script (like Netlify), after cloning you’ll need to also remember to run git submodule update --init --recursive to get the theme files.See an overview of using git submodules for Hugo themes and troubleshooting git submodules in Hugo themes for details.Configuration Hugo Clarity uses a config folder rather than a single file. If you’re used to having a config.toml file in your main folder, now you’ll find that located in config/_default/config.toml, along with other settings files.This section will mainly cover settings that are unique to this theme. If something is not covered here (or elsewhere in this file), there’s a good chance it is covered in this Hugo docs page.Global Parameters These options set global values that some pages or all pages in the site use by default.ParameterValue TypeOverridable on Pageauthormap / stringnotwitterstringnolargeTwitterCardbooleannoga_analyticsstringnogoogle_tag_manager_idstringnobaidu_analyticsstringnoplausible_analyticsbooleannomatomo_analyticsbooleannodescriptionstringyeskeywordsarray of stringsyesintroDescriptionstringyesintroURLstring/falsenonumberOfTagsShownintegernousePageBundlesbooleanyesfallBackOgImagefile path (string)nocodeMaxLinesintegeryescodeLineNumbersbooleanyesmainSectionsarray/stringnocenterLogobooleannologofile path (string)noiconsDirdir path (string)nomobileNavigationstringnofigurePositionShowbooleanyesfigurePositionLabelstringnocustomCSSarray of file path (string)nocustomJSarray of file path (string)noenforceLightModebooleanN/AenforceDarkModebooleanN/AtitleSeparatorstringnoshowSharebooleanyescommentsbooleanyesnumberOfRecentPostsintegernonumberOfFeaturedPostsintegernopinFeaturedbooleannonumberOfPinnedPostsintegernodateFormatstringnoenableMathNotationbooleanyescustomFontsbooleannosinceintegerN/Arss_summarybooleanN/Arss_summary_read_more_linkbooleanN/AshowRelatedInArticlebooleanyesshowRelatedInSidebarbooleannofooterLogostringN/AenableSearchbooleanN/APage Parameters These options can be set from a page frontmatter or via archetypes.ParameterValue TypeOverrides GlobaltitlestringN/AdatedateN/AdescriptionstringN/Akeywordsarray of stringsyesintroDescriptionstringyesabstractstringN/AsummarystringN/AdraftbooleanN/AfeaturedbooleanN/Atagsarray/stringN/Acategoriesarray/stringN/AtocbooleanN/AusePageBundlesbooleanyesfeatureImagefile path (string)N/AfeatureImageAltstringN/AfeatureImageCapstringN/Athumbnailfile path (string)N/AshareImagefile path (string)N/AcodeMaxLinesintegeryescodeLineNumbersbooleanyesfigurePositionShowbooleanyesfigurePositionLabelstringnocommentsbooleanyesenableMathNotationbooleanyesshowDatebooleanN/AshowSharebooleanN/AshowReadTimebooleanN/AsidebarbooleanN/AsingleColumnbooleanN/AshowRelatedInArticlebooleanN/AModify Menus Main Menu To add, remove, or reorganize top menu items, edit the files here. Specifically look for items with [[main]].If you prefer the more traditional approach, delete content\config folder and enter a main menu entry inside the config.toml fileSocial media To edit your social media profile links, edit the files referenced above. Specifically, look for items with [[social]]If you wish to globally use a large Twitter summary card when sharing posts, set the global parameter largeTwitterCard to true.Web site analytics If using Google Analytics, configure the ga_analytics global parameter in your site with your ID. You can opt to set a google tag manager using google_tag_manager_id.If using Baidu Analytics, configure the baidu_analytics global parameter in your site with your ID.If using Plausible Analytics, configure the plausible_analytics global parameters in your site with the following.enable To enable plausible analytics change to true.websiteDomain Set domain name of your website, most cases same as your base URL this is required.plausibleDomain Default is set to plausible.io, this parameter is only required if plausible is self-hosted.scriptName Default is set to plausible, this parameter is only required if using a custom name for script.If using Matomo Analytics, configure the matomo_analytics global parameters in your site with the following.enable To enable matomo analytics change to true.websiteDomain Set the domain name of your website, in most cases same as your base URL this is required.matomoDomain Set to Matomo domainmatomoSiteID Default is set to 1, change this to the siteid being trackedBlog directory Edit params.toml and change the mainSections key. Values will be directories where the blogs reside....
mainSections = [""posts"", ""docs"", ""blogs""]
...
For more info, see the Hugo docs.Mobile menu positioning The navigation menu when mobile browsing can be configured in config.toml to open right or left depending on preference. The “hamburger” menu icon will always display in the upper right hand corner regardless.[params]
...
mobileNavigation = ""left"" # Mobile nav menu will open to the left of the screen.
...
Tags and Taxonomies Show number of tags The number of tags and taxonomies (including categories) that should be shown can be configured so that any more than this value will only be accessible when clicking the All Tags button. This is to ensure a large number of tags or categories can be easily managed without consuming excess screen real estate. Edit the numberOfTagsShown parameter and set accordingly.[params]
...
numberOfTagsShown = 14 # Applies for all other default & custom taxonomies. e.g categories, brands see https://gohugo.io/content-management/taxonomies#what-is-a-taxonomy
...
Number of tags example Images A number of CSS classes are automatically added to images based on their source or type to aid you in any tweaks to the theme. These include:image_figure when the image appears inside a <figure> elementimage_internal when the image is local, within the siteimage_external when the image is loaded from a URLimage_processed when the image has been passed through Hugo Pipes (requires the image to be using page bundles or be in the assets directory)image_unprocessed when the image has not been passed through Hugo Pipesimage_thumbnail when the image is in a list of content excerptsimage_featured when the image is a banner or hero image at the top of a postimage_svg when the image is an SVG (and thus cannot be run through Hugo Pipes)Most images in Hugo Clarity are loaded lazy and asynchronously to improve site speed. Images that are not loaded in this manner include the site’s logo.Images, whether used within Markdown content or using parameters like featureImage or thumbnail, can be local or remote images. Remote images (starting with http...) will automatically be downloaded, stored and optimized by Hugo Clarity, so that the finished site will only serve local images.Organizing page resources By default, Hugo Clarity assumes that page resources – images and other related files – are stored in the static or assets directories. Alternatively, you can opt-in to using Hugo page bundles by setting the usePageBundles option to true in your site parameters. Using this method, you keep a post’s assets in the same directory as the post itself.If you have an existing site that is not using page bundles but would like to start with new posts, usePageBundles can be overridden at the post level in the front matter. If it is not set in the post, it will default to the site’s parameter. Take a look at exampleSite/content/post/bundle/index.md for more information and an example of overriding this setting on an individual post.Support for modern image formats If you are using page bundles (see above) and reference sample.jpg in your post, Hugo Clarity will check to see if the same image (based on filename) exists in the modern formats of WebP, AVIF or JXL. If it does, these will be presented to browsers as alternative options. Browsers that support these formats and the <picture> element will load them, while browsers that do not will fall-back to the default image.Note that this does not create the other versions of the image for you, it simply checks to see if they exist. You may want to automate this process in your site build; here is one example.Image captions Image captions are automatically generated. If an image has title text, the caption will be created from it; if an image has no title text, the alt text will be used. To display an image with alt text but no caption, use title text of a single space ("" "").Examples of captions:![Jane Doe](../images/jane-doe.png) will display the local jane-doe.png image with a caption of “Jane Doe”.![Jane Doe](https://raw.githubusercontent.com/chipzoller/hugo-clarity/master/exampleSite/static/images/jane-doe.png ""This is Jane Doe"") will display the remote image jane-doe.png with a caption of “This is Jane Doe”.![A building](../images/building.png "" "") will display the local image building.png with no caption.Examples of this can also be found in the “Markdown Syntax Guide” post in the example site content.NOTE: Due to limitations in Markdown, single and double quotes should not be used within alt or title text.Adding figure positions to image captions You have the option of prepending a desired string such as “Figure N” to the caption text of images within an article’s content.Two global settings control this feature:figurePositionLabel is a string which will be prepended to any caption text of an article image; by default this is set to “Figure”.figurePositionShow controls, globally, whether to show this label. (It does not affect the visibility of image captions in general, only the prepended figure position text.) For more granular control, figurePositionShow can be overridden at the article level if desired.Figure numbers will be automatically inserted after the figurePositionLabel text, starting from the top of the article and increasing as you move down.Example of image with figure positions added Assume that figurePositionLabel is set to “Figure” in config.toml and this is the first image in a given article.![A schematic for using Antrea with Kubernetes](./images/image-figure.png ""Antrea Kubernetes nodes prepared"")
Inline images To make an image inline, append :inline to its alt text.Inline images example <!-- an inline image without alt text -->

![:inline](someImageUrl)

<!-- an inline image with alt text -->

![text describing the image:inline](someOtherImageUrl)
Float images to the left To align a blog image to the left, append :left to its alt text. Article text will then flow to the right of the image.Float images left example <!-- a left-floated image without alt text -->

![:left](someImageUrl)

<!-- a left-floated image with alt text -->

![text describing the image:left](someOtherImageUrl)
Float images to the right To align a blog image to the right, append :right to its alt text. Article text will then flow to the left of the image.Float images right example <!-- a right-floated image without alt text -->

![:right](someImageUrl)

<!-- a right-floated image with alt text -->

![text describing the image:right](someOtherImageUrl)
Round borders for images To make the image borders round, append ::round to its alt text. This is a
pre-defined image class commonly used to display portrait images. Note that round
is just another class and it can be mixed with other classes separated by space.Round borders for images example <!-- an image without alt text and round borders-->

![::round](someImageUrl)

<!-- an image with alt text and round borders-->

![text describing the image::round](someOtherImageUrl)

<!-- a left-floating image without alt text and with round borders-->

![:left::round](someOtherImageUrl)
Add classes to images To add a CSS class to an image, append ::<classname> to its alt text. You can also add multiple classes to an image separated by space. ::<classname1> <classname2>.Image classes example <!-- an image without alt text -->

![::img-medium](someImageUrl)

<!-- an image with alt text -->

![text describing the image::img-large img-shadow](someOtherImageUrl)
Featured image Each article can specify an image that appears at the top of the content....
featureImage: ""images/2020-04/capv-overview/featured.jpg""
...
The path for the featured image is relative to the static directory if not using Page Bundles, and relative to the post’s own directory if using them.Two other frontmatter settings allow you to set alt text for the featured image and an optional caption....
featureImageAlt: 'Text describing the featured image' # Alternative text for featured image.
featureImageCap: 'A caption appearing below the image.' # Caption (optional).
...
Unless specified using featureImageCap, a caption will not be generated for the featured image.Thumbnail image Each article can specify a thumbnail image which will be displayed on the left of the article’s card on the home page and in lists of articles....
thumbnail: ""images/2020-04/capv-overview/thumbnail.jpg""
...
Thumbnails look best when square (height:width ratio of 1:1) and at least 150x150 pixels.The path for the thumbnail image is relative to the static directory if not using Page Bundles, and relative to the post’s own directory if using them.Share image Each article can specify a share image which will used when the article is shared on social media....
shareImage: ""images/theImageToBeUsedOnShare.png""
...
If a share image is not specified, the order of precedence that will be used to determine which image applies is thumbnail => featureImage => fallbackOgImage. That is, if no thumbnail is specified, the featured image will be used; if neither is specified, the fallback image will be used.When sharing a link to the home page of the site (as opposed to a specific article), the fallbackOgImage will be used.The path for the share image is relative to the static directory if not using Page Bundles, and relative to the post’s own directory if using them.Logo alignment You can left align or center your site’s logo....
centerLogo = true # Change to false to align left
...
If no logo is specified, the title of the site will appear in its place.Code Display line numbers Choose whether to display line numbers within a code block globally with the parameter codeLineNumbers setting to true or false.[params]
...
codeLineNumbers = true # Shows line numbers for all code blocks globally.
...
Limit code block height You can globally control the number of lines which are displayed by default for your code blocks. Code which has the number of lines exceed this value will dynamically cause two code block expansion buttons to appear, allowing the user to expand to full length and contract. This is useful when sharing code or scripts with tens or hundreds of lines where you wish to control how many are displayed. Under params in config.toml file, add a value as follows:[params]
...
codeMaxLines = 10 # Maximum number of lines to be shown by default across all articles.
...
If the value already exists, change it to the desired number. This will apply globally.If you need more granular control, this parameter can be overridden at the blog article level. Add the same value to your article frontmatter as follows:...
codeMaxLines = 15 # Maximum number of lines to be shown in code blocks in this blog post.
...
If codeMaxLines is specified both in config.toml and in the article frontmatter, the value specified in the article frontmatter will apply to the given article. In the above example, the global default is 10 and yet the article value is 15 so code blocks in this article will auto-collapse after 15 lines.If codeMaxLines is not specified anywhere, an internal default value of 100 will be assumed.Line Highlighting It is possible to highlight specific lines in a code block by applying {hl_lines=[7]} after the fence and language. For example, the below snippet will highlight lines 7 and 8 in the code block to which it is applied.```yaml {hl_lines=[7,8]}
Ranges are also supported by quoting the range inside the braces.```yaml {hl_lines=[""7-18""]}
Table of contents Each article can optionally have a table of contents (TOC) generated for it based on top-level links. By configuring the toc parameter in the article frontmatter and setting it to true, a TOC will be generated only for that article. The TOC will then render under the featured image.Table of contents (TOC) example Pinning featured posts This allows you to show the featured posts at the top of the post list.Use the site configuration option pinFeatured to enable/disable it, and the option numberOfPinnedPosts to control how many posts to be pinned.Custom CSS and JS To minimize HTTP requests per page, we would recommend loading CSS styles and JavaScript helpers in single bundles. That is to say, one CSS file and one JavaScript file. Using Hugo minify functions, these files will be minified to optimize the size.Going by the above 👆🏻 reason, we recommend adding custom CSS and JS via these files:_override.sass.
This file should only be used to override sass & css variables e.g theme colors_custom.sass.
This file should only be used to override everything else except sass & css variables.custom.js.Pro Tip: Ensure that your changes are git trackable by creating these files outside the theme directory. That is, at the root level of your site’s directory. See tree below.├── yourSite
│   ├── archetypes
│   │   └── post.md
│   ├── assets
│   │   ├── js
│   │   │   └── custom.js
│   │   └── sass
│   │       ├── _custom.sass
│   │       └── _override.sass
│   ├── config
│   │   └── _default
│   │       ├── config.toml
│   │       ├── configTaxo.toml
│   │       ├── languages.toml
│   │       ├── markup.toml
│   │       ├── menus
│   │       │   ├── menu.en.toml
│   │       │   └── menu.pt.toml
│   │       └── params.toml
│   ├── content
│   │   ├── _index.md
However, sometimes you may need to load additional style or script files. In such cases, you can add custom .css and .js files by listing them in the config.toml file (see the snippet below). Similar to images, these paths should be relative to the static directory.[params]
...
customCSS = [""css/custom.css""] # Include custom CSS files
customJS = [""js/custom.js""] # Include custom JS files
...
Notices This theme includes functionality to display some “hightlight blocks” - called “notices” using a shortcode.For example, see the shortcode markup below will render as a notice:{{% notice note ""Note Title"" */%}}
This will be the content of the note.
{{% /notice %}}
For more examples see the “Notices” page in the exampleSite.Site Disclaimer The theme includes the ability to put a Disclaimer on your website (e.g. “My views are my own and not my employer’s”). Currently, the disclaimer displays in the sidebar under the author information. You can enable and customize it as follows:Uncomment the sidebardisclaimer parameter in config/_default/params.toml.Uncomment and edit the disclaimerText parameter in config/_default/params.toml.Add and modify an override for the div.sidebardisclaimer selector in assets/saas/_custom.sass.div.sidebardisclaimer{padding: 0px 10px 15px 10px;margin: 20px 5px 20px 5px;border: 1px solid #eee;border-left-width: 10px;border-right-width: 10px;border-radius: 5px 5px 5px 5px;border-left-color: orange;border-right-color: orange;border-top-color:orange;border-bottom-color:orange}
The code for the sidebar disclaimer text is in layouts/partials/sidebar.html. The default color scheme displays in both light and dark mode. Additionally, the styling has been placed into _custom.sass so that it’s easily editable with beginner’s understanding of CSS properties and easier to find.Forcing light or dark mode By default, sites authored using Clarity will load in the browser with the user’s system-wide settings. I.e., if the underlying OS is set to dark mode, the site will automatically load in dark mode. Regardless of the default mode, a UI control switch exists to override the theme mode at the user’s discretion.In order to override this behavior and force one mode or another, add either enforceLightMode or enforceDarkMode to your config.toml file. If neither value is present, add it.To enforce Light Mode by default, turn enforceLightMode to true.To enforce Dark Mode by default, turn enforceDarkMode to true[params]
...
enforceLightMode = true # Force the site to always load in light mode.
...
Please note that you cannot enforce both modes at the same time. It wouldn’t make sense, would it?⚠️ Please also note that the mode toggle UI will remain in place. That way, if a user prefers dark mode, they can have their way. The best of both worlds.I18N This theme supports Multilingual (i18n / internationalization / translations)The exampleSite gives you some examples already.
You may extend the multilingual functionality by following the official documentation.Things to consider in multilingual:supported languages are configured in config/_default/languages.tomladd new language support by creating a new file inside i18n directory.
Check for missing translations using hugo server --i18n-warningstaxonomy names (tags, categories, etc&mldr;) are translated in i18n as well (translate the key)menus are translated manually in the config files config/_default/menus/menu.xx.tomlmenu’s languages list are semi-hardcoded. You may chose another text for the menu entry with languageMenuName. Please, do better and create a PR for that.content must be translated individually. Read the official documentation for information on how to do it.note: if you do NOT want any translations (thus removing the translations menu entry), then you must not have any translations.
In the exampleSite that’s as easy as removing the extra translations from the config/_default/... or executing this one-liner:sed '/^\[pt]$/,$d' -i config/_default/languages.toml && rm config/_default/menus/menu.pt.toml
To change the values of translatable text, such as read_more or copyright, edit the values in the language file you are using in the i18n directory. If you have no such directory, copy the one inside the theme to your root Hugo directory.Hooks Clarity provides some hooks for adding code on a page.If you need to add some code (CSS import, HTML meta or similar) to the head section on every page, add a partial to your project:layouts/partials/hooks/head-end.html
Similar, if you want to add some code right before the body end (e.g fonts’ links), create your own version of the following file:layouts/partials/hooks/body-end.html
Comments Clarity supports Hugo built-in Disqus partial. You can enable Disqus simply by setting disqusShortname in your configuration file.You can also override layouts/partials/comments.html to take advantage of disqus comments Alternatives for details.Please leave #disqusShortname = """" commented out if you decide to use other comments toolsYou can disable them site-wide by setting comments = false under [params] from config.toml file and vice versa. Omitting that setting will default to comments will be enabled.You can override these setting from each post individually. For example, you may want to disable/enable comments on specific posts. Use the same syntax used on the config.toml file.please use comments and not commentUtterances Commenting Support If you wish use Utterances comments on your site, you’ll need to perform the following:Ensure you have a GitHub public repository, which you’ve granted permissions to the Utterances GitHub App.Comment out the line for disqusShortname = """" in the /config/_default/config.toml file.Set comments = true in the /config/_default/params.toml file.Configure the utterances parameters in the /config/_default/params.toml file.Optionally, you can choose a label that will be assigned to all issues created by Utterances. The label must exist in your Github repository, as Utterances cannot attach labels that do not exist. Configure utterancesLabel parameter in /config/_default/params.toml file, after you have added a label to your Github repository Issues labels. Labels are case sensitive and support Emoji in label names. ✨💬✨Utterances is loaded in the comments.html partial by referring to the utterances.html partial. Since single.html layout loads comments if comments are enabled, you must ensure both the comments and utterances parameters are configured.Math notation Clarity uses KaTeX for math type setting if enableMathNotation is set to true in global or page parameters (the latter takes precedence).Also see supported TeX commands in KaTeX.If you want chemical typesetting provided by the mhchem extension, first copy [site]/themes/clarity/layouts/partials/math.html to [site]/layouts/partials/math.html:# cd /path/to/site
mkdir -p layouts/partials && cp themes/clarity/layouts/partials/math.html layouts/partials/math.html
Then add the corresponding line as its README suggested (without the + sign):<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css"" integrity=""sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X"" crossorigin=""anonymous"">

<script defer src=""https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js"" integrity=""sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4"" crossorigin=""anonymous""></script>

+ <script defer src=""https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/mhchem.min.js"" integrity=""sha384-5gCAXJ0ZgozlShOzzT0OWArn7yCPGWVIvgo+BAd8NUKbCmulrJiQuCVR9cHlPHeG"" crossorigin=""anonymous""></script>

<script defer src=""https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js"" integrity=""sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa"" crossorigin=""anonymous""
  onload=""renderMathInElement(document.body);""></script>
The added line should be before auto-render.min.js and after katex.min.js.MathJax The new version of MathJax has comparable performance to KaTeX and better support for TeX commands.If you prefer MathJax, create a blank [site]/layouts/partials/math.html and add the following two lines:<script src=""https://polyfill.io/v3/polyfill.min.js?features=es6""></script>
<script id=""MathJax-script"" async src=""https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js""></script>
This file will take precedence over the one Clarity provides and the site will load MathJax instead of KaTeX.Related Content Related content within a series taxonomy can be shown at the end of a piece of content, or optionally on the sidebar above the Related Content section.The site configuration option showRelatedInArticle controls if this option is enabled. The same configuration option can be used in a posts frontmatter to disable the feature (but the site configuration overrides the per-page option).Likewise, the site configuration option showRelatedInSidebar controls if related content is shown on the sidebar. There is no corresponding option within a post to disable this.Maps Creating and including a map First create a map for free on https://umap.openstreetmap.fr/en/. Then include this map by using the openstreetmap shortcode, e.g. {{<openstreetmap mapName=""demo-map_1"" >}}Options The only required parameter is mapName. All other parameters are completely optional.Available parameters are:coordX (default auto)coordY (default auto)scale (default auto)scaleControl (default true)miniMap (default false)scrollWheelZoom (default true)zoomControl (default true)allowEdit (default false)moreControl (default true)searchControl (default true)tilelayersControl (default null)embedControl (default null)datalayersControl (default true)onLoadPanel (default none)captionBar (default false)Search Search is currently a BETA feature. Ensure you have these settings inside your configuration files:# config/_default/config.toml
[outputs]
  home = [""HTML"", ""RSS"",""JSON""]
# config/_default/params.toml
enableSearch = true
Next add the search.md file from the exampleSite and add it to your content folder. This is not necessary if you recently created a site based on the example site and already have the file.Compose, from which this feature is derived, implements fuse.js to enable search functionality. At the time of this writing, search on this theme takes either of the following forms:Passive searchThis occurs only when the user loads the search page i.e /search/. They can directly navigate to that url. Alternatively, the user can type the search query on the search field and hit enter. They will be redirected to the search page which will contain matched results if any.Currently, this only works on the default language. Support for multilingual passive search is coming soon.Live searchThis behavior will be obvious as the user types a search query on the search field. All valid search queries will yield a list of quick links or a simple “no matches found”. Else, the user will be prompted to continue typing.Live search works even for multilingual sites.For Chinese-like languages, it may or may not work.Search ScopeSearching within a section will yield results from that section.For example, if you have 3 sections in your content i.e blog, docs & examples, searching in the docs section will only produce results for that section.Searching outside a section will search the entire site.For example, with the above setup, searching from the homepage will produce results from the entire site.Contributing Please read our contribution guidelines, and thank you for being involved!Code of conduct Hugo Clarity has a code of conduct. Please follow it in all your interactions with the project.License Hugo Clarity is open-sourced under the MIT license.See AlsoAcademicAnatoleAnubisAstatineAutoPhugo","Chip Zoller, Dan Weru, Ivan Boothe"
amazingrise,463,2023-11-20,MIT,Blog,Diary,"Moments piled up. A simple, elegant blog theme.",https://github.com/AmazingRise/hugo-theme-diary,NA,"Hugo Theme DiaryMy Blog with ✨Theme Diary✨ -
Intro Video -
Progress -
Wiki隻言片語・於此匯聚Moments piled up.A Hugo theme ported from SumiMakito/hexo-theme-Journal.Features Features of this theme Customizable: Easy to customize with detailed project wiki.Adaptive: Mobile-friendly & widescreen-friendly.Abundant: 3rd. service intergration (Gitalk, LiveRe, Disqus, Waline, Twikoo, Google Search, Analytics&mldr; ).Convenient: Table of Contents with scroll spy.Professional: LaTeX support (disabled by default).Graceful: Dark mode (automatic or manual switch).International: English, Chinese (CHS/CHT), French, German, Portuguese(Brazil) support.&mldr;For details, please visit project wiki.Features in new version CHANGELOG1.3.0:Removed jQuery and other redundant scripts.Some improvements on performance.Quick Start Click to expandIf your website is using Git as version control, please do as follows:Fetch the theme dir.From the root of your Hugo site, open the terminal and execute:git submodule add https://github.com/AmazingRise/hugo-theme-diary.git themes/diary
Update git repository.Then update the git repository from the root of your site:git submodule update --remote --merge
Run example site.From the root of themes/diary/exampleSite:hugo server --themesDir ../..
Personalization Example config See /exampleSite/config.tomlCustomization Wiki HomeConfigurationsInternationalization(i18n)SidebarFaviconTable Of ContentsEnable/Disable Comment3rd. party servicesComment ServicesGoogle AnalyticsGoogle Site VerificationGoogle Search IntergrationWritingMeta DataLaTeX SupportRSS FeedInserting FiguresStylingColor SchemeCode HighlightFont FamilyReading TimeDark ModeTroubleshootingScreenshots Index PagePostDark ModeMobile ViewSee AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Robert Kaussow,460,2023-10-28,MIT,"Docs, Responsive",Geekdoc,Hugo theme made for documentation,https://github.com/thegeeklab/hugo-geekdoc,https://geekdocs.de/,"Geekdoc



Geekdoc is a simple Hugo theme for documentations. It is intentionally designed as a fast and lean theme and may not fit the requirements of complex projects. If a more feature-complete theme is required there are a lot of good alternatives out there. You can find a demo and the full documentation at https://geekdocs.de.Build and release process This theme is subject to a CI driven build and release process common for software development. During the release build, all necessary assets are automatically built by webpack and bundled in a release tarball. You can download the latest release from the GitHub release page.Due to the fact that webpack and npm scripts are used as pre-processors, the theme cannot be used from the main branch by default. If you want to use the theme from a cloned branch instead of a release tarball you’ll need to install webpack locally and run the build script once to create all required assets.# install required packages from package.json
npm install

# run the build script to build required assets
npm run build

# build release tarball
npm run pack
See the Getting Started Guide for details about the different setup options.Contributors Special thanks to all contributors. If you would like to contribute, please see the instructions.Geekdoc is inspired and partially based on the hugo-book theme, thanks Alex Shpak for your work.License This project is licensed under the MIT License - see the LICENSE file for details.The used SVG icons and generated icon fonts are licensed under the license of the respective icon pack:Font Awesome: CC BY 4.0 LicenseIcoMoon Free Pack: GPL/CC BY 4.0Material Icons: Apache License 2.0See AlsoAcademicAce documentationAmethystBookBootstrap Theme for Personal Blog and Documentations",NA
Razon Yang,434,2023-12-02,MIT,"Archive, Blog, Bootstrap, Dark, Dark Mode, Docs, Light, Multilingual, Personal, Responsive",Bootstrap Theme for Personal Blog and Documentations,"A fast, responsive and feature-rich Hugo theme for personal blog and documentations",https://github.com/razonyang/hugo-theme-bootstrap,https://hbs.razonyang.com,"Hugo Bootstrap Theme


A fast, responsive and feature-rich Hugo theme for personal blog and documentations.News I created a new modular Hugo theme called HB theme, it’s recommended using it on your new static sites, for getting better performance, UI design and flexible.Those two theme are incompatible, and it’s not recommended to apply the new theme on your old sites.Screenshots Demo Sites https://hbs.razonyang.com/ - Deploy on Netlify.https://hbs-cn.razonyang.com/ - Self-Hosted server located in China.Repositories that using this theme.Websites that using this theme.Docs English简体中文繁體中文Introduction简介簡介Starter Template新手模板新手模板Install as Git Submodule以 Git Submodule 安装以 Git Submodule 安裝Install as Hugo Module以 Hugo Module 安装以 Hugo Module 安裝Configuration配置配置Menu菜单菜單Look and Feel观感觀感Image Processing图片处理圖片處理Progressive Web App渐进式 Web 应用漸進式 Web 應用Deployment部署部署Performance性能性能FAQ常见问题常見問題Troubleshooting问题排查問題排查Get Involved参与我们參與我們Contributions Thank you very much to the following contributors, sponsors and backers (sort by contributed or funding time).Contributors Sponsors Sponsors will appear on our website with their brands and logos.SponsorDescriptionOne of most popular cloud infrastructure providers.the docs site is deployed on Netlify with Open Source Plan.We use DocSearch instead of built-in local search on the documentations site.Backers BackerDikeaSagar BehereNorbert BorosArvind SinghVriNatenomWilson E. AlvarezAndre FerreiraKurt KrueckebergChris MunozSee AlsoHB Starter Theme TemplateLightbiPaigeAcademicHugoplate",NA
MeiK,450,2023-09-18,MIT,Blog,Github Style,github-style hugo theme,https://github.com/MeiK2333/github-style,NA,"github-styleInit hugo site hugo new site mysite
cd mysite
Install the theme git submodule add git@github.com:MeiK2333/github-style.git themes/github-style
Update the theme If you just installed the theme, it is already in the latest version. If not, you can update using the below commandscd themes/github-style
git pull
Then, you need to rename the previous posts folder to postcd <you-project-folder>
mv content/posts content/post
Setup readme hugo new readme.md
echo '`Hello World!`' > content/readme.md
Pin post ---
pin: true
---
Add new post Hugo will create a post with draft: true, change it to false in order for it to show in the website.hugo new post/title_of_the_post.md
Limit display content Approach 1: use summary ---
title: ""title""
date: 2019-10-22T18:46:47+08:00
draft: false
summary: ""The summary content""
---
Approach 2: use ` `Use <!--more--> to seperate content that will display in the posts page as abstraction and the rest of the content. This is different from summary, as summary will not appear in the post.---
title: ""title""
date: 2019-10-22T18:46:47+08:00
draft: false
---
abstraction show in the post page
<!--more-->
other content
add last modified data add to config.tomllastmod = true

[frontmatter]
  lastmod = [""lastmod"", "":fileModTime"", "":default""]
Use gitalk to support comments add to config.tomlenableGitalk = true

  [params.gitalk]
    clientID = ""Your client ID"" 
    clientSecret = ""Your client secret"" 
    repo = ""repo""
    owner = ""Your Github username""
    admin = ""Your Github username""
    id = ""location.pathname""
    labels = ""gitalk""
    perPage = 30
    pagerDirection = ""last""
    createIssueManually = true
    distractionFreeMode = false
Support LaTex In you post add math: true to front matter---
katex: math
---
Then the katex script will auto render the string enclosed be delimiters.# replace ... with latex formula
display inline \\( ... \\)
display block $$ ... $$
Support MathJax you can add MathJax:true to frontmattermathJax: true
config.toml example baseURL = ""https://meik2333.com/""
languageCode = ""zh-cn""
title = ""MeiK's blog""
theme = ""github-style""
googleAnalytics = ""UA-123456-789""
pygmentsCodeFences = true
pygmentsUseClasses = true

[params]
  author = ""MeiK""
  description = ""In solitude, where we are least alone.""
  github = ""MeiK2333""
  facebook = ""MeiK2333""
  twitter = ""MeiK2333""
  linkedin = ""MeiK2333""
  instagram = ""MeiK2333""
  tumblr = ""MeiK2333""
  email = ""meik2333@gmail.com""
  url = ""https://meik2333.com""
  keywords = ""blog, google analytics""
  rss = true
  lastmod = true
  userStatusEmoji = ""😀""
  favicon = ""/images/github.png""
  location = ""China""
  enableGitalk = true

  [params.gitalk]
    clientID = ""Your client ID"" 
    clientSecret = ""Your client secret"" 
    repo = ""repo""
    owner = ""MeiK2333""
    admin = ""MeiK2333""
    id = ""location.pathname""
    labels = ""gitalk""
    perPage = 15
    pagerDirection = ""last""
    createIssueManually = true
    distractionFreeMode = false

  [[params.links]]
    title = ""Link""
    href = ""https://github.com/meik2333""
  [[params.links]]
    title = ""Link2""
    href = ""https://meik2333.com""
    icon = ""https://meik2333.com/images/avatar.png""

[frontmatter]
  lastmod = [""lastmod"", "":fileModTime"", "":default""]
Support collapsible block You can create a collapsible block like this:{{<details ""summary title"">}}

block content

{{</details>}}
And it will show like this:summary titleblock contentdeploy.sh example There are various way to deploy to github, here is a link to official document.Here is an sample. Note line 22 have env HUGO_ENV=""production"", makes sure googleAnalysis is loaded during production, but is not loaded when we are testing it in localhost.#!/bin/sh

if [ ""`git status -s`"" ]
then
    echo ""The working directory is dirty. Please commit any pending changes.""
    exit 1;
fi

echo ""Deleting old publication""
rm -rf public
mkdir public
git worktree prune
rm -rf .git/worktrees/public/

echo ""Checking out gh-pages branch into public""
git worktree add -B gh-pages public origin/gh-pages

echo ""Removing existing files""
rm -rf public/*

echo ""Generating site""
env HUGO_ENV=""production"" hugo -t github-style

echo ""Updating gh-pages branch""
cd public && git add --all && git commit -m ""Publishing to gh-pages (publish.sh)""

#echo ""Pushing to github""
#git push --all
Then you can verify the site is working and use git push --all to push the change to github. If you don’t want to check again every time, you can uncomment the #git push --all in the script.TODO 重写标题导航，那玩意儿引入的 JS 在控制台报错。See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
vaga,423,2023-11-21,MIT,"Blog, Dark, Minimal, Responsive",m10c,A minimalistic (m10c) theme for bloggers,https://github.com/vaga/hugo-theme-m10c,NA,"m10c themeA Hugo minimalistic theme for bloggersMain features:Fully responsiveTwitter Cards, Open Graph, Disqus and Google Analytics supported (see Hugo docs)Customizable colorsCustomizable picture and descriptionCustomizable menu on sidebarCustomizable social media links on sidebarOptimized for performance 100/100 on LighthouseAll feather icons includedGetting started Installation Create a new Hugo site:$ hugo new site [path]
Clone this repository into themes/ directory:$ cd [path]
$ git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c
Add this line in the config.toml file:theme = ""m10c""
Configuration In your config.toml file, define the following variables in params:author: Name of the authordescription: Short description of the authoravatar: Path of file containing the author avatar imagemenu_item_separator: Separator between each menu item. HTML allowed (default: "" - “)favicon: Absolute path of your favicon.ico file (default: “/favicon.ico”)To add a menu item, add the following lines in menu:[[menu.main]]
  identifier = ""tags""
  name = ""Tags""
  url = ""/tags/""
Read Hugo documentations for more informations about menuTo add a social link, add the following lines in params:[[params.social]]
  icon = ""github""
  name = ""My Github""
  url = ""https://github.com/vaga""
To change theme colors, add the following lines in params:[params.style]
  darkestColor = ""#d35050""
  darkColor = ""#212121""
  lightColor = ""#f5e3e0""
  lightestColor = ""#f5f5f5""
  primaryColor = ""#ffffff""
If you want the above theme colors, you can see the exampleSite/config.toml file.Styling To override styles using scss, add a file called _extra.scss to [path]/assets/css/Note: Hugo releases come in two versions, hugo and hugo_extended. You need hugo_extended to automatically compile your scss.License This theme is released under the MIT License.Acknowledgements feather - MITSee AlsoAcademicAnatoleAnubisAstatineAva",NA
Kishan B,430,2022-10-25,MIT,"Minimal, Portfolio, Responsive",Creative portfolio,Port of the creative portfolio theme,https://github.com/kishaningithub/hugo-creative-portfolio-theme,NA,"Creative portfolio theme for hugo

Creative portfolio is a clean and elegant template mainly made for designers and creatives but can be easily transformed into a generic website.This Hugo theme was ported from Bootstrapious for training and fun. It has a very nice landing page, a comments system by Disqus, contact forms by Formspree and Google Analytics.Installation Go to the directory where you have your Hugo site and run:mkdir themes
cd themes
git clone https://github.com/kishaningithub/hugo-creative-portfolio-theme.git
rm -rf hugo-creative-portfolio-theme/.git
For more information read the official setup guide of Hugo.Configuration After installing the Creative portfolio theme successfully, i recommend you to take a look at the exampleSite directory. You will find a working Hugo site configured with the Creative portfolio theme that you can use as a starting point for your site.First, let’s take a look at the config.toml. It will be useful to learn how to customize your site. Feel free to play around with the settings.Style You can change the color of the theme by modifying the following key.style = ""default""
Available options are: default (pink), blue, green, pink, red, sea, violet.More style customizations? Create css/custom.css in your <<base dir>>/static folder and add all your custom styling.Comments The optional comments system is powered by Disqus. If you want to enable comments, create an account in Disqus and write down your shortname.disqusShortname = ""your-disqus-short-name""
You can disable the comments system by leaving the disqusShortname empty.Google Analytics You can optionally enable Google Analytics. Type your tracking code in the ``.googleAnalytics = ""UA-XXXXX-X""
Leave the googleAnalytics key empty to disable it.Make the contact form working Since this page will be static, you can use formspree.io as proxy to send the actual email. Each month, visitors can send you up to one thousand emails without incurring extra charges. Begin the setup by following the steps below:Enter your email address under ’email’ in the config.tomlUpload the generated site to your serverSend a dummy email yourself to confirm your accountClick the confirm link in the email from formspree.ioYou’re done. Happy mailing!Nearly finished In order to see your site in action, run Hugo’s built-in local server.hugo server
Now enter localhost:1313 in the address bar of your browser.Deployment Deploying to Amazon S3Base theme version (From bootstrapious) 1.0Contributing Have you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This port is released under the MIT License. Check the original theme license for additional licensing information.Thanks Thanks to Steve Francia for creating Hugo and the awesome community around the project. And also thanks to Bootstrapious for creating this awesome theme.See AlsoCalligraphyAcademicAdritian Free Hugo ThemeBeautiful HugoBridget",NA
Dmitry Kolosov,391,2023-12-04,MIT,"Blog, Dark, Light, Minimal, Multilingual, Personal, Responsive",Anubis,A minimal Hugo theme,https://github.com/Mitrichius/hugo-theme-anubis,https://hugo-theme-anubis.netlify.app/,"Anubis Theme for Hugo   Anubis is a simple minimalist theme for Hugo blog engine.DemoFeatures Dark mode (automatic / by switcher)PaginationMultiple taxonomies: tags, categories, authorsMultiple sections: posts, notes, etc with customizationArchiveTable of ContentsOpen Graph and Twitter Cards supportMobile supportSocial iconsGoogle AnalyticsUmami AnalyticsComment systems: Disqus, ISSO, Utteranc.es, GraphComment, GiscusRSS feedsRelated posts (Read Next section)Deploy via Netlify (config included in example site)Hiding posts from the RSS feedHidden posts (available only by link)Translations (en, ru, fr, pl)Custom CSS/JSMultilingual modeRobots.txtFavorite postsPagination on post single pageOptional “Read more” linkwebmentionsInstallation You need to install an extended version of Hugo to run this theme.As Hugo Module (easier and recommended) Initiate a hugo module system from your project’s root directoryhugo mod init github.com/<your_user>/<your_project>
Add the following to your config.toml or config.yamltheme =  [""github.com/Mitrichius/hugo-theme-anubis""]
As Git Submodule Inside the folder of your Hugo site run:$ git submodule add https://github.com/mitrichius/hugo-theme-anubis.git themes/anubis
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.Update config file If you have toml config (which is by default), you should rename it to config.yaml or adapt this config for toml syntax.Example of config.yaml:languageCode: ""en-us""
baseUrl: """"
title: ""Anubis""
theme: ""anubis""
paginate: 10
disqusShortname: ""yourdiscussshortname""
googleAnalytics: ""G-12345""
enableRobotsTXT: true

menu:
  main:
  - identifier: archive
    name: Archive
    title: Archive
    url: /posts/
    weight: 0

params:
  author: ""John Doe""
  email: mail@example.org # used for microformats
  avatar: ""/images/me.png"" # used for microformats
  description: """"
  # Uncomment if you need this
  # images:
  #   - images/og-featured.png # relative path to ""static"" directory
  # customCSS:
  #   - css/my.css # relative path to ""assets"" directory (don't use main.css filename)
  # customJS:
  #   - js/main.js # relative path to ""assets"" directory
  dateFormat: ""2006-01-02""
  paginationSinglePost: true
  style: light-without-switcher
  mainSections: [ ""posts"" ] # which sections should be on index/main page
  sectionsWithFullContentOnListPage: [ ""notes"" ] # for which sections content should be displayed on list pages
  readMore: false # show read more button
  readNextPosts: 5  # show 5 related posts, 0 by default
  disableSummary: false
  toc: true # display Table of Contents
  tocWordCount: 300 # ...when a post is longer than 300 words
  copyCodeButton: true # true by default
  rssAsSocialIcon: true
  mathjax: false # https://www.mathjax.org/
  # utteranc.es support
  utterancesRepo: """"  # mandatory
  utterancesTheme: """" # optional
  utterancesIssue: """" # optional
  utterancesLabel: """" # optional
  # isso support
  isso:
    enabled: true # mandatory
    data: ""https://comments.example.com/"" # mandatory
    jsLocation: ""https://comments.example.com/js/embed.min.js"" # mandatory
    css: true # optional
    lang: ""de"" # optional
    replyToSelf: true # mandatory
    requireAuthor: true # mandatory
    requireEmail: true # mandatory
    id: ""thread-id"" # optional
    avatar: true # optional
    avatar-bg: ""#f0f0f0"" # optional
    feed: false # optional
  UmamiAnalytics:
    enabled: true # mandatory
    dnt: true # optional
    id: ""xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"" # mandatory
    datacache: false # optional
    url: ""https://abc.example.com/umami.js"" # mandatory
  graphcommentId: """"
  # giscus support
  GiscusRepo: """" # mandatory
  GiscusRepoId: """" # mandatory
  GiscusCategory: ""Announcements"" # mandatory
  GiscusCategoryId: """" # mandatory
  GiscusLazyLoad: false # optional
  webmentions:
    url: https://yourdomain.com/webemntions/receive
    login: hugo-theme-anubis
    pingback: true
  social:
  - id: github
    name: gohugoio
#  - id: hugo
#    url: ""https://gohugo.io/""
#    icon: ""hugo""

markup:
  goldmark:
    renderer:
      unsafe: true # enable raw HTML in Markdown
Check your site In order to see your site in action, run Hugo’s built-in local server.$ hugo serverNow enter localhost:1313 in the address bar of your browser.Feature Settings Dark Mode Customize via style param in params section of config.
Options:light-without-switcher - light theme, without switcher (by default)dark-without-switcher - dark theme, without switcherauto-without-switcher - theme based on user system settings, without switcherlight - light theme by default, can be switched by user to dark theme and back. Theme settings are saved for userdark - dark theme by default, can be switched by user to light theme and back. Theme settings are saved for userauto - theme based on user system settings by default, can be switched by user to dark/light theme. Theme settings are saved for user (by default in example sites)Table of Contents If toc param in params section of the config file is set to true,
Table of Contents is generated for every post that is at least tocWordCount
words long (0 by default, also belongs to the params section of the config).This behavior can be overridden on per-post basis
by setting toc to either true or false in the front matter of a post.Social icons Predefined icons To add icon from predefined list, add to params.social config:id of social networkname for placeholder (usually it’s your nickname or login)Predefined list:emailfacebookgithubinstagramlinkedinmastodon (need full url)patreonredditsnapchatsoundcloudspotifytelegramtwitchtwittervkyoutubeExample:  - id: github
    name: gohugoio
Config like this generate github icon with “https://github.com/gohugoio"" url.Predefined icons with custom url To add predefined icon with custom url, add to params.social config:id of social networkfull url to your networkExample:  - id: github
    url: ""https://github.com/gohugoio/hugo""
Config like this generate github icon with “https://github.com/gohugoio/hugo"" url.Custom icons To add custom icon, add to params.social config:id of social network/sitefull url to your network/siteAlso you need to create directory static/fa-icons and add svg icon of your network/site with name equals to id from config.Example:  - id: google
    url: ""https://www.google.com/search?q=I'm+lucky""
Icon should be “static/fa-icons/google.svg”If you want font awesome icons, download “Font Awesome For Desktop” and open svg directory.Google Analytics Only works for production environment.Multilingual mode Check config/example usage in exampleSiteMultilingual directory and documentation on Hugo site.RSS RSS is available by site url + /index.xml. Also available for specific language, section, taxonomy.rssAsSocialIcon parameter enables rss social icon with link to site current language RSS.Robots.txt Based on environment.For production — allow all, for other — disallow all.Favorite posts Add favorite: true to post front matter. It adds a “★” icon nearby post’s title.Related posts (Read Next section) Based on readNextPosts config parameter. Check this article for configuration details.Hiding posts from RSS Add disable_feed: true to post front matter.Make post available only by link Add hidden: true to post front matter. Post also is not available in RSS feed.Pagination on post single page Enabled by paginationSinglePost param in params section of config.Webmentions To provide webmention support you can either specify your webmention.io username with login: webmentionusername or specify a link to your custom webmention endpoint with url: https://yourdomain.com/webemntions/receive.
If you use webmention.io you can also enable pingback with pingback: trueDisabling comments per-page basis Add disableComments: true to post front matter.Custom shortcodes Video (for local videofiles) Example: {{< video src=""/media/movie.mp4"" type=""video/mp4"" preload=""auto"" caption=""Some caption"" alt=""Some alt"" >}}Contributing If you find a bug or have an idea for a feature, feel free to write an issue or make a PR.TODO See issues.License MIT© Dmitry Kolosov
2020See AlsoAcademicColor Your WorldHugoplateLightbiPaige",NA
Lruihao,339,2023-03-31,MIT,"Blog, Dark, Light, Responsive",FixIt,"A Clean, Elegant but Advanced Hugo Theme for Hugo.",https://github.com/hugo-fixit/FixIt,https://fixit.lruihao.cn,"FixIt Theme | Hugo

👉 English README | 简体中文说明FixIt is a clean, elegant but advanced blog theme for Hugo.It is based on the original LoveIt Theme, KeepIt Theme and LeaveIt Theme.The FixIt theme inherits the excellent features of these themes, and adds new features and optimizations on those basis. Please read Why Choose FixIt to learn more.Getting started Head to the getting started page or start with a template:hugo-fixit/hugo-fixit-blog-githugo-fixit/hugo-fixit-blog-goDocumentation Head to this documentation page for a complete guidence to get started with the FixIt theme.Or run Documentation Site locally, see more details from Contributing.In addition, there is the FixIt wiki.Migrate from LoveIt If you are currently using the LoveIt theme (or some other themes), it is very easy to migrate to FixIt.You can add this repo as a submodule of your site directory. Alternatively, you can install the theme in other ways.git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt
And later you can update the submodule in your site directory to the latest commit using this command:git submodule update --remote --merge
Next, go to the config.toml and change the default theme to FixIt.- theme = ""LoveIt""
+ theme = ""FixIt""
Now the migration is finished and everything is ready 🎉Why choose FixIt The FixIt theme inherits the excellent features of themes such as LoveIt, and adds new features and optimizations on those basis, as detailed in Features. In addition, the FixIt theme has the following advantages:Complete Chinese and English official documentationsCommunity support: Theme official website, Discussions and official QQ groupContinuously and actively updateConstantly incorporate suggestions and ideas from all sidesHighly open theme customizable sectionIn short, if you prefer the design language and freedom of the FixIt theme, and if you like to personalize your own themes as I do, the FixIt theme may be more suitable for you.Who used FixIt To see this theme in action, here are some live demo sites which are rendered with FixIt theme.Features Performance and SEO Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed InsightsOptimized SEO performance with a correct SEO SCHEMA based on JSON-LDGoogle Analytics supportedFathom Analytics supportedSearch engine verification supported (Google, Bing, Yandex, Pinterest, Baidu, 360 and Sogou)CDN for third-party libraries supportedAppearance and Layout Responsive layoutLight/Dark modeGlobally consistent design languagePagination supportedEasy-to-use and self-expanding table of contentsMultilanguage supported and i18n readyBeautiful CSS animationSocial and Comment Systems Gravatar supported by GravatarLocal Avatar supportedUp to 87 social links supportedUp to 28 share sites supportedDisqus comment system supported by DisqusGitalk comment system supported by GitalkValine comment system supported by ValineWaline comment system supported by WalineFacebook comments system supported by FacebookTelegram comments system supported by Telegram CommentsCommento comment system supported by CommentoUtterances comment system supported by UtterancesArtalk comment system supported by ArtalkTwikoo comment system supported by Twikoogiscus comment system supported by giscusExtended Features PWA (Progressive Web App) supportedSub Menu supportedContent Encryption supported (Pages, Partial)Friends page embedded templateSearch supported by Lunr.js or algolia or Fuse.jsTwemoji supportedAutomatically highlighting codeCopy code to clipboard with one clickImages gallery supported by lightgalleryExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagrams shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSMusic player shortcode supported by APlayer and MetingJSBilibili player shortcodeKinds of admonitions shortcodeCustom style shortcodeCustom script shortcodeAnimated typing supported by TypeItCookie consent banner supported by cookieconsentWeb Watermark supported by cell-watermarkChinese typesetting supported by pangu.js&mldr;Multilingual and i18n FixIt supports the following languages:EnglishSimplified ChineseTraditional ChineseFrenchPolishBrazilian PortugueseItalianSpanishGermanSerbianRussianRomanianVietnameseContribute with a new languageLanguages CompatibilityRoadmap Changelog Questions, ideas, bugs, pull requests All feedback is welcome! Head over to the issues or discussions tracker.Contributing Please see CONTRIBUTING.md for getting started with the contribution.Make sure that you follow CODE_OF_CONDUCT.md while contributing and engaging in the discussions.When contributing, please first discuss the change you wish to make via an issue on this repository before making the actual change.Contributors Acknowledgements Thanks to the authors of following resources included in the theme:normalize.cssFont AwesomeSimple IconsAnimate.cssautocomplete-jsLunr.jsalgoliasearchFuse.jsobject-fit-imagesTwemojiemoji-datalightgallerySharer.jsTypeItKaTeXmermaidEChartsMapbox GL JSAPlayerMetingJSGitalkValinecookieconsentcell-watermark不蒜子pangu.jsArtalkWalineTwikoogithub-cornersgiscuscrypto-jsvConsoleerudapaceThe FixIt also draws on some features of the following projects, and thanks to their authors as well:DoItNexTLicense FixIt is licensed under the MIT license. Check the LICENSE file for details.Author LruihaoSponsor Giving me a Star 🌟 is already the greatest encouragement and support for me.If you enjoy the theme, please consider buying me a coffee ☕️.PayPalAlipayWechatThanks! ❤️See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
Lednerb | Sascha Brendel,335,2023-10-21,MIT,"Blog, Gallery, Multilingual, Personal, Responsive",Bilberry Hugo Theme,Bilberry is a premium Hugo theme with many great features. This is a Hugo adaptation and further optimization of the Lingonberry WordPress theme by Anders Norén.,https://github.com/Lednerb/bilberry-hugo-theme,https://lednerb.github.io/bilberry-hugo-theme,"Bilberry Hugo Theme v4



This guide is for v4 version. For v3, please use this guide.IMPORTANT v3 will be supported until August 31, 2024. Only critical bugs will be fixed during this period, no
new features will be implemented. If you want to migrate from v3 to v4, please read the migration guide.For those who want to contribute to or customize the Bilberry Hugo theme, please see the developer guide.Bilberry is a premium Hugo theme with many great features.
This is an adaptation and further optimization of
the Lingonberry WordPress theme by Anders Norén.Here’s a live demo site to see this theme in action.Support and Discussions Support for this theme is provided through the Issues
and Discussions sections of the project.
Please use the Issues section if you would like to report a defect or bug. For any other requests, use the Discussions section.Please use the following guidelines if you want to start a discussion:For any questions regarding a specific feature, or if you need help using or customizing the theme, use the Questions & Answers (Q&A) category.To propose a new feature or any other improvements, use the Ideas category.To showcase your blog or website powered by Bilberry theme, use the Show and tell category.For any other inquiries, please use the General type discussion.Table of ContentsRequirementsQuick StartSite Initial SetupTheme Installation OptionsOption 1 (recommended): Adding the Theme as a Hugo ModuleOption 2: Adding the Theme as a Git submoduleOption 3: Copying the Theme FilesConfigurationWebserverFree HostingOther TutorialsFeaturesDefault Post TypesSingle PagePage BundleTop Navigation BarAlgolia SearchInitial SetupUpdate Algolia IndexManual UploadAutomated UploadKeyboard ShortcutsReposted Article/Duplicated ContentEstimated Reading TimeSummary SplitsAutomatic Summary SplitManual Summary SplitFront Matter Summary SplitNo Summary SplitOpen Graph MetadataTable of Contents (TOC)Series TaxonomyExternal ImagesImage Modal ZoomFeatured ImageAutomatic Image ResizingVideoPeerTube ConfigurationAudioGoogle AnalyticsCommentsCommentoDisqusGiscusUtterancesArchive PageResponsive DesignMathJAX MarkupDisabled JavaScript SupportTrimmed JavaScript SizeRaw HTMLCustomizationsHooksFavicons404 PageCustom Post TypesIndividual PostsSyntax HighlightingColors and FontsCSS and JS modulesCookie Disclaimer (GDPR)TranslationsCreditsContributorsLicenseRequirements Hugo (version >= 0.109.0 extended), see this guide on how to install Hugo.Git, see this guide on how to install Git.Go (version >= 1.19), optional, required only when the Bilberry theme is used as a Hugo module; see
this guide on how to install Go.Quick Start Site Initial Setup Clone the Bilberry Hugo theme repository to your local computer:git clone https://github.com/Lednerb/bilberry-hugo-theme.git
Alternatively, you can download it as a ZIP file
and extract into the bilberry-hugo-theme directory.Create a new site:hugo new site my-new-blog
Delete the default archetype:rm my-new-blog/archetypes/default.md
Copy the example site content, including the config.toml file:cp -r bilberry-hugo-theme/v4/exampleSite/* my-new-blog
Theme Installation Options Option 1 (recommended): Adding the Theme as a Hugo Module Use this option if you want to pull in the theme files as a Hugo module from the main Bilberry Hugo theme repository.
This option makes it easy to keep the theme up to date in your site.Initialize your website as a Hugo module from the site’s root:cd my-new-blog
hugo mod init github.com/<your-user>/my-new-blog
Following the Hugo module initialization, you may have the following warning: module ""
github.com/Lednerb/bilberry-hugo-theme/v4"" not found, which should be ignored.Pull theme files to add new content to your website:hugo mod vendor
If you need more details on how to use Hugo modules, please read
the Hugo documentation.Option 2: Adding the Theme as a Git submodule Use this option if you want to pull in the theme files as a Git submodule from the main Bilberry Hugo theme repository.
This option also makes it easy to keep the theme up to date in your site.In the my-new-blog/config.toml file, uncomment the theme property for Options 2 and 3, and
comment out the theme property for Option 1:# Option 1 (recommended): adding the theme as a hugo module
# theme = ""github.com/Lednerb/bilberry-hugo-theme/v4""

# Options 2 and 3: cloning/copying the theme files
theme = ""bilberry-hugo-theme/v4""
Add the Bilberry Hugo theme as a Git submodule from the site’s root:$ git submodule add https://github.com/Lednerb/bilberry-hugo-theme.git themes/bilberry-hugo-theme
Option 3: Copying the Theme Files Use this option if you want to directly customize and maintain your own copy of the theme.In the my-new-blog/config.toml file, uncomment the theme property for Options 2 and 3, and
comment out the theme property for Option 1:# Option 1 (recommended): adding the theme as a hugo module
# theme = ""github.com/Lednerb/bilberry-hugo-theme/v4""

# Options 2 and 3: cloning/copying the theme files
theme = ""bilberry-hugo-theme/v4""
Copy cloned (or unzipped) theme files in previous step to the my-new-blog/themes directory:cp -r bilberry-hugo-theme my-new-blog/themes/bilberry-hugo-theme
Important: Do NOT change the name of the themes/bilberry-hugo-theme folder in your site’s root.
Renaming this folder will break your site.Configuration To customize your website according to your needs, edit the config.toml file in the site’s root
directory by adjusting the settings. All parameters that need to be configured are commented out or
disabled.The Algolia Search is enabled in the config.toml file that comes with the example site; therefore,
if you don’t plan to use it, disable it by setting the algolia_search property to false.Webserver To build and serve the site, execute the following command from the site’s root:cd my-new-blog
hugo server
Free Hosting To deploy and host your website for free, you can use either GitHub Pages
or Netlify.Important: When hosting on GitHub Pages, you should add an empty file named .nojekyll to the site’s root to avoid
the issue with Font Awesome’s icons not being loaded.Other Tutorials Start Blogging With Hugo, GitHub, and NetlifyConfigure Custom Domain and HTTPS on NetlifyManage Environment-Specific Settings for Hugo-Based WebsiteFeatures Default Post Types Bilberry theme comes with a set of predefined post types, namely article, audio, code, gallery, link, page
, quote, status, and video where the article type is the default one.To create a new content, use the hugo new command. Content can be created in two ways: a single page or
a page bundle.Single Page To create new content as a single page, you can use the following command:hugo new <content-type>/my-single-page-content.md
Page Bundle Or, new page bundle content can be created as follows:hugo new <content-type>/my-page-bundle-content/index.md
For example, you can create a new article as a single page and a new gallery as a page bundle using the following
commands respectively:hugo new article/my-single-page-article.md
hugo new gallery/my-page-bundle-gallery/index.md
The page post type is the only one that can be used in the top navigation bar.
Pages can be ordered using the weight front matter variable, which should be set to a non-zero value.
A page with a lower weight will be displayed first.The page content can be a static page, such as an About page, or a link to another page, internal or external.The link post type always links to an external site and can be used with or without a background image.Top Navigation Bar If you want to permanently display the top navigation bar with the search text field and page items, set
the permanentTopNav parameter to true in the config.toml file.If you want to display the top navigation bar when scrolling down the page, set the stickyNav parameter to true. But
this will only work when the permanentTopNav is also set to true.Please note that the top navigation bar is minimized by default on mobile devices.Algolia Search Bilberry theme includes built-in content search via Algolia SAAS.
You can see this in action on the demo site by clicking on “hamburger”
and typing something in the search text field, such as “support.”Initial Setup To enable and configure search functionality for your site, follow these steps:Register for a free Algolia Search account on https://www.algolia.com/.Add a New Application. You can choose the COMMUNITY plan.Switch over to Indices and create a new index.Switch over to API Keys and copy your Application ID, Search-Only API Key and chosen Index name to
your config.toml file.Make sure that the algolia_search parameter is set to true.Follow the instructions in the section Update Algolia Index and proceed to the next step.To complete the initial setup, go to the tab Configuration of your newly created indices, select the Facets in
the section FILTERING AND FACETING, and add the language attribute with the filter only modifier in
the Attributes for faceting option. If, after adding the language attribute, the Unknown attribute error is
shown, ignore it.Update Algolia Index You have to repeat this step every time you change a post or publish a new one to update the search index.Execute the hugo command in the site’s root directory to generate the index.json file.Manual UploadHead over to the public/index.json file and copy its content.Log in to your Algolia account, open your index, and click on Add records manually.Paste the copied text from the index.json file.Verify in the Browse tab of your index that the index records were uploaded correctly.In case you have a multi-language setup, make sure that you repeat the steps above for all public/{LANG}/index.json
files.Automated UploadSwitch to the algolia directory and install the required dependencies by executing the following command:cd algolia
npm install
Run the data-upload.js from the algolia directory as follows:npm run data-upload -- -f ../public/index.json -a <algolia-app-id> -k <algolia-admin-api-key> -n <algolia-index-name>
The algolia-admin-api-key argument, namely your Algolia account’s Admin API Key, is used to create, update, and
delete indices, and it should be kept secret.Add the -c or --clear-index option if you want to clear the corresponding Algolia index before starting a new
upload.Log in to your Algolia account and verify in the Browse tab of your index that the index records were uploaded
correctly.In case you have a multi-language setup, make sure that you repeat the steps above for all public/{LANG}/index.json
files.Also, you can read this write-up on
how to automate
data upload to Algolia index if you host your Bilberry theme-based website on Netlify, or
this write-up using GitHub
Actions.Keyboard Shortcuts Type s to open the navigation bar and set the focus to the search input field.
To remove focus, press the Esc key.Reposted Article/Duplicated Content If you need to repost an article from another website or duplicate content on your site, you should link it to the
original URL so it’s correctly processed by SEO.
To do so, define the original_url front matter variable in your post, for example:original_url: ""https://example.org/path/to/content""
Estimated Reading Time To show an article’s estimated reading time, set the showReadingTime parameter to true in the config.toml file.
You can override the estimated reading time by setting the article’s readingTime front matter variable to a value you
want. If you set this variable to 0, the reading time will not be shown.readingTime: 7 # will show ""7 MIN READ""
readingTime: 0 # reading time will not be shown
Summary Splits There are three options for how Hugo can generate summaries of content which will be used as a short version in summary
views, such as a home page and tags or categories pages.Automatic Summary Split Using the first 70 words of your content, Hugo automatically generates the summary followed by the Continue reading link.Manual Summary Split Add the `` summary divider to your content.
Any content before the divider will be used by Hugo as a summary of that content.
The generated summary will also be followed by the Continue reading link.Front Matter Summary Split To define a summary that differs from the text that starts your article, use the summary front matter variable, for
example, summary: ""Here goes my summary"".
This summary will also be followed by the Continue reading link.No Summary Split If you want to display the entire article without the Continue Reading link, set the noSummary variable to true in
your content file.Open Graph Metadata The following base Open Graph metadata is included by default in all pages: og:site_name, og:title, og:description, og:type, og:url, article:section, article:published_time, and article:modified_time where
the article:published_time tag will have the same timestamp value as the date front matter variable.Additional metadata can be included by adding the following front matter variables:publishDate for article:published_timeimages for og:imageaudio for og:audiovideos for og:videoseries for og:see_alsoFor example:title: ""Open Graph Metadata with Extra Front Matter Variables""
date: 2022-12-19T19:00:00-05:00
publishDate: 2022-12-19T20:00:00-05:00
lastmod: 2022-12-19T21:00:00-05:00
images: [""/img/content/article/open-graph-metadata-with-extra-front-matter-variables/thumbnail.jpg""]
audio: ""/audio/icq-remix.mp3""
videos: [""/video/test_mp4_video.mp4""]
series: [""My Cool Series""]
Table of Contents (TOC) To enable the automatic creation of a table of contents (TOC), set the toc front matter variable to true in your
article.
If the article’s markdown contains appropriate headings, Hugo will generate a table of content at the beginning of the
article.By default, a TOC is generated if the content’s word count is greater than 400.
The tocMinWordCount parameter defines this value in the config.toml configuration file.The headings that are taken into account for a TOC are from H2 (##) to H5 (#####) inclusive.
Also, if you want to display a TOC at a specific point in your article, set the toc front matter variable to false,
and use the toc shortcode like this:{{< toc >}}
Series Taxonomy In case you want to group some articles as a series, you have to add the series front matter variable to each article
and set its value to the name of the series, for example, series: [""My New Super Series""].The page at <site-base-url>/series/ will list all the series. To list all articles for a particular series within
markdown, you can use the series shortcode with the series name in question, for instance:{{< series ""My New Super Series"" >}}
Images External Images If you would like to use external images, such as those stored on another server or in the cloud, as
a featured image for your article or in the gallery post type, you can use them by setting the
appropriate front matter variables with the absolute URL values:# /content/article/my-external-featured-image-post.md

featuredImage: ""https://example.org/images/my-image.jpg""
# /content/gallery/my-external-gallery-post.md

gallery: [
""https://example.org/images/gallery-image1.jpg"",
""https://example.org/images/gallery-image2.jpg"",
""https://example.org/images/gallery-image3.jpg""
]
Image Modal Zoom When you include an image larger than the content area, the image becomes interactive, and a larger version can be
opened in a lightbox. Modal zoom will work only for images that are added using the standard markdown
annotation, e.g., ![Image alt text](/my_image.png) or ![Image alt text](/my_image.png ""Image figure caption"") for
images with a figure caption. Please note that this feature will not work for images added using raw HTML.Featured Image There are two options for adding a featured image to a post. The first approach is to use a single-page
post with the featuredImage front matter variable, where the value for this variable should be either the path
relative to the base URL or an absolute URL.Alternatively, when using a page-bundle post, the intended featured image should be
named featuredImage.* where the * is the image file extension, e.g., jpg, png, etc. Also, it should be placed
within the page bundle in question, for example:content
└── article
    └── my-post-with-featured-image
        ├── featuredImage.png
        └── index.md
Automatic Image Resizing Bilberry theme includes built-in automatic cropping and resizing only for featured and gallery
images, activated by default. However, if you want to disable it, set the resizeImages
parameter to false in the config.toml file. Also, this feature can be disabled at the post level
by setting the resizeImages front matter variable to false.For a featured image to be cropped and resized, it should be named featuredImage.* and placed
within the page bundle’s folder.NOTE: a featured image defined via the featuredImage front matter parameter will NOT be
cropped and resized.Hyperlink Image If you want to display an image as a hyperlink, use the hyperlink-image shortcode as follows:{{< hyperlink-image ""<image-text>"" ""<image-url>"" ""<link-url>"" >}}
Video The following video hosting providers are supported: YouTube, Vimeo
, Prezi, Bilibili, and PeerTube.
Videos in the MP4 format, either stored externally or within the site’s static folder, are also supported.
There are two options to display video embeds.The first option is to use a post of the video type. Use the following command to create your video post:hugo new video/<post-name>.md
Then set the appropriate front matter variable while removing the others:youtube: ""<youtube-video-id>""            # https://www.youtube.com/watch?v=M7IjJiZUutk -> ""M7IjJiZUutk""
vimeo: ""<vimeo-video-id>""                # https://vimeo.com/239830182 -> ""239830182""
prezi: ""<prezi-video-id>""                # https://prezi.com/v/5z9shnq7jzxs/what-to-study/ -> ""5z9shnq7jzxs""
bilibili: ""<bilibili-video-id>""          # https://www.bilibili.com/video/BV1Sx411T7QQ -> ""BV1Sx411T7QQ""
peertube: ""<peertube-video-id>""          # https://vids.tekdmn.me/w/w7WGHX7Lb6mCrbrpF3Xb8V (entire URL)
mp4video: ""<video-file-url>""             # location of video file (only mp4)
mp4videoImage: ""<image-video-file-url>""  # location of poster image 
For example, if an MP4 video and its image are stored in the static folder, you can set the corresponding front matter
variables as follows:mp4video: ""/<video-file-name>.mp4""
mp4videoImage: ""/<image-video-file-name>.png""
The second option is to use the video shortcode within markdown content in a post of the article type as follows:<!-- YouTube -->
{{< video type=""youtube"" id=""<youtube-video-id>"" >}}

<!-- Vimeo -->
{{< video type=""vimeo"" id=""<vimeo-video-id>"" >}}

<!-- Prezi -->
{{< video type=""prezi"" id=""<prezi-video-id>"" >}}

<!-- bilibili -->
{{< video type=""bilibili"" id=""<bilibili-video-id>"" >}}

<!-- PeerTube -->
{{< video type=""peertube"" id=""<peertube-video-id>"" >}}

<!-- MP4 external -->
{{< video type=""mp4"" url=""<video-file-url>"" imageUrl=""<image-video-file-url>"" >}}

<!-- MP4 in site's static folder -->
{{< video type=""mp4"" url=""/<video-file-name>.mp4"" imageUrl=""/<image-video-file-name>.png"" >}}
PeerTube Configuration Because there is no one PeerTube site, you need to indicate which ones your videos use, meaning you can’t use just the
video ID.
Instead, copy in the entire watch URL, and it’ll be transformed into the correct embed URL to use.There is an instance finder if you want to start hosting your
videos on PeerTube but don’t know which instance to join.Audio The following audio streaming providers are supported: Mixcloud
, SoundCloud, Spotify, and TuneIn.
Audio files in the Ogg, MP3, or WAV formats, either stored externally or within the site’s static folder, are
also supported.
There are two options to display audio embeds.The first option is to use a post of the audio type. Use the following command to create your audio post:hugo new audio/<post-name>.md
Then set the appropriate front matter variable while removing the others:spotify: ""<spotify-track-id>""        # https://open.spotify.com/track/3W2lz1sg6m4sEzjmoTjmdE?si=0659fd12179840dd -->
3W2lz1sg6m4sEzjmoTjmdE
soundcloud: ""<soundcloud-track-url>"" # https://soundcloud.com/lightbooks/alchemist-08-new-world-order-snip
tunein: ""<tunein-track-id>""          # https://tunein.com/embed/player/t117894382/"" --> t117894382
mixcloud: ""<mixcloud-track-id>""      # https://www.mixcloud.com/scienceforthepeople/445-ai-ant-intelligence/ -->
scienceforthepeople/445-ai-ant-intelligence
audiofile: ""<audio-file-url>""        # location of audio file (only ogg, mp3, or wav formats)
For example, if an MP3 audio file is stored in the static folder, you can set the audiofile front matter variable
as follows:audiofile: ""/<audio-file-name>.mp3""
The second option is to use the audio shortcode within markdown content in a post of the article type as follows:<!-- Mixcloud -->
{{< audio type=""mixcloud"" id=""<mixcloud-track-id>"" >}}

<!-- SoundCloud -->
{{< audio type=""soundcloud"" id=""<soundcloud-track-url>"" >}}

<!-- Spotify -->
{{< audio type=""spotify"" id=""<spotify-track-id>"" >}}

<!-- TuneIn -->
{{< audio type=""tunein"" id=""<tunein-track-id>"" >}}

<!-- MP3 external -->
{{< audio type=""audiofile"" url=""<audio-file-url>"" >}}

<!-- MP3 in site's static folder -->
{{< audio type=""audiofile"" url=""/<audio-file-name>.mp3"" >}}
Google Analytics Bilberry theme comes with built-in support for both v3 and v4
of Google Analytics.
You should set the value of the googleAnalytics property in the config.toml file to enable it.Such value for Universal Analytics v3 is prefixed with the UA letters.
So, suppose you migrate your existing website to the Bilberry theme, and your website is already tracked in Universal
Analytics, given that the corresponding property was created before October 14, 2020.
In that case, you should continue using the v3 value in the config.toml file.
But given that Universal Analytics will no longer process new data in standard properties beginning July 1, 2023, you
will have to create a Google Analytics v4 property linked to your v3 property.If you created your property after October 14, 2020, you’re likely using a Google Analytics v4 property already, and the
value for such property is prefixed with the G letter.
In that case, you should use the v4 value in the config.toml file.Comments To allow readers to comment under your articles, you can use either Commento
, Disqus, Giscus, or Utterances.Note to developers/contributors: if you want to submit a new commenting engine for integration with the Bilberry theme, it must meet the following criteria:The engine should be offered as a SAAS, i.e., you only need to create an account and configure the necessary settings on the engine’s website.If the engine is offered as a SAAS, it must have a free tier plan.All the configuration steps needed to integrate a third-party commenting service must occur only in the config.toml file and not within additional configuration in the partial files or any other.Commento Follow this guide if you want to use Commento Cloud Service
which is not free of cost.In case you want to use Self-hosting Commento, follow
these instructions.Then uncomment the commentoJsURL parameter in the config.toml file:#[...]
[params]
  #[...]

  # Commento
  commentoJsURL = ""http://localhost:8080/js/commento.js""
Disqus To allow readers to leave comments under your articles, sign up for free on Disqus website.
Then create a new site and set the disqusShortname parameter to your site’s short name in the config.toml file:#[...]
[params]
  #[...]

  # Disqus
  disqusShortname = ""lednerb""
You can manage and moderate the comments either on your website or using the Disqus management panel.Giscus Follow instructions on Giscus website.
Once you complete the prerequisites for your GitHub repository and select a discussion category, values
for giscusRepositoryId and giscusCategoryId will be automatically generated.
Then, in the config.toml file, set the giscus parameter to true and the properties mentioned above, respectively:#[...]
[params]
  #[...]

  # Giscus
  giscus = true
  giscusJsUrl = ""https://giscus.app/client.js""
  giscusRepository = ""Lednerb/bilberry-hugo-theme""
  giscusRepositoryId = ""R_kgDOGX153A"" # generated by Giscus website
  giscusMapping = ""pathname""
  giscusCategory = ""General""
  giscusCategoryId = ""DIC_kwDOGX153M4B_2Vz"" # generated by Giscus website
  giscusTheme = ""light""
  giscusReactions = ""1""
  giscusEmitMetadata = ""0""
  giscusLanguage = ""en""
  giscusCrossOrigin = ""anonymous""
Utterances Follow instructions on Utterances website.
Once you complete the prerequisites for your GitHub repository, set the utterances parameter to true in
the config.toml file:#[...]
[params]
  #[...]

  # Utterances
  utterances = true
  utterancesJsUrl = ""https://utteranc.es/client.js""
  utterancesRepository = ""Lednerb/bilberry-hugo-theme""
  utterancesIssueTerm = ""pathname""
  utterancesLabel = ""Comment""
  utterancesTheme = ""github-light""
  utterancesCrossOrigin = ""anonymous""
Archive Page The archive page will be available at <site-base-url>/archive/ as soon as you copy
the themes/bilberry-hugo-theme/exampleSite/content/archive.md file to the content directory of your
site. By default, the published content is grouped by year. To group the content by year and month,
set the archiveDateGrouping parameter to the 2006-01 value.To display the archive link in the footer, set the showArchive parameter to true.To add the archive link to the top navigation bar, create a new page with the following command:hugo new page/archive.md
Then, in the newly created content/page/archive.md file, set the link front matter variable to
the /archive/ value and completely remove the target variable.Responsive Design Bilberry theme is optimized to look good on all devices, namely desktops, tablets and smartphones.MathJAX Markup To enable the MathJAX markup support, set the enable_mathjax parameter to true in
the config.toml file.Disabled JavaScript Support Although this theme has a lot of features that only work with enabled JavaScript, it also fully supports disabled
JavaScript.
Disabled Javascript will not break any styling or essential functionalities of your website.You can test the behavior of the demo site by disabling JavaScript in
your browser.Trimmed JavaScript Size By default, this theme’s JavaScript bundle contains the Moment.js library, which is large
enough, though they add real value.Therefore, to reduce the size of the downloaded JavaScript bundle, you can choose whether using the Moment.js library
remains enabled (currently the default) via the enableMomentJs configuration parameter. Setting it to false would
reduce the bundle size by ~262 kB gzipped.Raw HTML If you want to include raw HTML in your markdown content, set the unsafe setting in the config.toml file to true:[markup.goldmark]
  [markup.goldmark.renderer]
    unsafe = true
Customizations Hooks If you need to integrate your website with a third-party service or to customize it further, you can use the following
hook partials: hooks/head-end.html,
hooks/body-start.html,
and hooks/body-end.html.
Copy the file in question into your site root’s layouts/partials/hooks folder and add the necessary code, for
example, as in this hooks/body-end.html
file that contains integration with Umami web analytics.<script async defer src=""https://analytics.umami.is/script.js""
        data-website-id=""29b02d61-3df1-433f-8bb7-cba0ec70c9f7""></script>
Favicons To add favicons, proceed with the following steps:Visit https://realfavicongenerator.net/ website, and generate favicons according to your needs.Copy and paste the generated files into your site’s /static folder.Edit the /layouts/partials/favicon.html file, then copy and paste the HTML code from the generated instruction.Important: You have to follow the Quick Start instructions or manually copy
the /layouts/partials/favicon.html file from the theme to your site’s /layouts directory.Also, check out this tutorial on how to add
favicons to Bilberry theme-based website.404 Page To customize your 404 page, copy the themes/bilberry-hugo-theme/layouts/404.html file to your
site’s layouts/404.html and edit the file according to your needs, for example, change the message, icon class etc.Custom Post Types With the Bilberry theme, you can create new post types easily.
For example, suppose you want to create a new type named book.
Then you should do the following:Copy the default themes/bilberry-hugo-theme/layouts/partials/content-type/article.html to your
site’s layouts/partials/content-type/ folder.Rename the file to your custom post type, namely book.html.Customize the newly created file, for instance, change the icon in the bubble to fa-book that is available
on Font Awesome Icon website:<i class=""fas fa-fw fa-book""></i>
To create new posts, use the book post type prefix:hugo new book/my-favorite-book.md`
If you want to use custom front matter variables, create a book.md archetype in your site’s archetypes/ directory.Individual Posts You can customize your posts as follows:To exclude posts from your blog’s index but still show up in categories, add excludeFromIndex: true to your post’s
front matter.To pin one or more posts to the top of the index page, uncomment the pinnedPost parameter in the config.toml
file.
Then set its value to the post’s relative URL, for example, /article/installing-bilberry-theme/.
When pinning multiple posts, the relative URL values should be separated by a comma.
The pinOnlyToFirstPage parameter allows you to choose whether to display pinned posts on the index page only or on
all pages.A custom icon can be declared per post, by specifying a font-awesome icon in the post’s front matter, such
as icon: fa-thumb-tack for a pinned post.If you want to change the default post types(e.g., replace the pencil icon for the article post type another one)
copy the original content type file to your site’s layouts/partials/content-type/ directory and edit it there.
Otherwise, your changes will be overwritten when you update the theme to the latest version.Syntax Highlighting Syntax highlighting for code blocks in your posts is implemented using Hugo’s
built-in Chrome code highlighter. Highlighting for code blocks in your posts can
be customized at the site level or per code block.To change the default configuration at the site level, adjust the properties in the [markup.highlight] section of
the config.toml file. For example, you can change the default monokai style to the one from
the Chroma Style Gallery.Per the code block, the following parameters can be
personalized: linenos, hl_lines, linenostart, anchorlinenos, lineanchors, and hl_inline, for example:```java {linenos=inline, hl_lines=“7-12 21-26”}// &mldr; code```Read Hugo’s documentation for more details.Colors and Fonts Styling is implemented using SCSS along with npm, which is only used for dependency management. Colors and fonts can be customized via variables defined in
the assets/sass/theme.scss file.For example, if you want to customize the $base-color variable, you should define the baseColor parameter in your
site’s config.toml file.$base-color: {{ .Param ""baseColor"" | default ""#1d1f38"" }};
[params]
  baseColor = ""#ff8080""
CSS and JS modules This theme supports hot-swappable CSS and JavaScript extensions, which can be specified using the css_modules
and js_modules list parameters in your site’s config.toml file. Modules can be specified either relative to the static
directory (e.g., exampleSite/static/css/custom.css) or as a URL.Modules are imported in the order they appear in the list, and immediately after the default Bilberry CSS and JS files
are imported.Cookie Disclaimer (GDPR) You can use the cookie consent solution to add cookie consent information by
loading the needed resources as external CSS and JS modules.Use the configurator on the cookie consent website to generate the required
initialization code and add it to a local static/init-cookieconsent.js file, for example:// https://cookieconsent.insites.com/download/#
window.addEventListener('load', function () {
  window.cookieconsent.initialise({
    'palette': {
      'popup': {
        'background': '#cc0033'
      },
      'button': {
        'background': '#fff'
      }
    }
  })
})
Then you only need to modify the config.toml file to load the local init script and the libraries.
You can either download the files and put them in your site’s /static directory or reference them directly using a
CDN.
Storing these files on your website reduces external dependencies, increases privacy, and allows you to develop your
website in an offline environment.css_modules = ["".."", ""//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.css""]
js_modules = ["".."", ""//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"", ""init-cookieconsent.js""]
Translations Bilberry theme has built-in support for multi-language sites and currently supports translations for more than 20
languages.Feel free to submit a request for a new language translation or improve existing ones!Credits The Bilberry theme was inspired by the WordPress theme Lingonberry
created by Anders Norén.Bilberry is a theme for the great HUGO static site generator.Special thank-you goes to @Ipstenu for his help
in this thread that helped to
create the index.json for the Algolia index.Contributors Many thanks go to these wonderful people (emoji key):Sascha Brendel💬 📝 💻 🎨 📖 🌍Anna Brendel🤔 🌍Givi Khojanashvili💻Chung Tran Anh💻 🌍Minke Zhang💻Pavel Kanyshev💻 🌍Marcel Kraus💻Nick Busey💻lkorzen🌍Chris Stayte🐛Dmitry Matrosov💻Marc-Antoine💻 🐛Nina Zakharenko💻 🐛 📖Nisarga💻Pablo Domingo Rojo💻Rob Baruch💻Taoshi🌍nonumeros💻Marcelo Gonçalves🌍Dávid Sárkány🌍meonamz🌍Hamza Yusuf Çakır🌍Niclas Roßberger💻 🐛 🚧Igor Baiborodine💻 🐛 📖This project follows the all-contributors specification. Contributions
of any kind welcome!License The Bilberry Hugo theme is licensed under the MIT license.See AlsoAcademicHB Starter Theme TemplatePaigehugo-theme-waldenAnubis",NA
Marcin Mierzejewski,330,2023-07-25,MIT,"Blog, Gallery, Landing, Minimal, Personal, Portfolio, Responsive",hugo-theme-console,"A minimal, responsive and light theme for Hugo inspired by Linux console.",https://github.com/mrmierzejewski/hugo-theme-console,NA,"Hugo Theme: ConsoleA minimal, responsive and light theme for Hugo inspired by Linux console.Live demo https://themes.gohugo.io/themes/hugo-theme-console/Installation $ mkdir themes
$ cd themes
$ git submodule add https://github.com/mrmierzejewski/hugo-theme-console.git hugo-theme-console
See the Hugo documentation for more information.Configuration Set theme parameter in your config file:theme = ""hugo-theme-console""
Example Site To run the example site, please type the following command:make hugo-server
Start page The default start page template is located at themes/hugo-theme-console/layouts/index.html. To change the page content, you to need to copy this file to
your website top-level layouts folder (layouts/index.html).License Copyright © 2021 Marcin MierzejewskiThe theme is released under the MIT License. Check the original theme license for additional licensing information.See AlsoAcademicPaigeOsprey DelightPikoTailBliss",NA
Zeon Studio,285,2023-11-28,MIT,"Blog, Contact, Dark, Dark Mode, Landing, Light, Minimal, Multilingual, Personal, Responsive",Hugoplate,"Hugoplate is a free starter template built with Hugo, and TailwindCSS, providing everything you need to jumpstart your Hugo project and save valuable time.",https://github.com/zeon-studio/hugoplate,https://hugoplate.netlify.app/,"Hugo + Tailwind CSS Starter and BoilerplateHugoplate is a free starter template built with Hugo, and TailwindCSS, providing everything you need to jumpstart your Hugo project and save valuable time.Made with ♥ by Zeon StudioIf you find this project useful, please give it a ⭐ to show your support.👀 Demo | Page Speed (95+)🚀


🎁 What’s Included We have included almost everything you need to start your Hugo project. Let’s see what’s included in this template:📌 Key Features 👥 Multi-Authors🎯 Similar Posts Suggestion🔍 Search Functionality🌑 Dark Mode🏷️ Tags & Categories🔗 Netlify setting pre-configured📞 Support contact form📱 Fully responsive📝 Write and update content in Markdown💬 Disqus Comment🔳 Syntax Highlighting📄 15+ Pre-designed Pages 🏠 Homepage👤 About📞 Contact👥 Authors👤 Author Single📝 Blog📝 Blog Single🚫 Custom 404💡 Elements📄 Privacy Policy🏷️ Tags🏷️ Tag Single🗂️ Categories🗂️ Category Single🔍 Search📦 Tech Stack HugoTailwind CSSPostCSSPurgeCSSAutoPrefixerHugo ModulesMarkdownPrettierJshintNetlifyVercelGithub ActionsGitlab CiAWS Amplify🚀 Getting Started First you need to clone or download the template repository, and then let’s get started with the following process:⚙️ Prerequisites To start using this template, you need to have some prerequisites installed on your machine.Hugo Extended v0.115+Node v18+Go v1.20+👉 Project Setup We build this custom script to make your project setup easier. It will create a new Hugo theme folder, and clone the Hugoplate theme into it. Then move the exampleSite folder into the root directory. So that you can start your Hugo server without going into the exampleSite folder. Use the following command to setup your project.npm run project-setup
👉 Install Dependencies Install all the dependencies using the following command.npm install
👉 Development Command Start the development server using the following command.npm run dev
🎬 Still Confused? Watch a Quick Video https://github.com/zeon-studio/hugoplate/assets/58769763/c260c0ae-91be-42ce-b8db-aa7f11f777bd📝 Customization This template has been designed with a lot of customization options in mind. You can customize almost anything you want, including:👉 Site Config You can change the site title, base URL, language, theme, plugins, and more from the hugo.toml file.👉 Site Params You can customize all the parameters from the config/_default/params.toml file. This includes the logo, favicon, search, SEO metadata, and more.👉 Colors and Fonts You can change the colors and fonts from the data/theme.json file. This includes the primary color, secondary color, font family, and font size.👉 Social Links You can change the social links from the data/social.json file. Add your social links here, and they will automatically be displayed on the site.🛠 Advanced Usage We have added some custom scripts to make your life easier. You can use these scripts to help you with your development.👉 Update Modules We have added a lot of modules to this template. You can update all the modules using the following command.npm run update-modules
👉 Remove Dark Mode If you want to remove dark mode from your project, then you have to do it manually from everywhere. So we build a custom script to do it for you. you can use the following command to remove dark mode from your project.npm run remove-darkmode
🚀 Build And Deploy After you finish your development, you can build or deploy your project almost everywhere. Let’s see the process:👉 Build Command To build your project locally, you can use the following command. It will purge all the unused CSS and minify all the files.npm run build
👉 Deploy Site We have provided 5 different deploy platform configurations with this template, so you can deploy easily.NetlifyVercelGithub ActionsGitlab CiAWS AmplifyAnd if you want to Host some other hosting platforms. then you can build your project, and you will get a public folder. that you can copy and paste on your hosting platform.Note: You must change the baseURL in the hugo.toml file. Otherwise, your site will not work properly.🔒 Guide to Staying Compliant 🐞 Reporting Issues We use GitHub Issues as the official bug tracker for this Template. Please Search existing issues. It’s possible someone has already reported the same problem.
If your problem or idea has not been addressed yet, feel free to open a new issue.📝 License Copyright (c) 2023 - Present, Designed & Developed by Zeon StudioCode License: Released under the MIT license.Image license: The images are only for demonstration purposes. They have their license, we don’t have permission to share those images.🖼️ Showcase List of projects people are building with Hugoplate! Have you built a project with Hugoplate? Submit it by creating a pull request and we’ll feature it here!Open NeuromorphicAI ModelsHugobricksSee AlsoPaigeAcademicPikoColor Your WorldLightbi",NA
Varun A P,296,2023-01-09,MIT,"Blog, Responsive",Blist,Blist is a clean and fast blog theme for your Hugo site.,https://github.com/apvarun/blist-hugo-theme,https://blist.vercel.app,"Blist theme for HugoBlist is a clean and fast blog theme for your Hugo site.Features:Responsive content / Mobile-optimizedBlog paginationCustomizable Text SearchTable of contentsSocial linksCode highlightingColor customizationDark modeFast performanceSEO optimizedi18n supportSupport comments systemsDisqus (hugo native)giscusutterancesPreview ➡️ DEMOGet the theme Minimum Hugo Version: 0.82.1Run from the root of your Hugo site:git clone https://github.com/apvarun/blist-hugo-theme.git themes/blist
Alternatively, you can include this repository as a git submodule. This makes it easier to update this theme if you have your Hugo site in git as well:git submodule add https://github.com/apvarun/blist-hugo-theme.git themes/blist
Preview the theme with example content Blist theme ships with an fully configured example site. For a quick preview:Copy the package.json file from themes/blist folder to your hugo website root folder, and run npm install.cd themes/blist/exampleSite/
hugo serve --themesDir ../..
Then visit http://localhost:1313/ in your browser to view the example site.Configuring theme to a hugo website Copy package.json and package-lock.json to the root folder of your the websiteRun npm install to install required packages for themeRun npm i -g postcss-cli to use PostCSS with Hugo buildSet theme = 'blist' in config.tomlRun npm start to start your local serverMake sure to commit the above changes to your repository.Publish your website When deploying to services like Netlify or Vercel, use the following command for building your site:npm i && HUGO_ENVIRONMENT=production hugo --gc
The parameter HUGO_ENVIRONMENT=production enables the execution of css purging.Add content The following explains how to add content to your Hugo site. You can find sample content in the exampleSite/ folder.Structure: .
├── ...
├── blog       # Blog Section
│   ├── post1   # Post 1
│   ├── post2   # Post 2
│   └── _index
└── ...
Configure your site From exampleSite/, copy config.toml to the root folder of your Hugo site and change the fields as you like. Helpful comments are provided.Menu Menu in Blist theme is pre-set to have all section names. You can include custom links in header using the menu.main option config.toml.Logo logo param in the site config will allow to use an image as the logo instead of the website name. It is localizable and so can have different logo for different languagesDarkmode [params.darkModeToggle] enables the dark mode toggle in header. The preference is then saved so that the mode is automatically chosen for return visits.Customize Ascent Color Use [params.ascentColor] to change the default pink color to any supported color from the list of default colors from Tailwind CSS.Some example values: bg-blue-200, bg-yellow-300Search [params.enableSearch] option is used to enable search option in the theme.Adds the search icon in headerGenerates the search indexUses fuse.js to enable searching through contentIn order to search, you can either click on the search icon from header or press Ctrl/Cmd + / key combination.Note:Make sure to enable JSON in outputs array.[outputs]
  home = [""HTML"", ""RSS"", ""JSON""]
Latex Enable Mathematical options: set math: true in your markdown frontmatterGoogle Analytics Set googleAnalytics in config.toml to activate Hugo’s internal Google Analytics template.Performance Issues If you have a question, please open an issue for help and to help those who come after you. The more information you can provide, the better!Contributing Contributions, issues, and feature requests are welcome! For major changes, please open an issue first to discuss what you would like to change.apvarunRavinouengel-bchris-gillattdependabot[bot]xLexipAntoineSoeteweychiragksharmadlecanjpiaskowskilucab85MartyernavdeepkrroypeterLicense Licensed under MIT🤝 Support Give a ⭐️ if you like this project!See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Zachary Betz,291,2023-01-04,MIT,"Blog, Dark, Docs",Cupper,"An accessibility-friendly Hugo theme, ported from the original Cupper project.",https://github.com/zwbetz-gh/cupper-hugo-theme,NA,"⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️WARNING: This repo is no longer maintained. It’s archived and read-only.⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️CupperAn accessibility-friendly Hugo theme, ported from the original Cupper project.Table of contents DemoMinimum Hugo versionInstallationUpdatingRun example siteConfigurationNav Title or LogoFaviconsShortcodesSyntax highlightingEnable Table of Contents for a Blog PostLocalizationCustom CSS and JSDefault to Dark ThemeEnable utterancesNon-Git RepoGetting helpCreditsDemo https://cupper-hugo-theme.netlify.app/Minimum Hugo version Hugo version 0.81.0 or higher is required. View the Hugo releases and download the binary for your OS.Installation From the root of your site:git submodule add https://github.com/zwbetz-gh/cupper-hugo-theme.git themes/cupper-hugo-theme
Updating From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/cupper-hugo-theme/exampleSite:hugo server --themesDir ../..
Configuration Copy config.yaml from the exampleSite, then edit as desired.Nav Title or Logo The navTitleText param will be checked in your config file. If this param exists, the text value will be used as the nav titleOtherwise, a logo will be used as the nav title. Place your SVG logo at static/images/logo.svg. If you don’t provide a logo, then the default theme logo will be usedFavicons Upload your image to RealFaviconGenerator then copy-paste the generated favicon files under static.Shortcodes See the full list of supported shortcodes.Syntax highlighting Syntax highlighting is provided by Prism. See this markdown code fences example.By default, only a few languages are supported. If you want to add more, follow these steps:Select the languages you want from https://prismjs.com/download.htmlDownload the JS file, then copy it to static/js/prism.jsDownload the CSS file, then copy it to static/css/prism.cssEnable Table of Contents for a Blog Post Set toc to true. For example:---
title: ""My page with a few headings""
toc: true
---
Localization The strings in the templates of this theme can be localized. Make a copy of <THEME_BASE_FOLDER>/i18n/en.yaml to <YOUR_SITE_FOLDER>/i18n/<YOUR_SITE_LANGUAGE>.yaml, and translate one by one, changing the translation field.Here is a tutorial that goes more in depth about this.Custom CSS and JS You can provide an optional list of custom CSS files, which must be placed inside the static dir. These will load after the theme CSS loads. So, static/css/custom_01.css translates to css/custom_01.css.You can provide an optional list of custom JS files, which must be placed inside the static dir. These will load after the theme JS loads. So, static/js/custom_01.js translates to js/custom_01.js.See the example site config file for sample usage.Default to Dark Theme In the site config file set the param defaultDarkTheme to true.E.g. for config.yamlparams:
  defaultDarkTheme: true
Note that the default of light or dark theme only applies to the first visit to a site using this theme. Once the site is visited the choice of dark or light theme is stored in ’local storage’ in the browser.To reset to a ‘first visit’ scenario (e.g. for testing), one needs to either browse in private mode (aka Incognito/InPrivate/etc) or delete ’local storage’ for this site. The easiest way to do that, but which affects other sites as well, is to use the ‘Clear History’ feature of the browser.Check your browser’s help or documentation for details.Enable utterances utterances is a lightweight comments widget built on GitHub issues.Firstly, choose the repository utterances will connect to:Make sure the repo is public, otherwise your readers will not be able to view the issues/comments.Make sure the utterances app is installed on the repo, otherwise users will not be able to post comments.If your repo is a fork, navigate to its settings tab and confirm the issues feature is turned on.Secondly,In the site config file set the param utterances.repo to enable it.E.g. for config.yamlparams:
  utterances:
    repo: username/username.github.io
    issueTerm: title
    theme: github-light
Refer to utterances for more information!Non-Git Repo If your site is not a git repo, then set enableGitInfo to false in your config file.Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines.Credits Thank you to Heydon Pickering and The Paciello Group for creating the original Cupper project.See AlsoAcademicBootstrap Theme for Personal Blog and DocumentationsComposeHB Starter Theme TemplateHextra",NA
NA,260,2023-11-21,GNU GPLv3,"Blog, Dark, Light, Minimal, Personal, Portfolio, Responsive",Gokarna,Gokarna is an opinionated theme with a focus on minimalism and simplicity,https://github.com/526avijitgupta/gokarna,https://gokarna-hugo.netlify.app,"GokarnaGokarna is an opinionated theme with a focus on minimalism and simplicity.Authors: Yash MehrotraAvijit GuptaDemo: https://gokarna-hugo.netlify.app Support the developer Features Minimalistic & fastCustomizable headerResponsiveAvailable in light and dark themesNative fonts and support for feather icons and svg iconsSyntax highlightingSEO ReadyTable of contents which can be configured per pageOption to add custom javascript and cssRSS FeedMath typesetting using KatexScreenshots Homepage Light ModeDark ModePost page Light ModeDark ModeList page Light ModeDark ModeInstallation Follow details installation steps in the documentation heregit submodule add https://github.com/526avijitgupta/gokarna.git themes/gokarna
Customization For a complete guide on customization, please go through our basic and advanced theme documentation. A gist of things you can customize:Navigation menuAvatar image and sizeAccent colorTheme mode (Auto, Light & Dark)Custom HTML in head and footer section for loading any scriptsSyntax highlightingOption to show posts recent or popular homepage.FooterInspiration The theme is inspired by and accordingly named after Gokarna, a small and peaceful beach town on the west coast on India.Performance Google Lighthouse check score: 100%LICENSE This code is licensed under GNU GPLv3See AlsoAcademicHugo LiftoffLightbiPaigePiko","Yash Mehrotra, Avijit Gupta"
Weru,279,2023-11-02,MIT,"Blog, Dark, Dark Mode, Docs",Compose,A hugo theme for documentation sites. It's inspired by forestry.io's docs page,https://github.com/onweru/compose,NA,"ComposeCompose is a Hugo theme for documentation websites. The theme provides a simple navigation & structure.Features DocumentationGallery SupportNative lazy loading of imagesLive searchFlowcharts, Piecharts, doughnut & bar charts supportSearchable & Sortable tablesSyntax highlightingMermaid SupportDocumentation Install compose themeUse forestry CMSCustomize your siteConfigure searchShortcodesMermaidExampleSite The exampleSite serves as this theme’s user guide .This guide covers the necessary bits. As the project evolves, the user-guide will get more comprehensiveYou can use Hugo to generate and serve a local copy of the guide (also useful for testing local theme changes).git clone --recurse-submodules --depth 1 https://github.com/onweru/compose.git
cd compose/exampleSite/
hugo server --themesDir ../..
Also built by Weru Clarity ThemeNewsroom ThemeSwift ThemeBrowseLicense This theme is available under the MIT license.See AlsoBootstrap Theme for Personal Blog and DocumentationsHB Starter Theme TemplateAcademicBlowfishCompost",NA
Lukas Joswiak,270,2022-10-13,MIT,"Blog, Dark Mode, Minimal, Responsive",Etch,Lightweight Hugo theme with a focus on content,https://github.com/LukasJoswiak/etch,https://lukasjoswiak.github.io/etch/,"EtchEtch is a simple, responsive theme for Hugo with a focus on writing. A live demo is available at https://lukasjoswiak.github.io/etch/.Features: Homepage with list of posts.Support for pages.Responsive design for optimized mobile experience.Syntax highlighting with customizable theme.Dark theme which automatically adjusts based on users’ setting (example).No external dependencies, no JavaScript, no web fonts.Internationalization friendly: use default English translations or create your ownInstallation To install etch, download the repository into the themes folder in the root of your site.$ git submodule add https://github.com/LukasJoswiak/etch.git themes/etch
Then, use the theme to generate your site.$ hugo server -t etch
Use the sample configuration as a starting point. See the configuration page for more info.Read the wiki to learn about more options.See AlsoBlowfishCompostGruvboxGruvhugoHermit-V2",NA
Sören Weber,249,2023-12-05,MIT,"Dark, Dark Mode, Docs, Light, Multilingual, Responsive",Relearn,A theme for Hugo designed for documentation,https://github.com/McShelby/hugo-theme-relearn,https://mcshelby.github.io/hugo-theme-relearn,"Hugo Relearn ThemeA theme for Hugo designed for documentation.★ What’s new in the latest release ★Motivation The Relearn theme is a fork of the great Learn theme with the aim of fixing long outstanding bugs and adapting to latest Hugo features. As far as possible this theme tries to be a drop-in replacement for the Learn theme.Features Wide set of usage scenariosResponsive design for mobile usageLooks nice on paper (if it has to)Usable offline, no external dependenciesUsable from your local file system via file:// protocolSupport for the VSCode Front Matter extension for on-premise CMS capabilitiesSupport for Internet Explorer 11Support for Open Graph and Twitter CardsConfigurable theming and visualsConfigurable brand imagesAutomatic switch for light/dark variant dependend on your OS settingsPredefined light, dark and color variantsUser selectable variantsStylesheet generatorConfigurable syntax highlightingUnique theme featuresPrint whole chapters or even the complete siteIn page searchSite searchDedicated search pageTaxonomy supportConfigurable topbar buttonsUnlimited nested menu itemsConfigurable shortcut linksHidden pagesMulti language supportFull support for languages written right to leftAvailable languages: Arabic, Simplified Chinese, Traditional Chinese, Czech, Dutch, English, Finnish, French, German, Hindi, Hungarian, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Russian, Spanish, Swahili, Turkish, VietnameseSearch support for mixed language contentAdditional Markdown featuresSupport for GFM (GitHub Flavored Markdown)Image effects like sizing, shadow, border and alignmentImage lightboxShortcodes galoreDisplay files attached to page bundlesMarker badgesConfigurable buttonsList child pagesExpand areas to reveal contentFont Awesome iconsInclusion of other filesMath and chemical formulae using MathJaxMermaid diagrams for flowcharts, sequences, gantts, pie, etc.Colorful boxesOpenAPI specifications using Swagger UIReveal you site’s configuration parameterSingle tabbed panels and multiple tabbed panelsInstallation & Usage For a detailed description of the theme’s capabilities visit the official documentation.Changelog See the What’s New page for release highlights or the detailed change history for a complete list of changes.Contributions You are most welcome to contribute bugfixes or new features. Check the contribution guidelines first before starting.License The Relearn theme is licensed under the MIT License.Credits This theme would not be possible without the work of many others.See AlsoBootstrap Theme for Personal Blog and DocumentationsAcademicHB Starter Theme TemplateHugoplateLightbi",NA
Robert Austin,239,2023-11-26,MIT,"Bootstrap, Docs, Minimal, Responsive",Whisper,Whisper is a minimal documentation theme built for Hugo. The design and functionality is intentionally minimal.,https://github.com/zerostaticthemes/hugo-whisper-theme,https://hugo-whisper.netlify.app,"Hugo Whisper ThemeWhisper is a minimal documentation theme built for Hugo. The design and functionality is intentionally minimal.Live Demo |
Zerostatic ThemesTheme features Content TypesDocs (Markdown)HomepageContent ManagementThis theme generates documentation from markdown files located in content/docsThe “Home” page is not documentation, it can be used to introduce your project etc.SCSSSCSS (Hugo Pipelines)Responsive designBootstrap 5.3Speed100/100 Google Lighthouse speed score21KB without images ⚡Vanilla JS onlyMenuResponsive mobile menu managed in config.tomlInstallation 1. Install HugoTo use this theme you will first need to have Hugo installed. Please follow the official installation guide⚠️ Note: Check your Hugo version - Hugo Extended is required!This theme uses Hugo Pipes to compile SCSS and minify assets which means if you not using the Hugo extended version this theme will not work. To check your version of Hugo, run hugo version. Make sure you see /extended after the version number, for example Hugo Static Site Generator v0.51/extended darwin/amd64 BuildDate: unknown You do not need to use version v0.51 specifically, it just needs to have the /extended part.2. Create a new Hugo siteThis will create a fresh Hugo site in the folder mynewsite.hugo new site mynewsite
3. Install the themeDownload or git clone this theme into the sites themes folder mynewsite/themes. You should end up with the following folder structure mynewsite/themes/hugo-whisper-themecd mynewsite
git clone https://github.com/zerostaticthemes/hugo-whisper-theme.git themes/hugo-whisper-theme
4. Copy the example contentCopy the entire contents of the mynewsite/themes/hugo-whisper-theme/exampleSite/ folder to root folder of your Hugo site, ie mynewsite/. To copy the files using terminal, make sure you are still in the projects root, ie the mynewsite folder.cp -a themes/hugo-whisper-theme/exampleSite/. .
6. Run HugoAfter installing the theme for the first time, generate the Hugo site.You run this command from the root folder of your Hugo site ie mynewsite/hugo
For local development run Hugo’s built-in local server.hugo server
Now enter localhost:1313 in the address bar of your browser.Deploying to Netlify This theme includes a netlify.toml which is configured to deploy to Netlify from the exampleSite folder. If you have installed this theme into a new Hugo site and the exampleSite folder was copied or removed, you should delete the netlify.toml file.Credits More Hugo Themes by ZerostaticHugo Hero - Open-source business themeHugo Whisper - Open-source documentation themeHugo Serif - Open-source business themeHugo Winston - Open-source blog themeHugo Advance - Premium advanced multi page business & marketing themeHugo Paradigm - Premium landing page + site builder themeHugo Lever - Premium personal / bio themeHugo Shard - Premium SAAS / landing page themeFind hundreds more Hugo themes on Built At LightspeedSee AlsoAce documentationLotus DocsUNICEF InventoryAcademicAdritian Free Hugo Theme",NA
weru,258,2023-11-02,MIT,"Blog, Dark, Minimal",newsroom,A simple open source theme for publishing multi-purpose content,https://github.com/onweru/newsroom,NA,"Newsroom ThemeThis is a simple, minimalistic theme, which is inspired by Apple’s Newsroom page. It uses grid css, flexbox & js (no jQuery, or related libraries).Features BlogModernResponsiveDeeplinksDark ModeSupports native lazy loading of images & iframesSyntax highlightingDeeplinks For all content published using markdown, deeplinks will be added to the pages so that you can share with precision :smiley: Just hover on a heading and the link button will pop. Click it to copy.Install Newsroom Theme Note: Newsroom uses is styled in sass. Thefore, hugo-extended version must be installed on your system.Option 1: Add Newsroom as a git submodule Add this theme as a Git submodule inside your Hugo site folder:git submodule add https://github.com/onweru/newsroom.git themes/newsroom
Option 2: Add Newsroom as a hugo module (Recommended) In your config.toml file, set theme field value as followstheme = [""github.com/onweru/newsroom""]
Then runhugo mod init yourWebsiteName && hugo mod get -u .
Option 3: Install Newsroom into your theme directory (Least diserable) From the root of your Hugo website run:git clone https://github.com/onweru/newsroom themes/newsroom
In your config.toml file, set theme field value as followstheme = ""newsroom""
Configuration You can configure the site as follows:General InformationUse config.toml file.menu, footerSee the yaml files inside the data/ directory.Start publishing Follow the exampleSite/; specifically, the content directoryDark Mode Today, operating systems have a system-wide light ~ dark mode switch. Your website will adapt to the user’s preferred lighting mode. Still, if the user wants to opt in or out of darkmode, there’s a UI control for that too in the menu 😊.Set a default lighting mode Using your site’s config.toml file, set the value of defaultMode to either ""dark"" or ""light"".If your site is built from a copy of the exampleSite, the field is already included; you only need to uncomment and set its value.The UI control for toggling darkmode will remain in place. This way, the user can decide which mode they would like to use while browsing your websiteCustom 404 Page Syntax highlighting If you wish, you can opt to use Chroma.I want to use disqus If you like, you could use disqus on your site. To enable disqus on your site, simply, add the line below to you config.toml file. If you’re working off the exampleSite, the line is already there; just uncomment it.disqusShortname = ""yourdiscussshortname""
Remember to edit the yourdiscussshortname appropriately.From your disqus dashboard, set your scripts color scheme to auto. See screenshot belowCustom Shortcodes This theme ships with 2 custom shortcodes (they both use positional parameters):Video
This shortcode can be used to embed a youtube video with custom styling. It takes a solo positional parameter....
{{< video ""youtubeVideoID"" >}}
...
Picture
You want to use darkmode images when darkmode is enabled on a device and a regular image on lightmode? It takes 3 positional parameterStore these images in the static/images directory....
{{< picture ""lightModeImage.png"" ""darkModeImage.png"" ""Image alt text"" >}}
...
From the same creator Clarity ThemeCompose ThemeSwift ThemeBrowseLicense This theme is available under the MIT license.See AlsoAcademicAnatoleAnubisAstatineAva",NA
James Panther,255,2023-09-10,MIT,"Dark, Dark Mode, Light, Minimal, Personal, Responsive",lynx,A links page theme for Hugo built with Tailwind CSS.,https://github.com/jpanther/lynx,https://jpanther.github.io/lynx/,"LynxLynx is designed to be a simple links page powered by Hugo. It’s built using Tailwind CSS and inspired by services like LinkTree.🌏 Demo site🐛 Bug reports & issues💡 Questions & feature requestsFeatures Fully responsive layout built with Tailwind CSS 3.0Dark mode (auto-switching based upon browser)SVG icons from FontAwesome 5HTML and Emoji supportFathom Analytics and Google Analytics supportFavicons supportInstallation Lynx supports several installation methods - as a Hugo Module (easiest), a git submodule, or as a completely manual install.Below is a quick start guide using Hugo modules.Quick start using Hugo Note: Ensure you have Go and Hugo installed, and that you have created a new Hugo project before proceeding.From your project directory, initialise Hugo Modules:hugo mod init github.com/<username>/<repo-name>
Create config/_default/module.toml and add the following:[[imports]]
path = ""github.com/jpanther/lynx""
Start your server using hugo server and the theme will be downloaded automatically.In the root folder of your website, replace the config.toml file that was generated by Hugo with the one from Lynx. You will find the theme config file in the Hugo cache directory, or download a copy from GitHub.Follow the configuration instructions below.Installing theme updates As new releases are posted, you can update the theme using Hugo. Simply run hugo mod get -u from your project directory and the theme will automatically update to the latest release.Configuration The main theme configuration is managed in the config.toml file. Most parameters are self explanatory and the default config contains some basic examples.The author name and image are displayed at the top of the page. Both are optional and will default to the site title with no image when not provided.Links can either be a simple string containing the URL for the link, or an object that defines the link parameters. Links are displayed in the order provided in the config file.Acceptable link parameters are:href = the URL the link should point to (required)icon = the name of the icon to use for this linktext = the link texttarget = the target of the link (default: _blank)title = the HTML title of the link[author]
links = {
   # Simple link
   { github = ""https://github.com/jpanther/lynx"" }

   # Custom link
   { github = { href = ""https://github.com/jpanther/lynx"", text = ""GitHub Project"" } }
}
Additional page content can be provided by creating a Markdown file at content/_index.md. The contents of this file will be displayed between the title and links. Check out the exampleSite to see this in practice.Basic content pages can also be created by placing Markdown files in the content directory. These can then be linked to using links in the config file or through the homepage content.Adding custom icons and link styles Lynx supports adding your own SVG icons and link styles to fully customise your links page. In the root of your Hugo project, simply create an assets folder and add your assets. Icons should be placed in an icons folder and any CSS should be in a file named css/custom.css.The custom CSS file will automatically be included and minified when the site is built. The styles can be as creative as you wish and anything in your custom CSS will override the default theme.If you need icons, you can find free SVG icons for many services at FontAwesome.Example Let’s make a custom link for FontAwesome using the FA flag as the link icon and a gradient background as the link style.If you prefer to inspect the code, the exampleSite contains a custom link to FontAwesome that demonstrates this process.Place the SVG icon in the icons folder /assets/icons/font-awesome.svg.Create the CSS file at /assets/css/custom.css and add in a rule to style the link:.link-font-awesome {
  background: rgb(131, 58, 180);
  background: linear-gradient(
    90deg,
    rgba(131, 58, 180, 1) 0%,
    rgba(253, 29, 29, 1) 50%,
    rgba(252, 176, 69, 1) 100%
  );
}
Note: The CSS class name should be the icon name prefixed with link-.Finally, in the config.toml file, create the link by referencing the new icon:font-awesome = { href = ""https://fontawesome.com"", text = ""FontAwesome"" }
When the site is rebuilt, the new custom link will appear.Contributing Lynx is expected to evolve over time. I intend to keep adding features and making changes as required.Feel free to get in touch with any issues or suggestions for new features you’d like to see.🐛 Bug reports & issues: Use GitHub Issues💡 Ideas for new features: Open a discussion on GitHub Discussions🙋‍♀️ General questions: Head to GitHub DiscussionsIf you’re able to fix a bug or implement a new feature, I welcome PRs for this purpose. Learn more in the contributing guidelines.See AlsoBlowfishCompostHugoplateLightbiPaige",NA
Rajesh Shenoy,255,2023-05-13,MIT,"Bootstrap, Minimal",Goa,Simple Minimalist Hugo Theme,https://github.com/kaapiandcode/hugo-goa,NA,"GoaGoa is a clean, simple and minimalist theme for blogs and personal websites.



Demo You can find the demo site in action here and the source here.Installation From the root of your blog:mkdir -p themes
cd themes
git clone https://github.com/kaapiandcode/hugo-goa
Content creation Creating a post To create a new page or post:hugo new about.md
orhugo new posts/first.md
You can now go ahead an edit the newly created file under the content directory. Once you are finished editing, to have hugo generate the page, set draft = false in the articles front matter.Organizing pages The above example demonstrates how to create a pages and posts. Hugo automatically applies the list templates for a directory of pages/posts, which works well for blogs and posts. However, you may want at times want to override this behavior and create a standalone page (like an about page or projects page) or have more control of what content is listed from within the directory. In such cases, you can override the default behavior by placing an index.md file in the corresponding content
directory.hugo new projects/index.md
Page settings These settings are at the page level.showpagemeta: default=true. This allows you to disable page meta information from being displayed. For example, this setting is disabled here and enabled here.showcomments: default=true. Enables or disable comments. For example, this setting is disabled here and enabled here.Configuration The provided config.toml describes all options and features that are supported. Configure it your way!Basic Configuration These are site wide configuration parameters that are used by this template.baseurl: This is the root of your site.builddrafts: default=false. Enables or Disable building drafts when hugo is run.canonifyurls: default=false. Prefix all relative URLs with your base URL. More Information.languageCode: Used to set site localization preferences. eg. en-US.contentdir: Where hugo can find your content. eg. content.layoutdir: Where hugo can find your templates. eg. layouts.publishdir: Where hugo generates the static site. eg. public.author: Site author name. eg. Erlich Bachman.title: Site title name. eg. Erlich Bachman.theme: Your theme name should be set to hugo-goa if using this theme.Hugo Built-in Features These are features that hugo provides and are used by this template.disqusShortname: Your discusShortname if you want to enable comments on your posts.googleAnalytics: Your google analytics id for tracking.enableRobotsTXT: Enable or disable search engines from crawling your site.Site Settings [params] These are settings that are specific to this theme.author: Main author name. eg. Erlich Bachman.intro: Author introduction. This field supports markdown. eg. Startup Guru Extraordinaire.description: Author description. This field supports markdown. eg. Now @Pied Piper. Previously @Hacker Hostel, @Bachmanity and @Aviato. <br/> \""What is F times 5? It's Fleventy-five.\"".authorimage: Location of author image under static/img directory. eg. headshot.jpgdateformat: Golang date format to be used on this site. eg. Jan 2, 2006Site Meta Settings [params.meta] These settings are included in the site’s meta section.description: User this field to describe your site to search engines. eg. Simple minimalist theme.keywords: Keywords that desribe your site. eg. minimalist,blog,goa,hugo,developer.Social Accounts [params.social] These settings to display your social accounts.github: Your Github username.instagram: Your Instagram username.xing: Your Xing username.linkedin: Your Linkedin username.twitter: Your Twitter username.facebook: Your Facebook username.google: Your Google username.googlescholar: Your Google Scholar account ID. How to get this IDmedium: Your Medium username.devto: Your dev.to username.stackoverflow: Your StackOverflow username.angellist: Your AngelList username.lastfm: Your Last.fm username.goodreads: Your Goodreads username.gitlab: Your Gitlab username.bitbucket: Your BitBucket username.fivehundredpx: Your 500px username.flickr: Your Flickr username.foursquare: Your Foursquare username.hackernews: Your Y Combinator Hackernews username.kickstarter: Your Kickstarter username.patreon: Your Patreon username.pintrest: Your Pintrest username.steam: Your Steam username.reddit: Your Reddit username.snapchat: Your Snapchat username.keybase: Your Keybase username.twitch: Your Twitch username.youtube: Your YouTube channel ID.soundcloud: Your Soundcloud username.tumblr: Your Tumblr username.strava: Your Strava username.skype: Your skype username.telegram: Your Telegram username.holopin: Your Holopin username.whatsapp: Your phone number. Follow the steps here. Privacy Warningemail: Your email. Privacy Warningpgp: Your PGP key. The value should be set to the key fingerprint, and the public key should pe placed in static/key_fingerprint.txtPrivacy Warning It is recommended to keep your private data (phone number/ email) private. Especially if you don’t use them for business. Adding it to your public will expose your data to the public. This is irreversible.Account Details Google ScholarTo get this ID, go to Google Scholar, press the “My Profile” tab at the top, then copy the text after the user= till the first subsequent & (e.g. the ACCOUNT_ID part in https://scholar.google.com/citations?user=ACCOUNT_ID&hl=en).Extras [params.extra] These settings for extra features that this site uses.copyright: Add a copyright statement to the bottom of the theme. eg. © 2016. Erlich Bachman. [Some Rights Reserved](https://creativecommons.org/licenses/by/3.0/).""rss: Enable rss icon next to social accounts.poweredby: Help promote this theme and give the authors credit. eg. true or false.highlightjs: Use highlightJS to highlight code on your site. eg. true or false.socialmarkup: Adds links that conform to the Schema.org markup. See this link for more.Main Menu [[menu.main]] These settings for the main menu that is displayed on the home page.name: Name of menu item. eg. blogweight: Weight of this menu item. Higher items go to the bottom. eg. 100url: Root URL for this section/page. eg. /blog/.Example:[[menu.main]]
    name = ""blog""
    weight = 100
    url = ""/blog/""
[[menu.main]]
    name = ""about""
    weight = 200
    url = ""/about/""
[[menu.main]]
    name = ""coderag""
    weight = 300
    url = ""/coderag/""
Features ResponsiveMinimalistBootstrap 3Font AwesomeHighlightJSDisqus support for commentingBuilt-in support for 404 pages, Disqus comments and Google Analytics.Screenshots Contributing Bug Reports Search Github Issues to see if the bug has been previously filed.If it has been filed, +1 the post. This helps us in assessing impact and priortitizing the bug.If not previously filed, open a new Github Issue and describe in detail. Attach error traces and provide relavant details to help us solve it.For Hugo issues, search the Hugo ForumFeature Requests Search Github Issues to see if the feature has been previously requested.If it has been filed, +1 the post. This helps us in assessing popularity and priortitizing the feature.If not previously filed, open a new Github Issue and describe it in detail.Pull Requests Clone the repository, create the feature/bug branch.Code.Make sure your code follows the style of the project.Test it thoroughly.Open a PR requesting for it to be merged.Describe the feature or issue your are solving in detail.Wait for its approval.Merge and Rejoice.Attribution The theme’s design was inspired by many blogs and themes:Bruno de Carvalho’s blog.Hugo Cocoa.Hugo Vec.Hugo Agency.License Licensed under the MIT License. See the LICENSE file for more details.See AlsoAce documentationAdritian Free Hugo ThemeBeautiful HugoBootstrap-BPBootstrap-BP-Startpage",NA
Sidharth R,254,2023-10-31,MIT,"Blog, Dark, Light, Minimal, Responsive",Hugo blog awesome,Minimal Hugo blog theme with light and dark mode support,https://github.com/hugo-sid/hugo-blog-awesome,https://hugo-blog-awesome.netlify.app/,"Hugo Blog Awesome | Demo link⚡ Fast | 📰 Clean UI | 🌙 Dark mode support | 📱 Responsive designScreenshots Dark modeLight modePage speed score (click to expand)The result shown above was last confirmed on September 23, 2023. You can check the details of the PageSpeed test at this link: Link to the analysis. You can also do a live PageSpeed test of the demo website now.Features Minimal designLight and dark modeSyntax highlightingRSS feedNo jQuery, no Bootstrap100/100 Google PageSpeed Insights score on all 4 metricsWhy this theme? Hugo Blog Awesome (HBA) is a theme crafted to capture your readers’ attention.Additionally, it’s fast, privacy-conscious, and comes with no external dependencies. That’s right. There are no Google fonts, icon packs, or JavaScript frameworks. No trackers or ads to bloat your website.Its focus on minimalism and clean UI ensures that your content takes the spotlight. This, coupled with the support for dark mode, provides a stress-free (on the eyes) reading experience for your audience.Built with Hugo, SCSS, and vanilla JavaScript.Setup Note
You must have the Hugo extended version installed in order to use this theme. This theme uses SCSS for styling. With the Hugo extended version, SCSS can be compiled to CSS without any additional tools.To create a new Hugo site with this theme, run the following command:hugo new site myblog
Then, clone this repository into the themes directory of your new site:cd myblog
git clone https://github.com/hugo-sid/hugo-blog-awesome.git themes/hugo-blog-awesome
To preview the theme with example content, run the following command from the exampleSite directory:hugo server --themesDir ../..
Usage To use this theme, set the theme variable in your site’s config.toml to hugo-blog-awesome:theme = ""hugo-blog-awesome""
Configuration You can take a look at the config.toml file in the exampleSite directory for an example configuration.
It is recommended that you copy the config.toml file from the exampleSite directory to the root directory of your Hugo site. You can then edit the config.toml file to suit your needs.Adding favicon I used realfavicongenerator.net to generate the favicons. You can place the resulting files in the assets\icons folder. That should get your favicon working.If you want to customize anything further, you can modify layouts\partials\head.html.Adding Social icons Social icons can be added by congifuring config.toml file in the following manner.[[params.socialIcons]]
name = ""github""
url = ""https://github.com/hugo-sid""

[[params.socialIcons]]
name = ""twitter""
url = ""https://twitter.com""

[[params.socialIcons]]
name = ""Rss""
url = ""index.xml""
List of available icons (click to expand)NamePlatform123rf123rf.comadobestockstock.adobe.comapplemusicmusic.apple.combehancebehance.netbilibilibilibili.combitcoin-buymeacoffeebuymeacoffee.comcodepencodepen.iocryptohackcryptohack.orgctftimectftime.orgcv-deezerdeezer.comdevdev.todiscogsdiscogs.comdiscorddiscord.comdreamstimedreamstime.comdribbbledribbble.comemail-facebookfacebook.comflickrflickr.comfreepikfreepik.comgiteagitea.iogithubgithub.comgitlabgitlab.comgoodreadsgoodreads.comgooglescholarscholar.google.comguruShotsgurushots.comhackeronehackerone.comhackerrankhackerrank.comhacktheboxhackthebox.euinstagraminstagram.comitchioitch.iokaggle-kakaotalkkakaocorp.com/service/KakaoTalkkey-keybasekeybase.iokofiko-fi.comkomoot-lastfmlast.fmletterboxd-liberapayliberapay.comlinkedinlinkedin.commastodonmastodon.socialmatrixmatrix.orgmediummedium.commonero-mixcloudmixcloud.comnugetnuget.orgpaypalpaypal.compeertube-pgp-phone-ployworkploywork.comqqqq.comredditreddit.comresearchgateresearchgate.netrss-serverfaultserverfault.comsoundcloudsoundcloud.comshutterstockshutterstock.comslackslack.comsnapchatsnapchat.com/addspotifyspotify.comstackoverflowstackoverflow.comsteamsteampowered.comstravastrava.comtelegramtelegram.orgtiktoktiktok.comtwitchtwitch.tvtwitter (the blue bird logo)twitter.comunsplashunsplash.comx (formerly Twitter)x.comxdaxda-developers.comxingxing.comycombinatorycombinator.comyoutubeyoutube.comother-If you are trying to add an icon that is not listed above, you can modify layouts\partials\svgs\svgs.html to include your icon (SVG). You are encouraged to submit your icon by creating a pull request, so that others can benefit.Enable go to top button To enable go to top button on blog posts, set goToTop to true in config.toml file.[params]
  goToTop = true
Content Posts To create a new post, run the following command:hugo new posts/my-first-post.md
Then, edit the my-first-post.md file to suit your needs.Comments To enable Disqus comments, set disqusShortname in your site’s config.toml.To use another comments system, provide your own comments.html partial in layouts\partials\comments.html.Contributing Please read CONTRIBUTING.md.Contributors Thanks to these wonderful people for contributing to Hugo blog awesome:Websites using this theme If you are using this theme for any website, feel free to list the website here. You can submit a pull request (PR) to include your website.https://krisnova.net/https://paddy-exe.github.io/https://www.siggijons.net/https://debanwita27.github.io/https://mrizkimaulidan.vercel.app/https://www.yukizr.com/http://liamdalg.co.uk/http://pratham-mishra.in/https://chriscodes.net/https://ruiper.es/https://www.magicplace.de/https://bskdany.com/https://josephscottcampbell.com/https://heckintosh.github.io/Support Don’t forget to ⭐️ the repo if you liked this theme!Credits The social icons are made possible thanks to Aditya Telange’s hugo-PaperMod theme.Thanks to piharpi for creating the Jekyll klise theme. It served as an inspiration to create this Hugo theme.License This theme is released under the MIT license. For more information read the License.Stats Visitors Star History See AlsoAcademicAnubisBlondeBlowfishBootstrap-BP",NA
Dillon,248,2023-10-31,MIT,"Blog, Dark, Responsive",KeepIt,"A Clean, Elegant but Advanced Hugo Theme for Hugo.",https://github.com/Fastbyte01/KeepIt,https://suspicious-archimedes-ab369d.netlify.app/,"KeepIt Theme | Hugo 



English README | 简体中文说明KeepIt is a clean, elegant but advanced blog theme for Hugo.It is based on the original LeaveIt Theme and KeepIt Theme.Since the three themes have a similar look, if you have questions about their differences,
read Why choose KeepIt so that you can choose the one that works best for you.Demo Site To see this theme in action, here is a live demo site which is rendered with KeepIt theme.Why choose KeepIt Compared to the original LeaveIt theme and the KeepIt theme, the KeepIt theme has the following modifications.Custom HeaderCustom CSS StyleA new home page, compatible with the latest version of HugoA lot of style detail adjustments, including color, font size, margins, code preview styleMore readable dark modeSome beautiful CSS animationsEasy-to-use and self-expanding table of contentsMore social links, share sites and comment systemSearch supported by Lunr.js or algoliaCopy code to clipboard with one clickExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagram syntax shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSEmbedded music player supported by APlayer and MetingJSBilibili player supportedKinds of admonitions shortcode supportedCustom style shortcodes supportedCDN for all third-party libraries supported&mldr;In short,
if you prefer the design language and freedom of the KeepIt theme,
if you want to use the extended Font Awesome icons conveniently,
if you want to embed mathematical formulas, flowcharts, music or Bilibili videos in your posts,
the KeepIt theme may be more suitable for you.I hope you will KeepIt ❤️!Features Performance and SEO Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed InsightsOptimized SEO performance with a correct SEO SCHEMA based on JSON-LDGoogle Analytics supportedFathom Analytics supportedSearch engine verification supported (Google, Bind, Yandex and Baidu)CDN for third-party libraries supportedAutomatically converted images with Lazy Load by lazysizesAppearance and Layout Desktop/Mobile Responsive layoutLight/Dark modeGlobally consistent design languagePagination supportedEasy-to-use and self-expanding table of contentsMultilanguage supported and i18n readyBeautiful CSS animationSocial and Comment Systems Gravatar supported by GravatarLocal Avatar supportedUp to 64 social links supportedUp to 24 share sites supportedDisqus comment system supported by DisqusGitalk comment system supported by GitalkValine comment system supported by ValineFacebook comments system supported by FacebookTelegram comments system supported by Telegram CommentsCommento comment system supported by CommentoUtterances comment system supported by UtterancesExtended Features Search supported by Lunr.js or algoliaTwemoji supportedAutomatically highlighting codeCopy code to clipboard with one clickImages gallery supported by lightGalleryExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagrams shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSMusic player shortcode supported by APlayer and MetingJSBilibili player shortcodeKinds of admonitions shortcodeCustom style shortcodeCustom script shortcodeAnimated typing supported by TypeItCookie consent banner supported by cookieconsent&mldr;Documentation Build Documentation Locally:hugo server --source=exampleSite
Multilingual and i18n KeepIt supports the following languages:EnglishSimplified ChineseTraditional ChineseFrenchPolishBrazilian PortugueseItalianSpanishGermanSerbianRussianRomanianVietnameseContribute with a new languageLanguages CompatibilityRoadmap Questions, ideas, bugs, pull requests All feedback is welcome! Head over to the issue tracker.License KeepIt is licensed under the MIT license. Check the LICENSE file for details.Special Thanks Thanks to the authors of following resources included in the theme:normalize.cssFont AwesomeSimple IconsAnimate.cssautocompleteLunr.jsalgoliasearchlazysizesobject-fit-imagesTwemojiemoji-datalightGalleryclipboard.jsSharer.jsTypeItKaTeXmermaidEChartsMapbox GL JSAPlayerMetingJSGitalkValinecookieconsentAuthor DillonSponsor If you enjoy the theme, please consider buying me a coffee ☕️.PayPalAlipayWechatThanks! ❤️Stargazers over time See AlsoAcademicAnatoleAnubisAstatineAutoPhugo",NA
Joe Roe,247,2023-08-28,MIT,"Dark Mode, Minimal, Responsive",risotto,"A minimalist, responsive theme inspired by terminal ricing aesthetics.",https://github.com/joeroe/risotto,https://risotto.joeroe.io,"risottorisotto is a minimalist, responsive hugo theme inspired by terminal ricing aesthetics.

Install The easiest way to install the theme is to clone this repository into your site’s themes directory:git clone https://github.com/joeroe/risotto themes/risotto
If your site is already a git repository, you can add the theme as a submodule instead:git submodule add https://github.com/joeroe/risotto.git themes/risotto
Update If you installed the theme using git clone, pull the repository to get the latest version:cd themes/risotto
git pull
Or, if you added it as a git submodule:git submodule update --remote
Configure To use the theme, add theme = 'risotto' to your site’s config.toml, or theme: risotto to your config.yaml respectively.See exampleSite/config.toml for the theme-specific parameters you need to add to your site’s config.toml or config.yaml to configure the theme.Colour palettes risotto uses the base16 framework to define colour schemes that can be used with the theme.palette parameter.
A selection of 16 palettes (10 dark, 6 light) are bundled with the theme: apprentice, base16-dark, base16-light, dracula, gruvbox-dark, gruvbox-light, material, papercolor-dark, papercolor-light, solarized-dark, solarized-light, tender, tokyo-night-dark, tokyo-night-light, windows-95 and windows-95-light.
The default is base16-dark.The easiest way to use other base16 styles is to place .css file from https://github.com/monicfenga/base16-styles/tree/master/css-variables and place it in your static/css/palettes directory.Or to define a wholly custom theme, you will need to define the following CSS variables for the following base16 colours (see base16-dark.css for an example):BaseDefault colourUsed forExamples00DarkBackgroundPage background01│Alt. backgroundContent background02│In-text backgrounds<pre>, <code>, <kbd>, <samp>03│Muted text:before & :marker symbols04│Alt. foregroundAside text05│ForegroundContent text06│07Light08Red09Orange0AYellowHighlightsSelected text, <mark>0BGreenPrimary accentLogo0CCyanActive linksa:active, a:hover0DBlueLinksa:link, a:visited0EMagenta0FBrownFor light mode palettes, the sequence of 00–07 should be reversed (light to dark, not dark to light).
Note that not all colours are currently used in the theme.Favicon risotto will automatically use favicons placed in the static/ directory.
The following files will be detected and included in your site’s <head> section:favicon.icofavicon-16x16.pngfavicon-32x32.pngapple-touch-icon.pngsite.webmanifestYou can generate these from an image or emoji using favicon.io or a similar service.
They must be placed directly under your site’s static/ directory, i.e. not in in a subdirectory or themes/risotto/static/.Acknowledgements The ‘cooked rice’ emoji used as a favicon for the example site was created by the Twemoji project and is licensed under CC-BY 4.0.See AlsoBlowfishCompostGruvboxGruvhugoHermit-V2",NA
Fredrik Jonsson,242,2023-01-25,GPLv2,"Blog, Multilingual, Podcast, Responsive",Zen,A solid base for your custom Hugo theme with pipes support for Sass and Javascript.,https://github.com/frjo/hugo-theme-zen,NA,"The Hugo Zen themeZen theme strives to be as clean and standard compliant as possible with some neat features. A solid base for your custom Hugo theme.It uses HTML5 with a modern CSS grid and flex layout. Recent versions of all the mayor browsers support it, see Can I use css grid.Sass is processed with Hugo pipes. To make using npm optional I have added the stylesheets from the excellent sass plugin typey directly to the theme.Demo site Take a look at the Zen demo site (GitHub).Version 2.0 Replaced “normalize” with slimmer and updated “reset”. Removed everything for old IE versions.Use of css4 variables. Colours are now used like this var(--color-brand).The colors, fonts and variables sass files are now in the root sass directory.Use site instead of .Site and $.Site.Use a default line-height of unitless 1.5. For headers it is set to 1.3.Added _extra.scss where variables can be overridden.The zen-gutters variable is now a calculated value based on window width.Added max-line-width for readability, default to 70ch.New shortcodes: button, svg, reflink and details.Todo Implement more use of css4 variables.Remove all use of “typey”. (low priority)Table of contents FeaturesMinimum Hugo versionInstallationUpdatingRun example sitePerformanceSites using the Hugo Zen themeScreenshotsConfigurationCustomiseRender hook templatesMultilingualSearchContact formCookie consentDatesPodcastShortcodesContent security policy headersChoose between using jQuery or Umbrella JSUse npm to lint Sass and JavaScriptGetting helpCreditsFeatures A mobile menuAlpineJS 3Analytics with Matamo (Piwik)Cookie consentCommands for linting of css and jsContact form (PHP)CSS grid and flex for layoutHTML5Hugo Pipes for js and sassjQuery 3Micro.blogMeta tags and JSON-LDMultilingual (i18n)Normalize CSSPodcastResponsive designRSS and JSON feeds with full contentSearch with FlexSearch.jsSub theme support (Theme Components)Umbrella JS 3 (tiny jQuery replacement, 2.5kB when gzipped)Minimum Hugo version Hugo Extended version 0.88.1 or higher is required.Installation Hugo module First of all, you need to turn your new or existing site into a hugo module.From the root of your site:hugo mod init github.com/me/my-site
Afterwards, declare the zen theme module as a dependency of your site:From the root of your site:hugo mod get -u github.com/frjo/hugo-theme-zen/v2
Git submodule You can download and unpack the theme manually from Github but it’s easier to use git to clone the repo.From the root of your site:git clone https://github.com/frjo/hugo-theme-zen.git themes/zen
If you use git to version control your site you can add the zen theme as a submodule.From the root of your site:git submodule add https://github.com/frjo/hugo-theme-zen.git themes/zen
Updating Hugo module From the root of your site:hugo mod get -u github.com/frjo/hugo-theme-zen
Git submodule From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/zen/exampleSite:hugo server --themesDir ../..
Performance Performance should be excellent.Minimal and compliant HTML5Styles 17,7 kB (4,3 kB when gzipped)JavaScript 8,4 kB (2,7 kB when gzipped)All scripts loaded in head with “defer”Optimised for HTTP/2Some performance tools will complain about to many files (js and css files are not concatenated) but with HTTP/2 that can be ignored.Sites using the Hugo Zen theme BypassCensorship (multilingual)Combonetwork development (multilingual)DevSecOps TalksDrejargårdenHelmer Grundströmxdeb.orgxdeb.netScreenshots On the large screen On the small screen The mobile menu Configuration Configurations parameters for the sites config file, in yaml format. All the “params” are optional.baseurl: ""https://example.org/""
title: ""SiteTitle""
theme: ""zen""
languageCode: ""en-GB""       # Set your language code (only needed for none multilingual sites).

params:
  alpine:                   # Add AlpineJS, default false.
  cookieConsent: true       # Show cookie consent form, default false.
  contact: ""info@example.org""
  copyright: ""This site is licensed under a 
              (https://creativecommons.org/licenses/by-sa/4.0/).""
              [Creative Commons Attribution-ShareAlike 4.0 International License]
  dateformat: """"            # Set the date format, default to ""2 January, 2006""
  description: """"           # Set site description, used in meta tags and JSON-LD
  favicon: """"               # Relative path to favicon in json feed, no leading slash.
  feedlinks: true           # Show feed links in the footer.
  footer: ""A [example.org](https://example.org/) production.""
  icon: """"                  # Relative path to icon in json feed and JSON-LD, no leading slash.
  image: """"                 # Relative path to site image in JSON-LD, no leading slash.
  imageMaxWidth: """"         # Max width for images added via figure shortcode.
  jquery: true              # Add jQuery, default false.
  languageDir: """"           # Set ltr or rtl, defaults to ltr.
  logo: false               # Turn off the logo.
  logoPath:                 # Relative path to site logo, defaults to ""images/logo.png"", no leading slash.
  logoWidth:                # Set logo width, defaults to none.
  mainSections:             # The sections you want to have listed on the front page.
    - ""section1""            # Default to the section with most content if not set.
    - ""section2""            # Set to empty if no section should be listed.
  menuInHeader: true        # Move the main menu to the header, default false.
  microUsername: """"         # Your micro.blog username.
  mobileMenu: true          # Turn on a mobile menu on small screens, default false.
  piwikSiteId:              # Matamo site id
  piwikTrackerUrl: """"       # Matamo url, schemaless and no slash on end (example.org/matamo).
  plausibleSiteID: """"       # Plausible site id/domain.
  plausibleTrackerURL: """"   # Plausible url, schemaless and no slash on end. Optional, defaults to ""plausible.io/…""
  poweredby: true           # Show powered by hugo in footer
  privacyPolicyUrl: """"      # If set will add link to cookie consent form.
  realfavicongenerator:     # If full set of favicons, site manifest etc. exists, default false.
  relatedposts: true        # Show related posts under a ""See also"" section, default false.
  searchLimit: 20           # Max number of search hits, default 20.
  sidebar: true             # Show a sidebar to the right, default false.
  submitted: true           # Show author and date information for a post.
  themeColor:               # Hex color value, used in meta tags, default ""#ffffff"".
  umbrella: true            # Add Umbrella JS, default false.

  podcast:
    title:                  # * Feed title, defaults to site title (iTunes).
    description:            # * Feed description/summary, defaults to  site description (iTunes).
    image:                  # * Feed image, place inside assets directory (iTunes).
    category:
      name:                 # * Feed category (iTunes).
      subcategories: []     # Feed sub category (iTunes).
    explicit: false/true    # Feed explicit setting, default to false (iTunes).
    author:                 # Feed author (iTunes).
    owner:
      name:                 # Feed owner name (iTunes).
      email:                # Feed owner e-mail (iTunes).
    lang:                   # Feed language, defaults to site language (iTunes).
    block: no/yes           # Block the feed from iTunes, default to no (iTunes).
    complete: no/yes        # Set the feed as complete, defaults to no (iTunes).
    type: episodic/serial   # Podcast type, defaults to episodic (iTunes).
    newfeed:                # Are you moving? Set the new feed url here (iTunes).
    cdn:                    # CDN url, no slash on end (https://cdn.example.org).
    local: false            # Are the audio files local (true) or remote (false), default to true.
    preload: none/metadata/auto # Set on the HTML5 audio tag, defaults to ""metadata"".
The site will work without setting any of the podcast parameters but your podcast feed will not be accepted by iTunes. At a minimum you need to set the first four, title, description, image and category name. Read more in the podcast section below.Customise Front page This is a part that almost everyone will like to customise in some manner. The template file is layouts/index.html. By default it will include any text you put in content/_index.md and below that list the posts in “mainSections” as summaries.If you do not specify any sections in the “mainSections” param (see configuration above) it will list the section with the most posts. If you do not want to list anything, set it but leave the value empty.Colours and variables This is another part that almost everyone will like to customise.They are found in the theme assets/sass/_colors.scss and assets/sass/_variables.scss files. Copy them to the root assets/sass/ directory to set your own values.If you only want to override a few variables copy the theme assets/sass/_extra.scss to the root assets/sass/_extra.scss and set the new values there. Anything in the extra file will override values in the variables file.Examples of variables found in assets/sass/_variables.scss:$base-font-size: 18px;$max-content-width: 960px;$max-line-width: 70ch;Logo Place your logo at static/images/logo.png. If you don’t provide a logo, then the default theme logo will be used.Favicons Upload your image to RealFaviconGenerator then copy-paste the generated favicon files under static.Then set the “realfavicongenerator” param to true to add the needed meta tags. Also good to set the “themeColor” param to correct colour.Layouts To customise a layout included in the zen theme, copy it to the root layout directory and edit it there. Make sure to maintain the directory structure inside the layouts directory.Add any new layouts to the root layout directory as well. This way they will not be overwritten when updating the theme.Menu and sidebar layouts If a Hugo main menu is defined (.Sites.Menu.main) the menu template will use it to build a navigation menu. If not, the template will automatically add entries for the home page, each root page and each section, in that order.If the default sidebar is activated it will display each section with all its pages listed below.They are set up in layouts/partials/menu.html, layouts/partials/mobilmenu.html and layouts/partials/sidebar.html.CSS grid for layout Modern CSS grid is the easiest and cleanest way to layout your pages.The CSS grid layout are in assets/sass/layouts/_layouts.scss. A lot can be done by just reordering “grid-template-rows”.Other styles and scripts Styles and scripts are processed with Hugo pipes that was added in Hugo 0.46.To customise a js or sass file, copy it to the root assets directory and edit it there. Make sure to maintain the directory structure inside the assets/sass directory.There is an assets/sass/_custom.scss file meant for your custom styles. Copy it to the root assets/sass/_custom.scss to use it.The default styles in assets/sass/_zen.scss are boring but functional. You can easily override them completely by placing an empty file named “_zen.scss” in root assets/sass directory.The sass files are by default built for production, compressed with fingerprint.By setting the Hugo environment variable to “development” (default when running hugo server) they will instead be nested with sourcemaps.Render hook templates Add anchor links to headers An example render hook template for templates will add anchor links to all headers. To activate it copy the file ~/theme/zen/layouts/_default/_markup/render-heading.html.example to layouts/_default/_markup/render-heading.html.Needed styles are in the _zen.scss file.Multilingual Arabic, Danish, Finnish, English, Hebrew, French, German, Norwegian, Portuguese and Swedish translations are included and you can easily add more to the i18n site directory. All but English and Swedish are contributed by users, thanks!A language selector will be included on sites with more than one language. Add languageName to your language configuration, this is what will be displayed in the selector.The language selector will link to a translation of the current page if it exist and to the front page if it does not.For “rtl” languages add a languageDirection parameter to the language configuration. If not added it will default to “ltr”.Add a languageCode parameter to each language as well, that is used to set the correct language attribute in the html tag and in feeds. The root languageCode is then not needed. If not set the language key (e.g. “en”) will be used.languages:
  sv:
    weight: 1
    languageName: ""Svenska""
    languageCode: ""sv-SE""
  en:
    weight: 2
    languageName: ""English""
    languageCode: ""en-GB""
  ar:
    weight: 3
    languageName: ""العربية""
    languageDirection: ""rtl""
    languageCode: ""ar""
Non English site If you want to have a site in another language than English but do not need multiple languages the following settings are needed.Set defaultContentLanguage to your language code, otherwise it will default to “en” . Also set languageCode so browsers are informed of what language the site is in.Here how it looks for a site in Swedish.languageCode: ""sv-SE""
defaultContentLanguage: ""sv""
Search Built in integration with the excellent FlexSearch.js. A fast full text search that reads a JSON file created by Hugo to index and search the site.Here is the three steps needed to create a search page.Add a new output format in your configuration file.outputFormats:
  SearchIndex:
    mediaType: ""application/json""
    baseName: ""searchindex""
    isPlainText: true
    notAlternative: true
Add the new output format to output setting for “home”.outputs:
  home: [""HTML"", ""SearchIndex"", ""[other formats you need]""]
Add the shortcode {{< search >}} to a page. The search and flexsearch js files gets loaded automatically on pages that use the shortcode.Your search page will now have a search field where all the posts of the site can be searched.The only setting is “searchLimit” that defaults to 20.Contact form If your server support php with the mail() command (very common) you can use the included contact form feature to get a contact form for your site.Copy the file themes/zen/php/contact.php.example to static/php/contact.php.Edit the contact.php file so it has your own e-mail address. You may also change the mail subject prefix.Add the shortcode {{< contact >}} to a page. The contact.js file gets loaded automatically on pages that use the shortcode.If you have a SPF record for your domain, make sure the web server is listed or other mail server may mark the mail as spam.Two types of spam protection are implemented. The form can only be posted after the user moved the mouse or pressed the tab or enter key. The form has a “honeypot” field that is invisible to humans but not to most spam boots. If that field is filled in the mail will not be sent.Form validation is handled by HTML5 and there is some CSS to make it look nice.Javascript is used for spam protection and to display error/success messages.Cookie consent Allow users to opt-in to tracking. Matomo and Google analytic are supported out of the box.See assets/js/tracking.js for example how to implement it.The name of the cookie set is “cookieconsent” and it can have the values “accept” or “decline” depending on what button the visitor clicks.Dates If “lastmod” is set in the frontmatter on a post that value will be used in the “submitted” section. If not, “date” is used.With “lastmod” set a date section will also appear at the bottom of post telling the reader the created and modification dates.Podcast The Zen theme supports podcasting.RSS feed with all the needed iTunes tags.Single and full layouts with HTML 5 audio player.Archetype with required parameters.Here follow all the possible podcast frontmatter parameters. Only the first two is mandatory and are in the podcast archetype.podcast:
    mp3:                    # * The path to the mp3 file, 
    duration:               # * Episode duration, e.g 1:04:02 (iTunes).
    image:
        src:                # Episode image src, place inside the assets directory (iTunes).
        alt:                # Alt text for the image, explain what is on the image.
        width:              # Image width in the article, defaults to 250px.
        class:              # Image wrapper class.
    explicit: true/false    # Episode explicit setting, default to false (iTunes).
    episode:                # Episode number (iTunes).
    episodeType: full/trailer/bonus # Episode type, defaults to full (iTunes).
    season:                 # Episode season (iTunes).
    block:                  # Block the episode from iTunes, default to no (iTunes).
Apple Podcasts categoriesApple - A podcaster’s guide to RSSShortcodes Audio and Video Support for files in global assets directory, static directory and page resources.{{< audio src=""/audio/audio.mp3"" class=""something"" >}}

{{< video src=""/video/video.mp4"" poster=""/images/poster.jpeg"" class=""something"" >}}
Possible parameters are:autoplay (only video)captionclassloop (only video)poster (only video)preload (none/metadata/auto, default metadata)srcwidth (only video)The audio and video tags will be wrapped with a figure tag.Button Creates a link with the class “button”. If “newtab” is true the link will open in a new tab.Possible parameters are:classnewtabsrctextClear Break float.{{< figure src=""/images/image.jpg"" class=""right"" >}}

blablabla # Displayed left of the image.

{{< clear >}}

blablabla # Displayed below of the image.
Contact Insert a html5 contact form, see more above.{{< contact >}}
Details and Summary Insert a html5 contact form, see more above.{{< details summary=""The summary text here"" >}}
The details text here.

It can be long and **contain** markdown.
{{< /details >}}
Possible parameters are:classsummaryFigure and Img Zen comes with a improved version of the built in “figure” shortcut and a very similar “img” shortcode. Support for images in global assets directory, static directory and page resources.{{< figure src=""/images/image.jpg"" alt=""Example image."" caption=""Lorem ipsum dolor sit amet."" >}}

{{< img src=""/images/image.jpg"" alt=""Example image."" size=""600x"" >}}
Possible parameters are:altattr (only figure)attrlink (only figure)caption (only figure)classheightlinksize (not for images in static directory)srcset (not for images in static directory)srctitle (only figure)widthOnly “src” is none optional but you really should set “alt” as well.You can set a max width for images with parameter “imageMaxWidth”. Only used for images where size, width and height is not set.If width and height is not set the real dimensions of the image will be used.If only width or only height is set the other value will be proportionally calculated.File Creates a link to a file in global assets directory, static directory and page resources.Possible parameters are:classnewtab (default false)srctextReflink Creates a link to an internal page.{{< reflink ""some-page.md"" >}}
This will output:<a href=""/path/to/page/"">The title of the page</a>
SVG SVG shortcode with inline support. Support for images in global assets directory, static directory and page resources.{{< svg src=""/images/image.svg"" alt=""Example image."" caption=""Lorem ipsum dolor sit amet."" >}}

{{< img src=""/images/image.svg"" inline=""true"" >}}
Possible parameters are:alt (not for inline)captionclassheight (not for inline)inlinelinksrcwidth (not for inline)Search Add a search form for the site, see more above.{{< search >}}
Wrapper A simple, but useful, shortcode to wrap content in a div with a class. The content will be run through “markdownify”.{{< wrapper class-name-you-want >}}
The **content** that should be wrapped.

Some more content.
{{< /wrapper >}}
This will produce:<div class=""class-name-you-want"">
<p>The <strong>content</strong> that should be wrapped.</p>

<p>Some more content.</p>
</div>
If the content should be left untouched add “nomarkdown” after the class name.{{< wrapper class-name-you-want nomarkdown >}}
The **content** that should be wrapped.

Some more content.
{{< /wrapper >}}
This will produce:<div class=""class-name-you-want"">
The **content** that should be wrapped. Some more content.
</div>
Content security policy headers Includes tracking code for Matomo or Google in a way that supports Content security policy headers. Read more in my blog post Content security policy headers when using Matomo or Google analytics.Choose between using AlpineJS, jQuery or Umbrella JS To add AlpineJS, jQuery or Umbrella JS, set the related parameter to true in the configuration file or in the front matter of specific pages. No problem having them loaded on the same page.Personally I use vanilla JS nowadays and I’m playing around with AlpineJS.This is the way I construct my JavaScript files.Vanilla JS:(function () {

  'use strict';

  // Add a js class to the html-tag when JavsScript is active.
  document.querySelector('html').classList.replace('nojs', 'js');

})();
Umbrella JS:(function ($) {

  'use strict';

  // Add your code here.
  $('html').removeClass('nojs').addClass('js');

})(u);
jQuery:(function ($) {

  'use strict';

  // Add your code here.
  $('html').removeClass('nojs').addClass('js');

})(jQuery);
Use npm to lint Sass and JavaScript Lint your Sass using stylelint.Lint your JavaScript using eslint.Can lint files in the theme as well as the project assets directory.Set up your front-end development build tools:Install Node.js and npm, the Node.js package manager.The package.json file in your new sub-theme contains the versions of all the
Node.js software you need. To install them run: npm install
Run the following commands to lint your theme and projects Sass and JavaScript code. npm run lint-theme
 npm run lint-project
 nmp run lint (project + theme)
Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines. Feel free to tag me in your question, my forum username is @frjo.Credits This is originally a port of the Zen theme by JohnAlbin, a very popular base theme for Drupal.Thanks to the Cupper Hugo theme for a really good Readme, have copied a lot from it.Icons from tabler/tabler-icons: A set of over 850 free MIT-licensed high-quality SVG icons for you to use in your web projects. and Language Icon.See AlsoAcademicAnanke Gohugo ThemeAnubisBear CubBeautiful Hugo",NA
Eddie Webb,241,2023-08-11,MIT,"Portfolio, Responsive",Resume,"Personal resume with social handles, skills inventory, work history and portfolio. Includes native CMS editor experience with Netlify CMS. Ported from StartBootstrap 'Resume' theme",https://github.com/eddiewebb/hugo-resume,NA,"hugo ResumeCreated from Start Bootstrap - Resume.
This is basically a single-page website with auto-scrolling based on left-hand nav. Dedicated project/publications pages allow more detail. Includes a client-side search powered by fuse.js at ‘/search’ but currently theme does not link to that anywhere. Includes an /admin endpoint that can allow authorized users to use a WYSIWYG editor and commit files back to markdown, but with a Wordpress/CMS like experience.ExamplesSetup & UseSummaryData filesProjectsPublicationsBlog / PostsTemplate paramsInternationalizationCMS Editor with Netlify CMSCreditsContributionsStart Bootstrap ResumeExamples See Eddie’s site for a live example.Setup & Use This theme uses a combination of a custom archetype projects and some data files to drive content.You can test the provided exampleSite after cloning with the command:
cd exampleSite;hugo -t hugo-resume --themesDir ../.. serverSummary Edit the main contents/_index.md with a brief bio/summaryData files Data files are used for simple content presented on the homepage.data/skills.jsondata/experience.jsondata/education.jsonProjects Initially projects were in their own JSON file too, but I decided I wanted to allow more detail and custom formatting.
Projects are added to one of 2 subfolders of creations or contributions. The difference indicates your role as originator or colaborator. Use hugo add projects/TYPE/name-of-project.md to leverage the proper archetype.Publications Similar to projects, create them under publications. Include any papers, speaking engagements, articles, etc.Blog / Posts Similar to posts, create them under blog. Include any thoughts, musiings, etc.
This template does not support a posts folderTemplate params All personal information outside the above details is captured by params in config.toml, or can be edited in the “Settings” collection if using CMS.Internationalization Left navigation menu and section titles handle multiple languages. Use defaultContentLanguage parameter un config.toml to choose your language. Current supported languages are :enfrCMS Editor with Netlify CMS Does not require deployment to Netlify!Netlify CMS is an open source project that enables CMS like experience for static site generation tools like Hugo. This theme includes a fully working integration and guide in exampleSite/static/adminCredits This project ports the Start Bootstrap Resume theme by David Miller to support hugo.Contributions The following users have made notable contributions:Anthony WhitfordKaushal ModiJulien RouseStart Bootstrap Resume Start Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects.https://startbootstrap.comhttps://twitter.com/SBootstrapStart Bootstrap was created by and is maintained by David Miller, Owner of Blackrock Digital.http://davidmiller.iohttps://twitter.com/davidmillerskthttps://github.com/davidtmillerStart Bootstrap is based on the Bootstrap framework created by Mark Otto and Jacob Thorton.See AlsoAcademicAdritian Free Hugo ThemeBeautiful HugoBridgetDeveloper Portfolio",NA
NA,237,2023-10-14,MIT,"Contact, Landing, Personal, Responsive",Hugo Scroll,"A Hugo theme for pretty, quick and simple single-page websites.",https://github.com/zjedi/hugo-scroll,https://zjedi.github.io/hugo-scroll/,"Hugo Scroll 📜 DemoClean, responsive, single-page Hugo website theme.


Promo image which may be a bit outdated:⭐ Feature highlights Responsive to screen size/shapeSEO friendlyCustomizableVideo coverFork Awesome Icons out of the boxHeader logoVisual guards to guarantee readabilityExternal linksJS/CSS Assets optimized (Minification, Fingerpriting, pipeline-processed
into single file)git info in footer (opt-in)🔑 Installation If you already have a Hugo site on your machine, you can simply add this theme viagit submodule add https://github.com/zjedi/hugo-scroll.git themes/hugo-scroll
Then, adjust the config.toml as detailed below & in the file comments.Playing around with our example site If you simply want to check out the exampleSite, you can rungit clone https://github.com/zjedi/hugo-scroll.git hugo-scroll
cd hugo-scroll
hugo server --source=exampleSite --themesDir=../..
For more information, read the official Hugo setup guide.If you are starting fresh, simply copy over the contents of the exampleSite-directory included in this theme to your source directory. That should give you a good idea about how things work, and then you can go on from there to make the site your own.Please check out the config.toml included in the exampleSite of this theme.You can add a new section to the homepage by running hugo new homepage/my-new-content.md (or craft the file manually)To create a page separate from the homepage, run hugo new my-new-page.md🔧 Feature details 🔨 Customizing CSS Add a custom_head.html file to your layouts/partials directory.You can use <style> tag to embed the overrides (better performance-wise)Alternatively you can <link> your own custom.cssCSS variables var(--some-var-name) from assets\css\variables.scss can be overridden by adding:root {
  --some-var-name: blue!important;
}
Icons This theme includes the full set of Fork Awesome 1.2.0 Icons. Use the {{<icon>}}-shortcode with the respective “fa fa-ICONNAME”-class to use an icon directly in your .markdown files à laLook at this nice »envelope«-icon: `{{<icon class=""fa fa-envelope"">}}`. I took this from https://forkaweso.me/Fork-Awesome/icon/envelope/ :-)
Header logo Configured in _index.md, see exampleSite: header_logo: ""images/chef-hat.png""Video cover Set header_use_video: true in /exampleSite/content/_index.md and define video source via custom partial, such as exampleSite/layouts/partials/custom_header_video.html.Footer version information In order to see technical version information (extracted from Hugo’s GitInfo)) set the following general option in your config.toml: enableGitInfo = trueExternal links You can add an external link in the menu, see external.md in the exampleSite.You can also use extlink shortcode to create a link opening in a new tab:Visit as at {{<extlink text=""Instagram"" href=""https://www.instagram.com/yourInstagramName/"">}}
Referencing and showing icons in front of the link text is possible with a new parameter icon:Visit as at {{<extlink icon=""fa fa-instagram"" text=""Instagram"" href=""https://www.instagram.com/yourInstagramName/"">}}
🐛 Issues / 💡 Feedback / 👑 Contributing Discussion for Q&A (when unsure),
Issues for tracking,
Pull Requests for contributions.See contributing guideline for more.👏 Special Thanks Jan Raasch, original author of themeYonatan Wolowelsky, author of GhostScroll theme, which formed the basis of this Hugo theme.Pexels, for supplying free stock photos.See AlsoAcademicAdritian Free Hugo ThemeHugo Product LaunchHugoplatePaige","Jan Raasch, Zdenek Kedaj"
Robert Austin,228,2023-06-06,MIT,"Blog, Minimal",Hugo Winston,Hugo Winston is a bold minimal blogging theme,https://github.com/zerostaticthemes/hugo-winston-theme,https://hugo-winston.netlify.app,"Hugo Winston ThemeHugo Winston is a bold minimal blogging theme.Live Demo |
Zerostatic ThemesTheme features Posts (Markdown)Basic Page (Markdown)SCSS (Hugo Pipelines)Responsive design100/100 Google Lighthouse speed score100/100 Google Lighthouse SEO score100/100 Google Lighthouse accessibility scoreGoogle analytics configured in config.tomlConfigure GID using env variable HUGO_GOOGLE_ANALYTICS_ID, compatible with Netlify.Title, meta description and meta tags automatically generated for every pageOG Meta data for Facebook and TwitterSemantic HTML document structureInstallation 1. Install HugoTo use this theme you will first need to have Hugo installed. Please follow the official installation guide⚠️ Note: Check your Hugo version - Hugo Extended is required!This theme uses Hugo Pipes to compile SCSS and minify assets which means if you are not using the Hugo extended version this theme will not work. To check your version of Hugo, run hugo version. Make sure you see /extended after the version number, for example Hugo Static Site Generator v0.51/extended darwin/amd64 BuildDate: unknown You do not need to use version v0.51 specifically, it just needs to have the /extended part.2. Create a new Hugo siteThis will create a fresh Hugo site in the folder mynewsite.hugo new site mynewsite
3. Install the themeDownload or git clone this theme into the sites themes folder mynewsite/themes. You should end up with the following folder structure mynewsite/themes/hugo-winston-themecd mynewsite
git clone https://github.com/zerostaticthemes/hugo-winston-theme.git themes/hugo-winston-theme
4. Copy the example contentCopy the entire contents of the mynewsite/themes/hugo-winston-theme/exampleSite/ folder to root folder of your Hugo site, ie mynewsite/. To copy the files using terminal, make sure you are still in the projects root, ie the mynewsite folder.cp -a themes/hugo-winston-theme/exampleSite/. .
6. Run HugoAfter installing the theme for the first time, generate the Hugo site.You run this command from the root folder of your Hugo site ie mynewsitehugo
For local development run Hugo’s built-in local server.hugo server
Now enter localhost:1313 in the address bar of your browser.ConfigurationConfig options # config.toml
[params]
  google_analytics_id = """"
  twitter_handle = ""@zerostaticio""
  showAuthorOnHomepage = true
  showAuthorOnPosts = false
  showIntroContentOnHomepage = true
  showPostsOnHomepage = true
  usePaginationOnHomepage = false
  limitPostsOnHomepage = 3 # only used if usePaginationOnHomepage is false
  sortPostsByDateOldestFirst = false
  addDot = true
  addFrame = true
  highlightColor = '#7b16ff'
  baseColor = ""#ffffff""
  baseOffsetColor = ""#eaeaea""
  headingColor = ""#1c1b1d""
  textColor = ""#4e5157""
  dotColor = ""#7b16ff""
  enableGoogleFonts = true 
  googleFontsUrl = ""https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap""
  fontFamilyHeading = ""Poppins""
  fontFamilyParagraph = ""Helvetica""
  fontFamilyMonospace = ""monospace""
Google Analytics Add your google analytics ID to the config.toml# config.toml
[params]
  google_analytics_id=""UA-132398315-1""
Plausible Analytics Add your plausible analytics domain to the config.toml.
This is data-domain in your tracking script code.// config.toml
[params]
  plausible_analytics_domain = ""barryhennessy.com""
Deploying to NetlifyUse Netlify to deploy this theme. This theme contains a valid and tested netlify.toml - Feel free to use the 1-click deploy below.This theme includes a netlify.toml which is configured to deploy to Netlify from the exampleSite folder. See this discussion on how to deploy your site on Netlify from the exampleSite folder - https://discourse.gohugo.io/t/deploy-your-theme-to-netlify/15508Most likely if you are deploying to Netlify and created a new Hugo site or added this theme to an existing Hugo site then you are not deploying from the exampleSite directory and you can delete the netlify.toml file.Other Hugo Themes by Zerostatic Hugo WhisperHugo SerifHugo WinstonHugo AdvanceHugo Paradigm🇦🇺 Made in Australia by Robert Austin - leave a star mate!See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Vimux,206,2023-11-25,MIT,Blog,Blank,Starter Hugo theme for developers.,https://github.com/Vimux/blank,https://blank-demo.netlify.app/,"BlankBlank — starter Hugo theme for developers. Use it to make your own theme.DemoInstallation In your Hugo site themes directory, run:git clone https://github.com/vimux/blank
Next, open config.toml in the base of the Hugo site and ensure the theme option is set to blank.theme = ""blank""
For more information read the official quick start guide of Hugo.Contributing Have you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This theme is released under the MIT license.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Bora Tanrikulu,202,2023-11-26,MIT,"Minimal, Portfolio, Responsive",Eternity,Eternity is a minimalist Hugo theme designed for portfolio sites with a fresh feel.,https://github.com/boratanrikulu/eternity,https://eternity.bora.sh/,"EternityEternity is a minimalist Hugo theme designed for portfolio sites with a fresh feel.Demo Website: eternity.bora.shhttps://user-images.githubusercontent.com/20258973/180658086-24069751-1e78-44ef-88aa-21e045ef249d.mp4Used by cankalay.comA photographer website.www.twosmallbirds.artAn illustrator website.www.lucywingard.comA ceramic artist website.emily5.comA graphic designer website.davidbliss.artA drawings website.tatjana-hodes.deAn artist website.cubrix.artAn artist website.asjadnaqvi.github.io/stata-portfolioStata dataviz portfolio.zone.photosA photographer website.thomaslaneart.comAn artist website.taschchen.artAn artist website.www.michael-bolus.comA photographer website.www.stndc.comA website about sound and music computing.floragrh.com.arAn illustrator website.fotos.pilat.ccA photographer website.www.phidelart.comAn artist website.peties.artAn artist website.krystalledoux.comAn artist website.neilstoddard.comA photographer website.rebeccacomas.comA web/graphic designer website.sophiacaro.comAn artist website.lightroastdisco.comA musician website.chogo.photographyA photographer website.piacenza.usA photographer website.rominamoyateatro.comAn actress website.Feel free to add your site here.Note: If you’re an artist who wants to host a website but doesn’t have know how to, I can help you about technical questions for free. Just send an email to eternity@bora.sh, I will assist you first.Features Configurable features.Multiple images support.Clean, fresh, minimalist.Integrated lazy load.Automatically creates resized thumbnails.Shows exif if it exists.Installation Install Hugo.Create a new site.hugo new site yoursite
cd yoursite
Remove default config file.rm hugo.toml
If you use an older version of Hugo (< v0.110.0), your config might be called differently:rm config.toml
Submodule the theme.git init
git submodule add --depth=1 https://github.com/boratanrikulu/eternity.git themes/eternity
Create config.yaml;Apply (1) or (2).Use the example project (recommended).Copy all files from the example project.cp -r ./themes/eternity/example/eternity.bora.sh/* .
Use empty content.Copy example config.cp ./themes/eternity/config.example.yaml ./config.yaml
Start the server.hugo serve --port 1313
Go to localhost:1313.Upgrade To get last updates, just git pull.cd themes/eternity && git pull && cd -
Usage of Posts Go to posts documentation.Usage of Config.yaml Go to config documentation.Editing Style Go to style documentation.Contact If you need to contact us for any reason; create an issue or send a mail to eternity@bora.sh.See AlsoAcademicAdritian Free Hugo ThemeBeautiful HugoBridgetGokarna",NA
Nurlan Suyundukov,213,2023-05-24,MIT,"Blog, Minimal, Responsive",Sustain,"Personal blog built with Bootstrap, powered by Hugo",https://github.com/suyundukov/hugo-sustain,NA,"Table of Contents Table of ContentsInstallationWith gitManualQuick startFeaturesSyntax highlightingDisqusGoogle AnalyticsAboutContributingLicenseSustain Live DemoInstallation With git From the root of your Hugo site, clone the theme into themes/hugo-sustain by running :git clone https://github.com/nurlansu/hugo-sustain.git themes/hugo-sustain
Manual Download zip archive.Unarchive it.Move hugo-sustain folder in themes folder of your blogFor more information read the official setup guide of Hugo.Quick start After installation, take a look in the exampleSite folder at. This directory contains an example config file and the content for the demo. It serves as an example setup for your documentation.  exampleSite
  ├── config.toml
  ├── content
  │   ├── projects.md
  │   │
  │   └── blog
  │       ├── creating-a-new-theme.md
  │       ├── go-is-for-lovers.md
  │       ├── hugo-is-for-lovers.md
  │       └── migrate-from-jekyll.md
  │
  ├── data
  │   └── projects.yml
  │
  └── static
Copy at least the config.toml in the root directory of your website. Overwrite the existing config file if necessary.Hugo includes a development server, so you can view your changes as you go -
very handy. Spin it up with the following command:hugo serve
Now you can go to localhost:1313 and the Sustain
theme should be visible.Features Syntax highlighting Use highlight = true in the front matter to include highlight.js javascript and css files.Disqus To use this feature, uncomment and fill out the disqusShortname parameter in config.toml.Google Analytics To add Google Analytics, simply sign up to Google Analytics to obtain your Google Tracking ID, and add this tracking ID to the googleAnalytics parameter in config.toml.About This is a port of the Jekyll theme Sustain by Fábio Madeira. It supports most of the features of the original theme.Contributing Pull requests, bug fixes, and new features are welcome!Fork the repositoryCreate your feature branch (git checkout -b my-new-feature)Commit your changes (git commit -a -m 'Add some feature')Push to the branch (git push origin my-new-feature)Create new Pull Request on GitHubLicense 
MITSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Jeremy Nusser,188,2023-11-22,Apache-2.0,"Blog, Company, Dark, Gallery, Light, Minimal, Personal, Portfolio, Responsive",TailBliss,TailBliss is an Hugo Starter with Tailwind CSS 3.2 and Alpine.js with light and dark modes. Submitted for Hacktoberfest 2022.,https://github.com/nusserstudios/tailbliss,https://tailbliss.netlify.app/,"TailBlissTailBliss is an opinionated Hugo Starter with Tailwind CSS 3.2 and Alpine.js with light/dark modes.




View Demo
·
Report Bug
·
Request Feature
·
Ask QuestionInstall to VS Code with:git clone git@github.com:nusserstudios/tailbliss your-nameInstall with NPMnpm installInstall with YarnyarnTo start developing:Develop with NPMnpm run startDevelop with Yarnyarn startTo generate the site HTML:Build with NPMnpm run buildBuild with Yarnyarn buildnpm run start will run two commands parallel:npx tailwindcss -i ./assets/css/main.css -o ./assets/css/style.css --watchHas paginated Categories and Tags. Markdown files will automatically convert images put into /assets folder to .webp images.Image shortcodes for webp as well. {{< imgc src=“img-name.jpg” alt=“Place alt text here.” >}}Form To use the form, visit FormSubmit.Co. Locate the contact form in “content/contact.md”, and update the form action with the email address you want on this line: action=“https://formsubmit.co/your@email.com"" method=“POST”Credits 4044ever - Original Theme
https://github.com/4044ever/Hugo-Tailwind-3.0.gitJan Heise - Alpine.js Navbar
https://github.com/jan-heise/responsive-navbar-with-dropdownMade for Hacktoberfest, with ❤️ by NusserStudios.See AlsoAcademicLightbiPaigePikoGokarna",NA
NA,202,2023-08-12,MIT,"Blog, Light, Minimal, Responsive",Pickles,"Pickles is a modern, simple and beautiful Hugo theme",https://github.com/mismith0227/hugo_theme_pickles,NA,"Pickles Pickles is a modern, simple and beautiful Hugo theme.Overview Modern, Simple and beautiful designMedium’s Image Zoom（zooming)Social links（Twitter,Facebook,Instagram,Google+,GitHub,GitLab,npm,Codepen,Dribbble,500px,Flickr,Pinterest,Tumblr,Vimeo,YouTube,Linkedin）Support for Related ContentSupport for tagsAnalytics with Google AnalyticsResponsive designSVG SpriteThere is a custom shortcode for Image Zoom. You can use it like so:{{< zoom-img src=""/images/default.jpg"" >}}
Features gulpwebpackSassBabelSVG SpriteStandardInstallation In your Hugo site directory, run:$ mkdir themes
$ cd themes
$ git clone -b release https://github.com/mismith0227/hugo_theme_pickles
Or download it from the release branch:releaseUsage Use Hugo’s -t hugo_theme_pickles or --theme=hugo_theme_pickles option with hugo commands. For example:$ hugo server -t hugo_theme_pickles -w -D
Configuration You may specify the following options in config.toml of your site to make use of
this theme’s features.For getting started with Pickles, copy the config.toml file from the exampleSite directory inside Pickles’s repository to your site repository.$ cp themes/hugo_theme_pickles/exampleSite/config.toml .
Now, you can start editing this file and add your own information!Customisation To hide the date in a post, set the hideDate parameter in the front matter:---
hideDate: true
---
You can use hideWordCount and headReadingTime to hide word count and reading time on both, the posts and the post list.---
hideWordCount: true
hideReadingTime: true
---
Contributing Pull requests, bug fixes and new features are welcome!Please create feature branches from develop and submit a PR for any change.Development Install Node modulesyarn
Run gulp. You don’t need to install gulp globally.// Development
yarn run dev
// On another tab
yarn run hugo

// Production (compress)
yarn run prod
// On another tab
yarn run hugo

// Build
yarn run build
License Open sourced under the MIT license.See AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
morph,181,2023-11-24,MIT,"Blog, Dark Mode, Light, Minimal, Responsive",smol,Minimal Hugo theme using a Monospace font and without any tracking or external dependencies.,https://github.com/colorchestra/smol,NA,"smolA minimal, monospaced blogging theme for Hugo that respects your privacy and is easy on your bandwidth. A demo can be found at https://smol-demo.morph.sh.smol is based on Blank created by Vimux.Features No JavaScriptNo Google spyware or tracking of any kindNo other external dependencies, embedded fonts or comment sectionsDark mode support (depending on your OS’s setting)Installation In your Hugo site themes directory, run:git clone https://github.com/colorchestra/smol
Next, open config.toml in the base of the Hugo site and ensure the theme option is set to smol.theme = ""smol""
Lastly, add the following lines to your config.toml to set site parameters and make use of all the menu entries in the header and footer sections if you need them.# Parameters
[params]
    subtitle = ""Your blog subtitle goes here!""
    dateFmt = ""02.01.2006 15:04""

# Header
[menu]
  [[menu.main]]
        identifier = ""posts""
        name = ""Posts""
        url = ""/posts/""
        weight = 1 

  [[menu.main]]
        identifier = ""categories""
        name = ""Categories""
        url = ""/categories/""
        weight = 2 

  [[menu.main]]
        identifier = ""tags""
        name = ""Tags""
        url = ""/tags/""
        weight = 3

# Footer
  [[menu.footer]]
        name = ""Github""
        url = ""https://github.com/example""
        weight = 1 

    [[menu.footer]]
        name = ""Mastodon""
        url = ""https://example.com/@user""
        weight = 2 

    [[menu.footer]]
        name = ""Imprint""
        url = ""/imprint""
        weight = 3 
For more information read the official quick start guide of Hugo.Optional features Custom copyright text Add copyright = ""Your text here"" - in the config.toml to change the copyright notice in the footer.Image captions You can add captions to images (technically using <figcaption> HTML tags) by adding titles, like so: ![Alt text here](/path/to/image.png ""Put your caption here!"")Contributing Have you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This theme is released under the MIT license.See AlsoBlowfishCompostGruvhugoHugo Bear BlogHugoplate",NA
Varun A P,198,2022-12-25,MIT,"Blog, Responsive",Digital Garden,Build your own personal Digital Garden effortlessly with this Hugo theme,https://github.com/apvarun/digital-garden-hugo-theme,https://digital-garden-hugo-theme.vercel.app/,"Digital Garden theme for HugoBuild your own personal Digital Garden effortlessly with this Hugo themeLive Demo   |   Documentation   |   Buy me a coffeeFeatures:Multi-column layoutResponsive Website, Optimized for mobile readingCustom portfolio showcase layoutSocial media linksCode highlighting (highlight.js)Light and Dark modeKaTeX math expression supportFast performance with perfect score on Lighthouse (Report)SEO optimized with support for Twitter Cards and Open GraphBuilt-in 404 pageGoogle Analytics supportSitemap and RSS feed for your content (OOTB with Hugo)Newsletter support (Substack, Buttondown and Revue)Preview ➡️   Open Live DemoGet the theme Minimum Hugo Version: 0.82.1Run from the root of your Hugo site:git clone https://github.com/apvarun/digital-garden-hugo-theme.git themes/digitalgarden
Alternatively, you can include this repository as a git submodule. This makes it easier to update this theme if you have your Hugo site in git as well:git submodule add https://github.com/apvarun/digital-garden-hugo-theme.git themes/digitalgarden
Setting up Go to documentationIssues If you have a question, please open an issue for help and to help those who come after you. The more information you can provide, the better!Contributing Contributions, issues, and feature requests are welcome! For major changes, please open an issue first to discuss what you would like to change.License Licensed under MIT🤝 Support Give a ⭐️ if you like this project!See AlsoArcanaCalligraphyDPSGDenEd",NA
thingsym,188,2023-08-22,MIT,"Docs, Responsive",Techdoc,The Techdoc is a Hugo Theme for technical documentation.,https://github.com/thingsym/hugo-theme-techdoc,NA,"Hugo Theme TechdocThe Techdoc is a Hugo Theme for technical documentation.Hugo Themes page: https://themes.gohugo.io/themes/hugo-theme-techdoc/Demo site: https://thingsym.github.io/hugo-theme-techdoc/Download: https://github.com/thingsym/hugo-theme-techdocFeatures Modern, Simple layoutResponsive web designDocumentation menu (Select Menu style)Table Of Contents for the page (selective)Theme colorEdit link to documentation repositoryHeader link to HTML headingsCustom ShortcodesCode highlight with clipboardAlert panelButtonSearch Shortcode powered by AlgoliaOpen GraphAnalytics with Google Analytics, Google Tag ManagerScreenshot Theme color Menu style Open Menu Slide Menu Edit link Getting Started Requirement Hugo minimum version: 0.60.0Default Markdown parser library Goldmark compatibleInstall Hugo theme on your project as a git submodule If you have git installed, you can include hugo-theme-techdoc repository into your core repository as submodule using git submodule within your project directory.cd your_project
git submodule add https://github.com/thingsym/hugo-theme-techdoc.git themes/hugo-theme-techdoc
For more information read the Hugo documentation.Or install Hugo theme on your project as a Hugo module If you have Go installed, you can add hugo-theme-techdoc to your site as a Hugo module instead of a git submodule. Navigate to your Hugo project root and edit your hugo.toml:[module]
[[module.imports]]
path = 'github.com/thingsym/hugo-theme-techdoc'
Then, to install/update the hugo-theme-techdoc module, run:hugo mod get -u
Or download Hugo theme on your project If you have git installed, you can do the following at the command-line-interface within your project directory.cd your_project/themes
git clone https://github.com/thingsym/hugo-theme-techdoc.git
Configure You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.For an example of config.toml, config.toml in exampleSite.Update Hugo theme for git submodule git submodule update --remote
git add themes/hugo-theme-techdoc
git commit
Directory layout tree . -I node_modules

.
├── LICENSE.md
├── README.md
├── archetypes
│   └── default.md
├── docker-compose.yml
├── exampleSite
│   └── ..
├── gulpfile.js
├── images
│   └── ..
├── layouts
│   ├── 404.html
│   ├── blog
│   │   ├── li.html
│   │   ├── list.html
│   │   ├── single.html
│   │   └── summary.html
│   ├── _default
│   │   ├── baseof.html
│   │   ├── list.algolia.json
│   │   ├── list.html
│   │   └── single.html
│   ├── index.html
│   ├── partials
│   │   ├── content-footer.html
│   │   ├── custom-css.html
│   │   ├── custom-head.html
│   │   ├── edit-meta.html
│   │   ├── edit-page.html
│   │   ├── footer.html
│   │   ├── global-menu.html
│   │   ├── head.html
│   │   ├── last-updated.html
│   │   ├── menu
│   │   │   ├── open-menu.html
│   │   │   └── slide-menu.html
│   │   ├── meta
│   │   │   ├── chroma.html
│   │   │   ├── google-analytics-async.html
│   │   │   ├── google-site-verification.html
│   │   │   └── tag-manager.html
│   │   ├── notification.html
│   │   ├── pagination.html
│   │   ├── powered.html
│   │   ├── prepend-body.html
│   │   ├── search.html
│   │   ├── sidebar-footer.html
│   │   ├── sidebar.html
│   │   ├── site-header.html
│   │   └── table-of-contents.html
│   ├── posts
│   │   ├── list.html
│   │   └── single.html
│   ├── shortcodes
│       ├── button.html
│       ├── code.html
│       ├── panel.html
│       └── search.html
├── package-lock.json
├── package.json
├── resources
├── src
│   ├── js
│   │   ├── code.js
│   │   ├── headerlink.js
│   │   ├── jquery.backtothetop
│   │   │   ├── jquery.backtothetop.js
│   │   │   └── jquery.backtothetop.min.js
│   │   ├── keydown-nav.js
│   │   ├── main.js
│   │   └── sidebar-menu.js
│   └── scss
│       ├── _component.scss
│       ├── _project.scss
│       ├── _structure.scss
│       ├── _variable.scss
│       ├── chroma.scss
│       ├── foundation
│       │   ├── _element.scss
│       │   ├── _index.scss
│       │   ├── _normalize.scss
│       │   ├── _reset.scss
│       │   └── _stack.scss
│       ├── function
│       │   ├── _calc-font-size.scss
│       │   ├── _calc-stack.scss
│       │   ├── _contrast-color.scss
│       │   ├── _index.scss
│       │   └── _strip-unit.scss
│       └── theme.scss
├── static
│   ├── css
│   │   ├── chroma.css
│   │   ├── chroma.min.css
│   │   ├── theme.css
│   │   └── theme.min.css
│   ├── images
│   └── js
│       └── bundle.js
├── theme.toml
└── webpack.config.js
Preview site To preview your site, run Hugo’s built-in local server.hugo server -t hugo-theme-techdoc
Browse site on http://localhost:1313Deploy Site to public_html directory hugo -t hugo-theme-techdoc -d public_html
Local development environment Preview exampleSite cd /path/to/dir/themes/hugo-theme-techdoc/exampleSite

hugo server --themesDir ../..
Browse site on http://localhost:1313Build development cd /path/to/hugo-theme-techdoc
npm install
npm run gulp watch
Docker development environment Run Docker and Preview exampleSite cd /path/to/hugo-theme-techdoc
docker-compose up -d
Browse site on http://localhost:1313Build development cd /path/to/hugo-theme-techdoc
docker-compose run --rm node npm install
docker-compose run --rm node npm run watch
Contribution Patches and Bug Fixes Small patches and bug reports can be submitted a issue tracker in Github. Forking on Github is another good way. You can send a pull request.Fork Hugo Theme Techdoc from GitHub repositoryCreate a feature branch: git checkout -b my-new-featureCommit your changes: git commit -am ‘Add some feature’Push to the branch: git push origin my-new-featureCreate new Pull RequestChangelog Version 1.0.0 - 2022.08.21update hugo docker imageupdate npm dependenciesallow to set branch of github documentation repository [#64]enable use as a Hugo module [#63]Version 0.9.9 - 2022.07.08fix scssbump up version on jquery, jquery.easing and clipboardupdate node package dependencieschange service namechange fontawesome delivery from cdn to self-hostfix config.tomlid and class elements added to menu itemspre and post elements added to menu items [#48]use SRI for CDN js sources [#45]fix heading styleschange to using math.div for divisionVersion 0.9.8 - 2021.10.18fix sample documentedit READMEupdate package.jsonadd github_doc_repository_pathchange to relative linkadd workflows for publishing demo site to gh-pagesVersion 0.9.7 - 2021.03.08add docker-compose.yml for development environmentchange keyboard event from event.keyCode to event.key because it is deprecatedupdate package.jsonadd FUNDING.ymlfix space for minify publishchange flexbox-grid-mixins from libsass to dart-sassVersion 0.9.6 - 2020.11.22add sample Markdown Syntaxupdate sample documentreplace scss from node-sass to dart-sassVersion 0.9.5 - 2020.11.05fix link style with Alert panelVersion 0.9.4 - 2020.10.08improve scss for custom shortcodes using css custom propertieschange stack to css custom propertiesfix scssfix button shortcode, adding notice coloradd Code highlight with clipboard custom shortcodefix webpack.config.jsfix npm scriptsupdate package.jsonadjust no sidebar layoutVersion 0.9.3 - 2020.08.02remove jQuery dependency with keydown navadd header linkVersion 0.9.2 - 2020.06.14add note and sample to documentfix tableOfContents endLeveladd chapter ‘unlimited levels’ to documentadd menu indentation up to 5 levelsVersion 0.9.1 - 2020.05.24fix config.tomlfix url in rss meta linkremove line break in algolia.jsonVersion 0.9.0 - 2020.04.01fix lint configupdate Sample Documentupdate jQuery to v3.4.1add search function and shortcode powered by Algoliafix config.tomlfix sassfix hugo deprecated warningVersion 0.8.3 - 2020.03.19fix edit page linkVersion 0.8.2 - 2020.03.07fix open graph image pathVersion 0.8.1 - 2020.03.07fix open graph image pathVersion 0.8.0 - 2020.02.27update Sample Documentconfig.tomladd open graph image to exampleSiteadd safeCSS for ZgotmplZ with generated by Hugo TemplateVersion 0.7.0 - 2020.02.07bump up Hugo minimum version to 0.60.0change shortcode delimiter from % to <improve tableOfContents for GoldmarkVersion 0.6.0 - 2020.01.13fix scssgulp bump up version to 4.0fix hugo deprecated warningVersion 0.5.0 - 2019.12.08update Sample Documentadd table of contentsadd open graphadd function and stack scssVersion 0.4.0 - 2019.11.02update Sample Documentadd Theme coloradd Menu styleimprove scssVersion 0.3.0 - 2019.10.06fix archetypesadd prepend-body.html for Tag Manager noscript versionchange class name from menu to global-menurename partials filesfix javascript path for webpackimprove development environmentmove javascript files to src directoryVersion 0.2.2 - 2019.04.27fix Lastmod’s and PublishDate’s initial value of 0001-01-01Version 0.2.1 - 2018.12.07fix scss lint errorschange lint from scss-lint to stylelintadd published datechange the font color of powered byfix link on powered byVersion 0.2.0 - 2018.11.21add screenshot imagesadd exampleSitefix sub-menu for responsiveimprove menu and paginationVersion 0.1.0 - 2018.03.04initial releaseLicense Techdoc is licensed under the MIT License.Techdoc bundles the following third-party resources:CSS reset by normalize.css, MITjQuery Plugin Back to the Top, MITSass Mixin Flexbox Grid Mixins, MITjQueryjQuery EasingFont Awesomeclipboard.jsalgoliasearchDay.jsAuthor thingsymCopyright (c) 2017-2020 by thingsymSee AlsoAcademicAce documentationAmethystBookBootstrap Theme for Personal Blog and Documentations",NA
David Hamp-Gonsalves,180,2022-11-07,GNU3.0,"Light, Minimal, Personal, Responsive",Black & Light,"A High contrast, text oriented, performant and Javascript-free theme for Hugo.",https://github.com/davidhampgonsalves/hugo-black-and-light-theme,NA,"Black & LightA High contrast, text oriented, performant and Javascript-free theme for Hugo.Features Loads in a single request (with web-fonts disabled).100 / 100 on Google Page Speed test (100 / 100 on mobile with web-fonts disabled).Scriptless (unless you configure Google Analytics).Styles inlined in head.High Contrast.Supports dark color scheme via prefers-color-scheme.High Resolution Favicons.Installation Inside the folder of your Hugo site run:  git submodule add https://github.com/davidhampgonsalves/hugo-black-and-light-theme.git themes/black-and-light
For more information read the official setup guide of Hugo.The config file Copy the config.toml from this themes exampleSite to your Hugo site or use it as a reference.License This theme is released under the GPL 3.0 license. For more information read the license.See AlsoCalligraphyTatBanTheme2.0AcademicAdritian Free Hugo ThemeAnubis",NA
lisenhui,178,2023-07-18,MIT,"Blog, Dark, Docs, Light, Personal, Responsive",Hugo NexT,Easily & powerful theme for Hugo engine.,https://github.com/hugo-next/hugo-theme-next,https://preview.hugo-next.eu.org,"中文 | EnglishHugo NexT «Hugo NexT» is a high quality elegant Hugo theme. Migrate it from Hexo engine themes which name is NexT, keep all kind page layout designs and 4 different shcemes, start new journey with :heart: and hope you would like it.All page designs & configuration compatibility with Hexo NexT, it’s very easy migrate your site from Hexo to Hugo and enjoy yourself.    🎨 4 Scheme :heart_decoration: Muse:six_pointed_star: Mist:pisces: Pisces:gemini: Gemini (default)👀 Live Preview Environment:gemini: (Default):heart_decoration::six_pointed_star::pisces:StatusPreliminaryGeminiMuseMistPiscesProductionGeminiMuseMistPiscesPreliminary: all new feature developments will be previewed as soon as possible.Production: Only the features that are tested stably and meet the requirements will be officially released.👣 Quick Start Before use Hugo NexT theme, please make sure installed Git & Hugo Extened software in your PC.📰 Use Template If there your first time build blog site, Recommended use template of Github which can easily create your site code. Click & visit this repository: hugo-theme-next-starter, then click the green button which name call Use this template upper right corner on the page. Just like below image:After do that click the green button which name call Create repository from template, then will create your site code automatic, and clone it on your PC environment.📐 Direct Reference If you had a blog site, then use submodule to lead into the theme, see below commands:$ cd hugo-next-exmaple
$ git submodule add https://github.com/hugo-next/hugo-theme-next.git themes/hugo-theme-next
$ cp themes/hugo-theme-next/exampleSite/config.yaml .
$ mv config.toml config.toml.backup
💻 Preview on Local $ cd hugo-next-exmaple
$ hugo server
Done that input adrress http://127.0.0.1:1313/ on browser will see the effect & good luck for you! :tada::tada::tada:Note
Don’t use hugo server command deploy your site and enable internet visit, it just used to preview when you develop on local environment. Recommended use hugo command build static files all site, then deploy them into Web server such as Nginx.🔄 Upgrade Theme Execute command as below in your site directory when the theme upgrade.$ cd hugo-next-exmaple
$ git submodule update --remote
📝 New Post There had ready a new post template for you, It is recommended to use the following Hugo command to quickly create a new post:$ hugo new posts/hello-world.md
Note
By defalut hugo new command will create new post under content root directory, so in here posts were you custom subfolder in content directory.All front matter parameters’s description in post as below:---
title: ""{{ replace .Name ""-"" "" "" | title }}""
description: ""{{ .Name }}""
keywords: ""{{replace .Name ""-"" "",""}}""

date: {{ .Date }}
lastmod: {{ .Date }}

categories:
 -
tags:
  -
  -

# Post's origin author name
#author:
# Post's origin link URL
#link:
# Image source link that will use in open graph and twitter card
#imgs:
# Expand content on the home page
#expand: true
# It's means that will redirecting to external links
#extlink:
# Disabled comment plugins in this post
#comment:
# enable: false
# Disable table of content int this post
# Notice: By default will automatic build table of content 
# with h2-h4 title in post and without other settings
#toc: false
# Absolute link for visit
#url: ""{{ lower .Name }}.html""
# Sticky post set-top in home page and the smaller nubmer will more forward.
#weight: 1
# Support Math Formulas render, options: mathjax, katex
#math: mathjax
# Enable chart render, such as: flow, sequence, classes etc
#mermaid: true
---
🎉 User’s Cases Hugo Docs & Demo凡梦星尘空间站阿哈吉研究僧Zero’s RecordMore CasesHope could submmit your site information in this file flinks.yaml end line such as below code sytle when you use Hugo NexT theme, thanks.- name: NexT 主题
  desc: 保持简单的易用性和强大的功能
  avatar: https://hugo-next.eu.org/imgs/hugo_next_avatar.png
  link: https://hugo-next.eu.org
🙋 Feedback Join us GitHub Discussions or Gitter to chat :beers:GitHub Issues submit a new bug :bug:GitHub Feature tell me your ideas :sparkles:👨‍👩‍👧‍👦 Join us All features development progress and new request in Hugo NexT V4 Roadmap, welcome to join us and compelete it together.📜 License MIT LicenseCopyright (c) 2022, hugo-next teams.💖 Thanks That’s my hobby to develop Hugo NexT theme, thanks all people who gived the donate, and let we follow it growth up.List of Donors(Order desc by Date):Donation timeDonorsDonation modeDonation contentMessage2023.06.01**霖alipayRMB 10.00/2022.11.15f888xianyuRMB 6.20Good luck.2022.09.30*軒wechat payRMB 66.66Hope it could help more people.2022.09.30N*lwechat payRMB 20.00/2022.07.09*风wechat payRMB 10.00/2022.05.08*泉wechat payRMB 6.60Good luck with next develop.2022.02.28*娇wechat payRMB 5.00/2021.12.21z*ywechat payRMB 18.88/See AlsoAcademicBootstrap Theme for Personal Blog and DocumentationsAnubisBlondeBlowfish",NA
Xin,148,2023-11-17,MIT,"Blog, Dark, Docs, Light, Minimal, Responsive",Hextra,"Modern, responsive, batteries-included Hugo theme for creating beautiful static websites.",https://github.com/imfing/hextra,https://imfing.github.io/hextra/,"HextraModern, responsive, batteries-included Hugo theme for creating beautiful static websites.Demo → imfing.github.io/hextra Features Beautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding.Responsive Layout and Dark Mode - It looks great on all devices, from mobile to desktop. Dark mode is also supported to accommodate various lighting conditions.Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No JavaScript or Node.js are needed to use it.Full-text Search - Built-in offline full-text search powered by FlexSearch, no extra configuration required.Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcrumbs, pagination, sidebar navigation and more are all automatically generated.Multi-language and SEO Ready - Multi-language sites made easy with Hugo’s multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards.Quick Start Use the template Using the Hextra Starter Template is the simplest method to bootstrap a new website with Hextra theme. Get started by clicking the “Use this template” button on the template repository page.The template repository also includes a GitHub Actions workflow for deploying your website to GitHub Pages.Usage Refer to the documentation for more information.Contributing Contributions are welcome.
Check out the contributing guide to get started.License MIT LicenseSee AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
caressofsteel,163,2023-01-22,Creative Commons,"Blog, Landing, Portfolio, Responsive",Hugo Story,"A (modular, highly tweakable) responsive one-page theme for Hugo.",https://github.com/caressofsteel/hugo-story,NA,"Hugo StoryA (modular, highly tweakable) responsive one-page theme for Hugo. Hugo Story is a port of the static HTML template Story by HTML5 UP. It is designed to mirror the look and feel of the original template as closely as possible while incorporating some of the features Hugo has to offer.This theme is designed for those who are comfortable editing HTML and integrating Hugo short codes and variables to customize the theme to their liking.Features Minimalist DesignFully ResponsiveTemplatesHeaderFooterFootScriptsFaviconPartials for each element typeBannerSpotlightGalleryItemsImage galleryShort CodesSite TitleSite SubtitleSite LogoSocial IconsFavicon and Social iconsFontAwesome Icon SupportSASS and AutoMinify SupportGoogle Analytics SupportDemo https://caressofsteel.github.io/demos/hugo/hugo-story/Using 1. Install Hugo. Install Hugo (Extended Version)This theme uses Hugo Pipes to compile SCSS & Sass so you’ll have to use the extended version of Hugo. See the official Hugo Quick Start Guide for more information.2. Create a new example site called mystory. hugo new site mystory
3. Clone the Git repository. cd mystory
git clone https://github.com/caressofsteel/hugo-story.git themes/hugo-story
Hint: See a note for non-Git users here.4. Copy contents of themes/hugo-story/exampleSite/ to mystory root folder with overwrite. cp -r themes/hugo-story/exampleSite/* ./
Hint: This sets up the mystory example website with a copy of the theme assets, layouts, data, and configuration files in the site’s root folder and outside of the theme folder.Hint: Theme assets in the site root, if present, take precedence over files in the theme folder.5. Start Hugo Server. hugo server
6. Open Hugo Server in your browser. http://localhost:1313/
Here you’ll see the site running on the local Hugo server. You can now edit the theme and Hugo will rebuild the site when changes are detected.7. Further steps. Edit the contents of YML files in the data folder.Altering banner.yml will change the top block on the site. See more details here.Create a custom site layout.Edit the index.html within mystory/layouts/ to customize the layout the site.By manipulating the the {{ partial ... }} tags within this file you can create a custom layout for the site. See more details here.Continue exploring Hugo and the template!Credits This theme was created using the Story template by HTML5 UP.License This Hugo theme is licensed under the Creative Commons Attribution 3.0 License.See AlsoAcademicHugo Blox - TailwindHugo InitioOsprey DelightPaige",NA
Will Faught,137,2023-11-13,Apache-2.0,"Blog, Bootstrap, Contact, Dark, Dark Mode, Gallery, Hero, Landing, Light, Minimal, Multilingual, Personal, Portfolio, Responsive",Paige,"Powerful, pliable pixel perfection. An advanced Hugo theme.",https://github.com/willfaught/paige,https://willfaught.com/paige,"PaigePowerful, pliable pixel perfection. An advanced Hugo theme. Try it out.Paige is designed to put your content front and center,
avoiding the typical clutter.
The look is seamless and smooth, scalable and readable, portable and efficient.
The layout is minimal and responsive,
using verticality and white space to focus and delineate parts of the page.
The implementation is flexible and extensible.
It’s a versatile canvas that serves most web needs.Features AccessibilityAnalyticsAtom feedAuthorsBlogBootstrapCategoriesCode shortcodeCommentsCustomizableDark color schemeEmail shortcodeFacebook sharingFigure shortcodeGallery shortcodeHeader linksIcon shortcodeImage pixel densitiesImage shortcodeImage size breakpointsImage thumbnailsLanding pageLanguagesLight color schemeMath typesettingMenuMinimal designQuote shortcodeRSS feedResponsiveRight-to-left languagesSEOSafari and Firefox Reader View supportSearchSectionsSeriesSingle columnSocial linksTable of contentsTagsTwitter sharingValidated with PageSpeed and ValidatorVimeo shortcodeYouTube shortcodeCommunity Get started by starring
and watching the project.If you find a problem or have a suggestion,
please share it by creating an issue.If you have a fix or improvement,
please share it by creating a pull request.If you make a customization or alteration,
please share it by posting code or screenshots.If you deploy a site,
please share it by posting a link.Setup Install Hugo (the extended version, and at least 0.111.3).For Homebrew on Mac:$ brew install hugo
For Chocolatey on Windows:$ choco install hugo-extended
For Snap on Linux:$ sudo snap install hugo
Install Dart Sass.For Homebrew on Mac:$ brew install sass/sass/sass
For Chocolatey on Windows:$ choco install sass
For Snap on Linux:$ sudo snap install dart-sass
Create a site:$ hugo new site yourproject
Create a post:$ cd yourproject
$ hugo new yourpost.md
Install the Paige module:$ cd yourproject
$ hugo mod init github.com/youraccount/yourproject
$ hugo mod get github.com/willfaught/paige@latest
Import the Paige module:$ cd yourproject
$ cat >>hugo.toml <<EOF
[[module.imports]]
path = ""github.com/willfaught/paige""
EOF
Build and run the site:$ cd yourproject
$ hugo server -D
Update the Paige module:$ cd yourproject
$ hugo mod get github.com/willfaught/paige@latest
See Hugo’s installation, getting started, and module guides for more information.See the minimal look, narrow look, and menu navigation only sections for common customizations.Configure Parameters There is a single parameter object with sensible defaults that can be overridden in site or page parameters:[paige]
color = ""#0d6efd"" # Bootstrap primary color and theme color for Safari and Windows
external_link_new_tab = false # Open external links in new tabs
math = false # Enable math typesetting
style = """" # CSS included at the end of the stylesheet, before style-last.css

[paige.analytics]
disable = false # Disable all analytics

[paige.analytics.beam] # See https://beamanalytics.io
token = """"

[paige.analytics.chartbeat] # See https://chartbeat.com
account_id = """"
domain = """"

[paige.analytics.clarity] # See https://clarity.microsoft.com
account_id = """"

[paige.analytics.clicky] # See https://clicky.com
account_id = """"

[paige.analytics.counter] # See https://counter.dev
account_id = """"
utc_offset = """"

[paige.analytics.fathom] # See https://usefathom.com
account_id = """"

[paige.analytics.finteza] # See https://finteza.com
account_id = """"
script_url = """"

[paige.analytics.hotjar] # See https://hotjar.com
account_id = """"

[paige.analytics.matomo] # See https://matomo.org
account_id = """"
host_url = """"

[paige.analytics.mixpanel] # See https://mixpanel.com
token = """"

[paige.analytics.pirsch] # See https://pirsch.io
identification_code = """"

[paige.analytics.plausible] # See https://plausible.io
account_id = """"

[paige.analytics.woopra] # See https://woopra.com
domain = """"

[paige.analytics.yandex] # See https://metrica.yandex.com
account_id = """"

[paige.comments]
disable = false # Disable all comments

[paige.comments.cactus] # See https://cactus.chat
account_id = """"

[paige.comments.commento] # See https://commento.io
script_url = """"

[paige.comments.graphcomment] # See https://graphcomment.com
account_id = """"

[paige.comments.hyvor] # See https://hyvor.com
account_id = """"

[paige.comments.intensedebate] # See https://intensedebate.com
account_id = """"

[paige.comments.isso] # See https://isso-comments.de
script_url = """"

[paige.comments.muut] # See https://muut.com
account_id = """"

[paige.comments.remark42] # See https://remark42.com
host_url = """"
site_id = """"

[paige.comments.replybox] # See https://getreplybox.com
account_id = """"

[paige.comments.utterances] # See https://utteranc.es
github_repo = """"

[paige.date]
format = "":date_long"" # Hugo date format

[paige.feed]
hide_page = false
link_to_page = false # Link to the page instead of the front matter link, if present
page_link = ""⏎"" # If a front matter link is present, and link_to_page is false, then link to the page with this text

[paige.feed.atom]
authors = []
# Example is:
# [[paige.feed.atom.authors]]
# email = ""will.faught@example.com""
# name = ""Will Faught
# url = ""https://github.com/willfaught/paige""
icon = """" # Example is ""/icon.webp""
logo = """" # Example is ""/logo.webp""

[paige.feed.rss]
managing_editor = """" # Example is ""will.faught@example.com (Will Faught)""
web_master = """" # Example is ""will.faught@example.com (Will Faught)""

[paige.file_link] # A link placed at the top of the footer for pages with files
content = """" # Example is ""Edit this page""
disable = false
url = """"
# The formatting verb ""%s"" is replaced with the path to the file relative to the content directory.
# Example is ""https://github.com/willfaught/paige/edit/master/content/%s"".

[paige.git]
commit_url = """" # Example is ""https://github.com/willfaught/paige/commit/%s""

[paige.menu]
style = ""pills"" # Must be ""links"", ""pills"", ""tabs"", or ""underline""

[paige.search]
hide_page = false
The assigned values shown are the default values.The parameter object is accessed in site parameters as [params.paige], and in page parameters as [paige].Optional site parameters:[authors.will-faught]
default = false # Credit this author in pages that have no authors parameter
email = ""will.faught@example.com""
name = ""Will Faught""
url = ""https://willfaught.com/paige""
Optional page parameters:authors = [""will-faught""] # Credit the corresponding author in the site parameters
link = ""https://youtu.be/dQw4w9WgXcQ"" # The reference for an anchor around the title

[[authors]]
author = ""will-faught"" # Credit the corresponding author in the site parameters

[[authors]] # Credit this author
email = ""will.faught@example.com""
name = ""Will Faught""
url = ""https://willfaught.com/paige""

[paige]
alert = ""Alert!"" # Markdown displayed before the page body (defaults to primary alert type)
pin = true # Display this page before the rest

[paige.alert]
message = ""Alert!"" # Markdown displayed before the page body
type = ""primary"" # Bootstrap alert type
Menu An optional menu can be configured.
The active menu item has a URL that is a prefix of the path of the current page.
A menu item with the URL / only matches a / path.Example configuration in yoursite/hugo.toml:[languages.en]
weight = 10

[[languages.en.menu.main]]
identifier = ""home""
name = ""Home""
url = ""/""
weight = 10

[[languages.en.menu.main]]
identifier = ""blog""
name = ""Blog""
url = ""/blog/""
weight = 20

[[languages.en.menu.main]]
identifier = ""life""
name = ""Life""
parent = ""blog""
url = ""/blog/life/""
weight = 10

[[languages.en.menu.main]]
identifier = ""work""
name = ""Work""
parent = ""blog""
url = ""/blog/work/""
weight = 20

[languages.en.menu.main.params.paige]
divider_below = true

[[languages.en.menu.main]]
identifier = ""interests""
name = ""Interests""
parent = ""blog""
url = ""/blog/interests/""
weight = 30

[languages.en.menu.main.params.paige]
disabled = true

[[languages.en.menu.main]]
identifier = ""tags""
name = ""Tags""
url = ""/tags/""
weight = 30

[[languages.en.menu.main]]
identifier = ""search""
name = ""Search""
url = ""/search/""
weight = 40
If you intend for the menu to be sufficient for all navigation,
see how to hide other navigation features.Layouts Cloud The paige/cloud layout provides a link cloud for sub-pages.Example configuration in yoursite/content/tags/_index.md:layout = ""paige/cloud""
Search The paige/search layout provides a search page.Example configuration in yoursite/hugo.toml:[outputs]
home = [""html"", ""json"", ""rss""]
Example configuration in yoursite/content/search.md:layout = ""paige/search""
title = ""Search""
Shortcodes Code The paige/code shortcode provides highlighted code.{{< paige/code
    lang=""""
    options="""" >}}

{{< /paige/code >}}
Inner content: Required. String. The code.Parameters:langOptional. Position 0. String. Chroma language code. Default is plaintext.optionsOptional. String. Hugo highlight options.Email The paige/email shortcode hides e-mail addresses from robots.{{< paige/email
    address="""" >}}

{{< /paige/email >}}
Inner content: Required. String. Markdown. The content.Parameters:addressRequired. Position 0. String. The e-mail address.Figure The paige/figure shortcode provides a figure.{{< paige/figure
    caption=""""
    float=""""
    height=""""
    horizontal=""""
    maxwidth=""""
    number=0
    numbered=false
    vertical=""""
    width="""" >}}

{{< /paige/figure >}}
Inner content: Required. String. Markdown. The content.Parameters:captionOptional. Position 0. String. Markdown. Descriptive text below the content.floatOptional. String. Float to one side of its container. Must be start or end.heightOptional. String. CSS value. Total height.horizontalOptional. String. Horizontal alignment. Must be start, center, or end. Default is center.maxwidthOptional. String. CSS value. Maximum total width.numberOptional. Integer or string. Figure number. Displayed with the caption.numberedOptional. Boolean. Number the figure automatically. Displayed with the caption.verticalOptional. String. Vertical alignment. Must be start, center, or end. Default is center.widthOptional. String. CSS value. Total width.Gallery The paige/gallery shortcode provides an arrangement of images.{{< paige/gallery
    align=""""
    breakpoints=false
    class=""""
    densities=""""
    fetchpriority=""""
    height=""""
    images=""""
    justify=""""
    linked=""""
    loading=""""
    maxheight=""""
    maxwidth=""""
    process=""""
    style=""""
    type=""""
    width="""" >}}

{{< /paige/gallery >}}
Inner content: Optional. String. HTML. The images.Parameters:alignOptional. String. Cross axis alignment. Must be baseline, center, end, start, or stretch.breakpointsOptional. Boolean. Whether to generate copies of the image sized to each Bootstrap breakpoint. Must not use with densities.classOptional. String. Image class. Merged with implementation.densitiesOptional. String. Float numbers suffixed with an ""x"", delimited by spaces. The pixel densities of the image to generate. There must be at least two. The largest density matches the original image. Examples are 1x 2x, 1x 1.5x 2x 2.5x 3x, and 0.5x 1.33x 6x 10x. Must not use with breakpoints.fetchpriorityOptional. String. Must be high or low.heightOptional. String. CSS value. Image height.imagesOptional. Position 0. String. Page, site, or remote images glob. Default is all image page resources.justifyOptional. String. Main axis space distribution. Must be around, between, center, end, evenly, or start.linkedOptional. String. Hugo image processing methods and options, mixed together, for the linked image. If no method is specified, resize is used. If no image dimensions are specified, the originals are used. If it is unprocessed, it is unprocessed. If it is default, the default options are used.loadingOptional. String. Must be eager (default) or lazy.maxheightOptional. String. CSS value. Maximum image height.maxwidthOptional. String. CSS value. Maximum image width.processOptional. String. Hugo image processing methods and options, mixed together, for the displayed image. If no method is specified, resize is used. If no image dimensions are specified, the originals are used. If it is default, the default options are used.styleOptional. String. CSS. Image style. Merged with implementation.typeOptional. String. Type of layout. Must be grid or rows (default).widthOptional. String. CSS value. Image width.Icon The paige/icon shortcode provides a web font icon.{{< paige/icon
    class=""""
    title=""""
    url="""" >}}
Inner content: None.Parameters:classRequired. Position 0. String. <i> class. Example is bi bi-github.titleOptional. String. The screen reader description and anchor title. Example is GitHub.urlOptional. String. URL. Example is https://github.com/willfaught/paige. E-mails in URLs with a mailto: scheme are protected from web crawlers.Image The paige/image shortcode provides an image.{{< paige/image
    alt=""""
    breakpoints=false
    class=""""
    densities=""""
    fetchpriority=""""
    height=""""
    link=""""
    linked=""""
    loading=""""
    maxheight=""""
    maxwidth=""""
    process=""""
    sizes=""""
    src=""""
    srcset=""""
    style=""""
    title=""""
    width="""" >}}
Inner content: None.Parameters:altOptional. String. Plain text. Image alt.breakpointsOptional. Boolean. Whether to generate copies of the image sized to each Bootstrap breakpoint. Must not use with densities, sizes, or srcset.classOptional. String. Class attribute value.densitiesOptional. String. Float numbers suffixed with an ""x"", delimited by spaces. The pixel densities of the image to generate. There must be at least two. The largest density matches the original image. Examples are 1x 2x, 1x 1.5x 2x 2.5x 3x, and 0.5x 1.33x 6x 10x. Must not use with breakpoints, sizes, or srcset.fetchpriorityOptional. String. Must be high or low.heightOptional. String. CSS value. Image height.linkOptional. String. URL. Image link. Must not use with linked.linkedOptional. String. Hugo image processing methods and options, mixed together, for the linked image. If no method is specified, resize is used. If no image dimensions are specified, the originals are used. If it is unprocessed, it is unprocessed. If it is default, the default options are used. Must not use with link.loadingOptional. String. Must be eager (default) or lazy.maxheightOptional. String. CSS value. Image maximum height.maxwidthOptional. String. CSS value. Image maximum width.processOptional. String. Hugo image processing methods and options, mixed together, for the displayed image. If no method is specified, resize is used. If no image dimensions are specified, the originals are used. If it is default, the default options are used.sizesOptional. String. Image sizes. Must not be set with breakpoints or densities.srcRequired. Position 0. String. URL. Image source.srcsetOptional. String. Image srcset. Must not be set with breakpoints or densities.styleOptional. String. CSS. Image style. Merged with implementation.titleOptional. String. Plain text. Image title.widthOptional. String. CSS value. Image width.Quote The paige/quote shortcode provides a quotation.{{< paige/quote
    cite="""" >}}

{{< /paige/quote >}}
Inner content: Required. String. Markdown. The quotation.Parameters:citeOptional. String. Plain text. Citation.Vimeo The paige/vimeo shortcode provides a Vimeo video.{{< paige/vimeo
    autopause=false
    autoplay=false
    background=false
    byline=false
    color=""""
    controls=false
    description=""""
    dnt=false
    fullscreen=false
    height=""""
    keyboard=false
    loop=false
    maxheight=""""
    maxwidth=""""
    muted=false
    pip=false
    playsinline=false
    portrait=false
    quality=""""
    speed=false
    texttrack=false
    time=""""
    title=false
    transparent=false
    video=""""
    width="""" >}}
Inner content: None.Parameters:autopauseOptional. Boolean. Enable playing more than one Vimeo video on the same page. Default is true.autoplayOptional. Boolean. Autoplay the video. Default is false.backgroundOptional. Boolean. Autoplay the video. Hide the controls. Loop the video. Mute the video. Default is false.bylineOptional. Boolean. Show the author. Default is configured per video.colorOptional. String. Hex code. Control color. Default is 00adef.controlsOptional. Boolean. Show the controls. Default is true.descriptionOptional. String. Plain text. Screen reader content. Default is Vimeo video.dntOptional. Boolean. Do not track session data. Default is false.fullscreenOptional. Boolean. Enable full screen. Default is true.heightOptional. String. CSS value. Video height.keyboardOptional. Boolean. Enable keyboard input. Default is true.loopOptional. Boolean. Loop the video. Default is false.maxheightOptional. String. CSS value. Video maximum height.maxwidthOptional. String. CSS value. Video maximum width.mutedOptional. Boolean. Mute the video. Default is false.pipOptional. Boolean. Show the picture-in-picture control. Default is false.playsinlineOptional. Boolean. Play inline instead of full screen on mobile devices. Default is true.portraitOptional. Boolean. Show the author's profile image. Default is configured per video.qualityOptional. String. The resolution. Must be auto, 240p, 360p, 540p, 720p, 1080p, 2k, or 4k. Default is auto.speedOptional. Boolean. Show the speed controls. Default is false.texttrackOptional. String. Language code and optionally a locale code (e.g. en, en-US). Use the corresponding subtitles. Default is false.timeOptional. String. Duration (e.g. 0m, 1m2s). Start time. Default is 0m.titleOptional. Boolean. Show the title. Default is configured per video.transparentOptional. Boolean. Use a transparent background instead of a black one. Default is true.videoOptional. Position 0. String. Video ID.widthOptional. String. CSS value. Video width.See Vimeo documentation for more detail.YouTube The paige/youtube shortcode provides a YouTube video.{{< paige/youtube
    autoplay=false
    controls=false
    description=""""
    end=0
    fullscreen=false
    height=""""
    list=""""
    loop=false
    maxheight=""""
    maxwidth=""""
    mute=false
    start=0
    video=""""
    width="""" >}}
Inner content: None.Parameters:autoplayOptional. Boolean. Automatically play the video.controlsOptional. Boolean. Show video controls. Default is true.descriptionOptional. String. Plain text. Screen reader content. Default is YouTube video.endOptional. Integer. Elapsed seconds. Stop the video here.fullscreenOptional. Boolean. Enable full screen. Default is true.heightOptional. String. CSS value. Video height.listOptional. String. Playlist ID.loopOptional. Boolean. Loop the video.maxheightOptional. String. CSS value. Video maximum height.maxwidthOptional. String. CSS value. Video maximum width.muteOptional. Boolean. Mute the video.startOptional. Integer. Elapsed seconds. Start the video here.videoOptional. Position 0. String. Video ID.widthOptional. String. CSS value. Video width.Customize Include If this file existsIt is included atyoursite/layouts/partials/paige/body-first.htmlThe beginning of the body tagyoursite/layouts/partials/paige/body-last.htmlThe end of the body tagyoursite/layouts/partials/paige/footer-first.htmlThe beginning of the footer tagyoursite/layouts/partials/paige/footer-last.htmlThe end of the footer tagyoursite/layouts/partials/paige/head-first.htmlThe beginning of the head tagyoursite/layouts/partials/paige/head-last.htmlThe end of the head tagyoursite/layouts/partials/paige/header-first.htmlThe beginning of the header tagyoursite/layouts/partials/paige/header-last.htmlThe end of the header tagyoursite/layouts/partials/paige/main-first.htmlThe beginning of the main tagyoursite/layouts/partials/paige/main-last.htmlThe end of the main tagyoursite/layouts/partials/paige/style-first.cssThe beginning of the style tagyoursite/layouts/partials/paige/style-last.cssThe end of the style tagOverride Most code is in partials that are included by the layouts.
Elements can be added, changed, or removed easily by overriding the corresponding layout or partial.For example, the layouts list.html, single.html, taxonomy.html, and term.html
include the partial paige/article.html.
paige/article.html includes the partials paige/metadata.html, paige/toc.html, and paige/content.html.
To change the page title for those layouts, change paige/metadata.html.
To change the page title for single.html,
replace the use of paige/article.html in single.html with the use of
paige/metadata.html, paige/toc.html, and paige/content.html,
then replace that use of paige/metadata.html with your own design.Extend Use CSS selectors to extend the default styling.Page identifiers:#paige-articleThe article.#paige-authorsThe authors.#paige-breadcrumbsThe breadcrumbs.#paige-collectionsThe collections.#paige-collections-headerThe collections header.#paige-commentsThe comments.#paige-contentThe content.#paige-copyrightThe copyright.#paige-creditThe credit.#paige-dateThe date.#paige-descriptionThe description.#paige-file-linkThe file link. See the paige.link configuration.#paige-footerThe footer.#paige-headerThe header.#paige-keywordsThe keywords.#paige-mainThe main.#paige-menuThe menu.#paige-metadataThe metadata.#paige-pagesThe pages.#paige-pages-headerThe pages header.#paige-paginationThe sub-page pagination links.#paige-reading-timeThe reading time.#paige-rootThe outermost element in the body.#paige-sectionsThe sections.#paige-sections-headerThe sections header.#paige-seriesThe series.#paige-titleThe title.#paige-tocThe table of contents.Page and sub-page classes:.paige-authorsThe authors..paige-dateThe date..paige-date-headerThe date headers..paige-descriptionThe description..paige-keywordA keyword..paige-keywordsThe keywords..paige-metadataThe metadata..paige-pageA page..paige-reading-timeThe reading time..paige-seriesThe series..paige-summaryThe summary..paige-titleThe title.Kind classes:.paige-homeThe container element of pages with kind ""home""..paige-listThe container element of pages with kind ""section""..paige-singleThe container element of pages with kind ""page""..paige-taxonomyThe container element of pages with kind ""taxonomy""..paige-termThe container element of pages with kind ""term"".Status classes:.paige-draftThe container element of draft pages..paige-expiredThe container element of expired pages..paige-futureThe container element of future pages..paige-modifiedThe container element of modified pages..paige-publishedThe container element of published pages..paige-unpublishedThe container element of unpublished pages.Shortcode classes:.paige-codeThe container element of paige/code shortcodes..paige-figureThe container element of paige/figure shortcodes..paige-galleryThe container element of paige/gallery shortcodes..paige-iconThe container element of paige/icon shortcodes..paige-imageThe container element of paige/image shortcodes..paige-quoteThe container element of paige/quote shortcodes..paige-vimeoThe container element of paige/vimeo shortcodes..paige-youtubeThe container element of paige/youtube shortcodes.If you hide #paige-credit, please credit this project in a post to help others find it.Minimal look By default, everything is shown.
If you want a more minimal look,
try the following in yoursite/layouts/partials/paige/style-first.css:#paige-authors,
#paige-collections,
#paige-credit,
#paige-keywords,
#paige-reading-time,
#paige-series,
#paige-toc,
.paige-authors,
.paige-date,
.paige-keywords,
.paige-reading-time,
.paige-series,
.paige-summary {
    display: none;
}
Narrow look By default, the content expands to fill the whole window.
This can result in very long lines, depending on the window width.
To use the recommended line length of 66 characters,
try the following in yoursite/hugo.toml:[params.paige]
style = ""#paige-content { width: 66ch; }""
Menu navigation only If you configure a menu, and intend for it to be sufficient for all navigation,
you should hide the breadcrumbs on every page,
and hide the collection, section, and page lists on the home page if you use the default home page layout.To hide the breadcrumbs on every page,
try the following in yoursite/layouts/partials/paige/style-first.css:#paige-breadcrumbs {
    display: none;
}
To hide the collection, section, and page lists on the home page,
try the following in yoursite/content/_index.md:[paige]
style = """"""
#paige-collections,
#paige-sections,
#paige-pages {
    display: none;
}
""""""
Implementation The HTML author is the page authors.The HTML description is the page description.The HTML keywords is a union of the page keywords, tags, and categories.The HTML title is the page title, followed by a middle dot, followed by the site title.
If one is missing, the other is used without the middle dot.
For the home page, the title is the page title, or the site title otherwise.The HTML body has a header, a body, and a footer.
The header has the menu.
The body has the page article.
The footer has the copyright notice and the theme link.
The article has the page metadata, table of contents, and content.
The metadata has the page title, description, terms, authors, date, and reading time.The copyright notice, title, and description can be Markdown. Markup is stripped for HTML and RSS titles.The page title is displayed in an h1 tag, so page content headers must start with h2.The page date is the publish date.The following NPM packages are used:bootstrapbootstrap-iconskatexHugo names, HTML names, CSS names, and JavaScript names that begin with “paige” capitalized in any way,
optionally prefixed with one or more underscores, are reserved.Credits Photos by LantyPhoto by Sergey PesterevProject Created by Will Faught.
Released under the Apache License 2.0.
Hosted at https://github.com/willfaught/paige.See AlsoAcademicHugoplateLightbiPikoHB Starter Theme Template",NA
Inês Almeida,152,2023-08-21,MIT,Minimal,Almeida CV,Theme to build a customizeable printable CV with minor web responsiveness.,https://github.com/ineesalmeida/almeida-cv,NA,"Almeida CV ThemeTheme to build a customizeable printable HTML/CSS CV.FeaturesOnline CV with minor responsivenessPrintable as A4 PDFHTML5 + CSS3Customizeable colorsPrint your PDF CV When printing the page in the browser, you’ll get a formatted A4 page that can be used as your PDF resume.
If your page holds more than 1 A4 page, the content will be divided into the given amount of pages.For better formatting, you can set the number of pages in the config.toml file.If badges and other elements with background don’t render correctly, remember to toggle the “Background Graphics” option in the print dialog.UsageInstall Hugo (extended) To use almeida-cv theme you need to install Hugo Extended by following https://gohugo.io/getting-started/installing/.Create your personal website hugo new site <your website's name>
cd <your website's name>
git init
git submodule add https://github.com/ineesalmeida/almeida-cv.git themes/almeida-cv
Replace the files in your site root’s directory with the ones in themes/almeida-cv/exampleSite.Start Hugo in development mode hugo server -D
Your site is now available at http://localhost:1313/.Customization Your professional data should be added in the data/content.yaml file. You can change the theme colors and number of
pages in the config.toml file. For working example, see exampleSite directory.For more advanced customization, in your site root directory create assets/scss/_custom.scss file where you can
overwrite theme SCSS as per your liking.Building To generate static files of your website, execute the following:hugo --minify
within the root of your project.ContributingPost bugs and contributions to the issue tracker. Or make a pull request.See AlsoAcademicAce documentationAdam & EveAdritian Free Hugo ThemeAgnes",NA
Static Mania,151,2023-09-12,MIT,"Agency, Blog, Company, Minimal, Portfolio, Responsive",Roxo Hugo,"Roxo Hugo is a digital agency Hugo theme for creative agencies, freelancers, graphic designers, photographers. Can be used for any kind of corporate websites who provides digital services with many expertise such as Design, Digital Products, Development, Campaign & Content, Employer Branding, Animation & Motion Graphics ,Packaging & Product Design, Retail & Spacial, Print & Editorial Design, Concept/Text, Information Design etc.",https://github.com/StaticMania/roxo-hugo,NA,"Roxo HugoRoxo Hugo is a digital agency Hugo theme for creative agencies, freelancers, graphic designers, photographers. Can be used for any kind of corporate websites who provides digital services with many expertise such as Design, Digital Products, Development, Campaign & Content, Employer Branding, Animation & Motion Graphics ,Packaging & Product Design, Retail & Spacial, Print & Editorial Design, Concept/Text, Information Design etc. Roxo Hugo’s contact form is supported fabform.Table of Contents Live DemoInstallationMain FeaturesSupportLicensingHireLive Demo Checkout the live demo hereInstallation Add the repository into your Hugo Project repository as a submodule, git submodule add git@github.com:StaticMania/roxo-hugo.git themes/roxo-hugo.Copy the data, content, static, resources & config.toml files from the exampleSite directory and paste it on you Hugo Project repository/directory. From the site home directory:cp -a themes/roxo-hugo/exampleSite/* .Build your site with hugo serve and see the result at http://localhost:1313/.Features Responsive Ready.Powered by Bootstrap 4.Dedicated portfolio page.Blog Support.Well formatted code.Easy Customization.FabForm.io static website form.Crafted for Design Agency/ PortfolioSupport Have some question or facing any technical trouble feel free to Contact UsLicensing This Repository is licensed under the MIT LicenseHire Need help to build HUGO websites with your custom requirements. Feel free to contact with us. We provide custom development service for HUGO.See AlsoAcademicBeautiful HugoHugo Blox - TailwindLightbiPiko",NA
Colin Wilson,148,2023-10-01,MIT,"Bootstrap, Dark, Dark Mode, Docs, Landing, Minimal, Responsive",Lotus Docs,"A lightweight, modern documentation theme for Hugo",https://github.com/colinwilson/lotusdocs,https://lotusdocs.dev/docs/,"Lotus DocsLotus Docs is an easily updated and customisable Hugo theme for building fast, secure, and SEO-friendly documentation sites.Check out the demo site https://lotusdocs.dev/docs/ (also doubles as the documentation guide for Lotus Docs 📖)🚧 WARNING 🚧 - Lotus Docs is currently in pre-release development and thus not recommended for use in production at this time. But please do try it out 😊. Pull requests and feedback are most welcome.Features  Modern documentation layout Responsive design / Mobile support Fast, Accessible and SEO-Friendly (4 x 💯 scores on Google Lighthouse!) Secure by default Built on Bootstrap 5 Deploy on GitHub Pages, GitLab Pages, Vercel, Netlify, or Cloudflare Pages Multilingual support (i18n) Powerful Syntax Highlighting via Prism.js Dark Mode Custom fonts (via Google Fonts) Custom icons (via Google Material Symbols) Landing page template included Documentation sidebar menu (with optional icons) Table of Contents menu on each page (optional) Customisable theme accent colour Social media links (Github, Twitter, Instagram etc) Static Search plugin option (powered by FlexSearch, enabled by default) Support for DocSearch Custom shortcodes (PrismJS, Alerts, Tabs, Tables) Analytics (Google Analytics v4, Plausible Analytics) Cross-browser testing via BrowserStack Feedback widget Math equations powered by KaTeXMermaid SupportOpen GraphGetting Started Requirements Hugo Extended (minimum version: 0.117.0)gitGo (minimum version v1.20)Initialize your site as a Hugo Module The Lotus Docs theme makes use of the Hugo Bootstrap Module. For this reason, it’s necessary to initialize your site as a Hugo Module. If your site isn’t already, use the hugo mod init command to initialize your site as a Hugo module:hugo mod init github.com/<username>/<your-hugo-site-name>
Install Options The Lotus Docs theme can be installed using one of the following methods:As a Hugo Module1 (recommended)As a Git submoduleClone the theme files locallyInstall as a Hugo Module (recommended) Edit the hugo.toml configuration file to include the Lotus Docs theme and the Hugo Bootstrap module as modules:baseURL = 'http://example.org/'
languageCode = 'en-us'
title = 'My New Hugo Site'

[module]
    [[module.imports]]
        path = ""github.com/colinwilson/lotusdocs""
        disable = false
    [[module.imports]]
        path = ""github.com/gohugoio/hugo-mod-bootstrap-scss/v5""
        disable = false
Install as a Git Submodule From the root of your project run the following git commands:git init
git submodule add https://github.com/colinwilson/lotusdocs themes/lotusdocs
Edit the hugo.toml config file:baseURL = 'http://example.org/'
languageCode = 'en-us'
title = 'My New Hugo Site'

[module]
    # uncomment line below for temporary local development of module
    # or when using a 'theme' as a git submodule
    replacements = ""github.com/colinwilson/lotusdocs -> lotusdocs""
    [[module.imports]]
        path = ""github.com/colinwilson/lotusdocs""
        disable = false
    [[module.imports]]
        path = ""github.com/gohugoio/hugo-mod-bootstrap-scss/v5""
        disable = false
Install Locally There may be cases where you prefer to customize and maintain the Lotus Docs theme yourself. In such cases, use git to clone the theme into the themes/lotusdocs directory:git clone https://github.com/colinwilson/lotusdocs themes/lotusdocs
Edit the hugo.toml config file:baseURL = 'http://example.org/'
languageCode = 'en-us'
title = 'My New Hugo Site'

[module]
    # uncomment line below for temporary local development of module,
    # when using a 'theme' as a git submodule or git cloned files
    replacements = ""github.com/colinwilson/lotusdocs -> lotusdocs""
    [[module.imports]]
        path = ""github.com/colinwilson/lotusdocs""
        disable = false
    [[module.imports]]
        path = ""github.com/gohugoio/hugo-mod-bootstrap-scss/v5""
        disable = false
Create New Content Navigate to the root of your Hugo project and use the hugo new command to create a file in the content/docs directory:hugo new docs/example-page.md
This will create a markdown file named example-page.md with the following default front matter:---
title: ""Example Page""
description: """"
icon: ""article""
date: ""2023-05-22T00:27:57+01:00""
lastmod: ""2023-05-22T00:27:57+01:00""
draft: false
toc: true
weight: 999
---
Modify the above front matter options to suit your needs.Preview your site locally Now that you’ve created some sample content you can preview your new Lotus Docs site using the huge server command:hugo server -D
Navigate to localhost:1313/docs/ and you should see a card link to the Example Page created earlier:Author Colin WilsonCopyright © 2022-2023 Colin WilsonHugo Modules ↩︎See AlsoHB Starter Theme TemplatePaigeAcademicBootstrap Theme for Personal Blog and DocumentationsDoks",NA
Khusika,148,2023-09-20,MIT,"Blog, Dark, Light, Responsive",FeelIt,"A Clean, Elegant but Advanced Hugo Theme for Hugo.",https://github.com/khusika/FeelIt,https://feelit.khusika.dev/,"FeelIt Theme | Hugo 

FeelIt is a clean, elegant but advanced blog theme for Hugo.It is based on the original LoveIt Theme, LeaveIt Theme and KeepIt Theme.Since the three themes have a similar look, if you have questions about their differences,
read Why choose FeelIt so that you can choose the one that works best for you.Demo Site To see this theme in action, here is a live demo site which is rendered with FeelIt theme.Why choose FeelIt Compared to the original LoveIt theme, LeaveIt theme and the KeepIt theme. The FeelIt theme has the following modifications.Custom HeaderCustom CSS StyleA new home page, compatible with the latest version of HugoA lot of style detail adjustments, including color, font size, margins, code preview styleMore readable dark modeSome beautiful CSS animationsEasy-to-use and self-expanding table of contentsMore social links, share sites and comment systemSearch supported by Lunr.js or algoliaCopy code to clipboard with one clickExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagram syntax shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSEmbedded music player supported by APlayer and MetingJSBilibili player supportedKinds of admonitions shortcode supportedCustom style shortcodes supportedCDN for all third-party libraries supported&mldr;In short,
if you prefer the design language and freedom of the FeelIt theme,
if you want to use the extended Font Awesome icons conveniently,
if you want to embed mathematical formulas, flowcharts, music or Bilibili videos in your posts,
the FeelIt theme may be more suitable for you.I hope you will FeelIt ❤️!Features Performance and SEO Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed InsightsOptimized SEO performance with a correct SEO SCHEMA based on JSON-LDGoogle Analytics supportedFathom Analytics supportedGoatCounter Analytics supportedSearch engine verification supported (Google, Bind, Yandex and Baidu)CDN for third-party libraries supportedAutomatically converted images with Lazy Load by lazysizesAppearance and Layout Responsive layoutLight/Dark modeGlobally consistent design languagePagination supportedEasy-to-use and self-expanding table of contentsMultilanguage supported and i18n readyBeautiful CSS animationSocial and Comment Systems Gravatar supported by GravatarLocal Avatar supportedUp to 64 social links supportedUp to 28 share sites supportedDisqus comment system supported by DisqusGitalk comment system supported by GitalkValine comment system supported by ValineFacebook comments system supported by FacebookTelegram comments system supported by Telegram CommentsCommento comment system supported by CommentoUtterances comment system supported by UtterancesExtended Features Search supported by Lunr.js or algoliaTwemoji supportedAutomatically highlighting codeCopy code to clipboard with one clickImages gallery supported by lightgallery.jsExtended Markdown syntax for Font Awesome iconsExtended Markdown syntax for ruby annotationExtended Markdown syntax for fractionMathematical formula supported by KaTeXDiagrams shortcode supported by mermaidInteractive data visualization shortcode supported by EChartsMapbox shortcode supported by Mapbox GL JSMusic player shortcode supported by APlayer and MetingJSBilibili player shortcodeKinds of admonitions shortcodeCustom style shortcodeCustom script shortcodeAnimated typing supported by TypeItCookie consent banner supported by cookieconsent&mldr;Documentation Theme Documentation - Basics Theme Documentation - Content Theme Documentation - Built in Shortcodes Theme Documentation - Extended Shortcodes Basic Markdown Syntax Emoji Support Getting Started Install required packagesnpm run reinstall
Debug theme documentationnpm run start-production
Build theme documentationnpm run build
Multilingual and i18n FeelIt supports the following languages:GermanEnglishSpanishFrenchIndonesianItalianPolishBrazilian PortugueseRomanianRussianSerbianVietnameseSimplified ChineseHungarianCzechPersianContribute with a new languageLanguages CompatibilityQuestions, ideas, bugs, pull requests All feedback is welcome! Head over to the issue tracker.License FeelIt is licensed under the MIT license. Check the LICENSE file for details.Thanks to the authors of following resources included in the theme:modern-normalizeFont AwesomeSimple IconsAnimate.cssautocomplete.jsLunr.jsalgoliasearchlazysizesobject-fit-imagesTwemojilightgallery.jsclipboard.jsSharer.jsTypeItKaTeXmermaidEChartsMapbox GL JSAPlayerMetingJSGitalkValinecookieconsentAuthor Khusika and all contributorsThanks! ❤️See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
Curtis Timson,148,2022-06-25,Creative Commons,Blog,Massively,An elegant open-source and mobile-first theme,https://github.com/curtiscde/hugo-theme-massively,NA,"Hugo Theme MassivelyMassively theme ported from HTML5 UP for use with the Hugo static site generator.Demo https://hugo-theme-massively.netlify.com/Setup Configuration See the demo’s configuration as an example:https://github.com/curtiscde/hugo-theme-massively/blob/master/exampleSite/config-prod.tomlHugo Internal Templates The theme currently also supports the following “internal templates” supplied by HugoDisqusGoogle AnalyticsCover Image The cover image URL is hard-coded, therefore to replace this add an image to the following location in your Hugo application:/static/images/bg.jpg
Supported Languages EnglishDutchFrenchJapaneseSimplified ChineseSpanishCustom Front Matter disableComments - If set to true this will disable comments on the post when Disqus is enabled.Custom <head> If you wish to add custom CSS overrides, or other elements in the <head>, then this can be done by adding the following to the root of your Hugo app: layouts/partials/htmlhead.custom.html. Any content added to this file will then be injected at the end of the <head>.Development Example Site Production Deployment Production Deployment $ cd exampleSite
$ hugo --config config-prod.toml
Running Locally $ npm i
$ npm run hugo-dev
OR$ cd exampleSite
$ hugo server --themesDir ../..
Original Theme Credits Massively by HTML5 UPLicense This hugo theme is licensed under the Creative Commons Attribution 3.0 License.Read More - LICENSESee AlsoArcanaBootstrap FreelancerCalligraphyDPSGDen",NA
You-Kai Zheng,144,2023-07-23,MIT,"Blog, Dark, Light, Multilingual, Responsive",Monochrome,"Monochrome is a clean, responsive, and programmer-friendly hugo theme",https://github.com/kaiiiz/hugo-theme-monochrome,https://kaiiiz.github.io/hugo-theme-monochrome/,"MonochromeA fast, clean and responsive hugo themeDemo & Documents See kaiiiz.github.io/hugo-theme-monochromeFeatures Clean UI with small resources. Monochrome has clean UI design with ~5KB gzipped bundled CSS.Self-Contained. Monochrome doesn’t require webpack, nodejs and other dependencies to setup or edit, just hugo.Responsive layout. Adapt to different viewpoint, from desktop to mobile.Support light/dark mode. Low-light UI.Multiple layouts built-in. Monochrome now supports 6 different layouts. See Demo.Nested navbar and Multilingual mode. Make good use of hugo’s well-designed structure.Syntax Highlighting (with copy feature). Integrate both server-side solution (Chroma, hugo built-in) and client-side solution (Prism.js, for someone who need more languages supported).Site Search with real-time matches highlight. Powered by Fuse.js.SEO-friendly. Easily change your author, description, keywords, open graph, twitter card meatdata.Support mathematical notation. Powered by MathJax.Useful shortcodes. See Document.Installation See SetupConfiguration See ConfigurationAcknowledgement PrismJS/prismkrisk/Fusemathjax/MathJaxkingdido999/zoomingfeathericons/featherSee AlsoAcademicAnubisBootstrap Theme for Personal Blog and DocumentationsBootstrap-BPColor Your World",NA
Joe Hutchinson,143,2023-01-06,MIT,"Blog, Minimal, Personal, Responsive",aether,"aether is a blog theme that emphasizes motion, material, and depth as design elements to highlight the content of your site",https://github.com/josephhutch/aether,NA,"aetherAether is a Hugo theme for blogs that emphasizes motion, depth, and material as design elements. Aether presents your content in a clean interface that highlights good photography and writing.Features It’s Fast! PageSpeed scores consistently between 94-100Fully Responsive Design allowing your site to look good on any size screenSupports next-gen image format WebP with custom shortcodesAccessibility is a priority, making your site easily navigated by screen readersCategory pages that group similar articles are automatically generated and added to the menuCustomizable website background image and home button imageHighlight.js integration provides beautiful syntax highlighting for most programming languages and file formatsAdd math symbols and equations to your blog posts using LaTeXGoogle Analytics and Disqus integrationInstallation In the root directory of your Hugo Project, clone the aether repo into the themes directory.git clone https://github.com/josephhutch/aether.git themes/aether
Usage Website Configuration Customize the look and feel of aether through the config.toml file. See how to fill in the config file below.baseURL = ""https://yourwebsitenamegoeshere.com/""
languageCode = ""The language code for the language the website is written in""
title = ""The website title that is used in each page title, displayed in the browser tab and search results""
theme = ""aether""
googleAnalytics = ""Your google analytics tracking ID - optional""
disqusShortname = ""Your shortname for Disqus - optional""

[params]
  brand = ""The name that is displayed in the top left of the website - optional, title is fallback""
  description = ""The website's description""
  bgimg = ""Path, within the 'assets' folder, of the image used for the page background - optional""
  headshotimg = ""Path, within the 'assets' folder, of the image used for the home page header - optional""
  headshotalt = ""Alt text for the headshotimg - should be used with headshotimg""
  rssinmenu = whether you would like a RSS feed link to appear in the nav menu and footer (true, false) - optional
  facebook = ""URL to your Facebook account, icon link will be included in the footer - optional""
  flicker = ""URL to your Flicker account, icon link will be included in the footer - optional""
  github = ""URL to your GitHub account, icon link will be included in the footer - optional""
  instagram = ""URL to your Instagram account, icon link will be included in the footer - optional""
  linkedin = ""URL to your LinkedIn account, icon link will be included in the footer - optional""
  patreon = ""URL to your Patreon account, icon link will be included in the footer - optional""
  soundcloud = ""URL to your Soundcloud account, icon link will be included in the footer - optional""
  spotify = ""URL to your Spotify account, icon link will be included in the footer - optional""
  tumblr = ""URL to your Tumblr account, icon link will be included in the footer - optional""
  twitch = ""URL to your Twitch account, icon link will be included in the footer - optional""
  twitter = ""URL to your Twitter account, icon link will be included in the footer - optional""
  vimeo = ""URL to your Vimeo account, icon link will be included in the footer - optional""
  youtube = ""URL to your Youtube account, icon link will be included in the footer - optional""

[markup]
  [markup.highlight]
    style = ""igor""
The title parameter is used for each page title, the title that search engines display in search results. If you would like the title shown in the top left of the page to be different from the page title, use the brand parameter. For instance, the title parameter for my site is Joe Hutchinson but the brand parameter is set to joehutch.Find your language code here.The bgimg parameters give you the ability to customize the look of your site further. The homeimg should reside in the assets folder of your site. The homeimg parameter is the image used for the home button at the bottom of every page. Since the text used on the home button is white, a darker background image is preferred. If the homeimg parameter is not specified, a fallback image is used. Aether is designed to look best with a subtle tiling image for the background. If no background image is specified, the background will be a solid gray color.The default syntax highlighter style does not look great with aether so I recommend using igor. If you want to change the highlighter theme you can specify a different one from this list. To configure the syntax highlighter further, such as adding line numbers, check out this Hugo doc section.That is the only configuration required at the site level! You can now begin writing content for your site.Favicons Aether supports a large array of favicon formats. Simply add your favicons with the correct file names to the root folder of your site (put them in the static folder). The favicon file names correspond to the files generated by the real favicon generator.favicon.icofavicon-16x16.pngfavicon-32x32.pngapple-touch-icon.pngandroid-chrome-192x192.pngandroid-chrome-384x384.pngmstile-150x150.pngsafari-pinned-tab.svgbrowserconfig.xmlsite.webmanifestCreating content Make a new blog post by executing hugo new post/postnamehere/index.md in your shell. At the top of the new markdown file, is what’s called the front matter. The front matter is the page’s metadata that determines how Hugo and aether generate the HTML for your post. Below you can find what the front matter that aether uses and what each of the parameters mean.---
title: ""The title of the post""
date: date the post was generated (automatically generated)
description: ""Description of the post (displayed in the post's card)""
categories: [""Add comma separated categories here"", ""another category""]
toc: if the post should include a table of contents (true, false)
displayInMenu: if the post should show up in the navigation menu (true, false)
displayInList: if the post should be listed on the home page and category pages (true, false)
draft: if the post is a draft (true, false)
resources:
- name: featuredImage
  src: ""Filename of the post's featured image, used as the card image and the image at the top of the article""
  params:
    description: ""Description for the featured image, used as the alt text""
    attribution:
      name: ""Name of person to attribute image to""
      link: ""optional URL to persons site""
---
The displayInMenu and displayInList parameters are used to determine where your content is displayed. Posts typically have displayInMenu set to false so that the post is not a menu option, and displayInList set to true so it shows up on the homepage’s list of posts and in category page lists. An About Me page, on the other hand, would have displayInMenu set to true and displayInList set to false. That will allow the About Me page to be accessible from the menu but not displayed in the homepage’s list of posts.The categories parameter is used to group similar posts in category pages. Category pages are accessible from the menu and list all posts within the same category.The dropCap parameter is used to determine if the first letter of a post should be a dropped capital. A dropped capital letter is the large decorative letter at the beginning of a book or section.Add an interesting description and a good image to each post to get the most value from this theme.Aether takes advantage of page bundles to optimize your images for your site. This may require you to update the way your content is structured, also see content organization. Use the image and smallimg shortcodes to take full advantage of image optimization. Also, the featuredImage resource must exist in the post’s page bundle.Posts are written in markdown. You can find how to write in markdown from this markdown cheatsheet.Shortcodes Shortcodes extend markdown to make writing easier and more powerful.raw allows for adding content that Hugo will pass through unmodified. Raw is useful for adding html to your content or adding math equations in LaTeX.{{< raw >}}
\[ S(x) = \frac{1}{1+e^{-x}} \]
{{< /raw >}}
image is how you add WebP images to your posts with a fallback in case WebP is not supported. Image just needs the src and alt parameters. WebP is a next-gen image format that was created to make the web fast. To use the image shortcode simply store a WebP image with the same name in the same directory as your normal image. Keep in mind that the Hugo image processing pipeline does not support resizing webp.<!--- Will display a WebP image on supported browsers if awesome.webp exists -->
{{< image src=""awesome.jpg"" alt=""An awesome image that will use webp when possible. Much faster!"" >}}
smallimg allows you to add smaller images to your posts that aren’t stretched to be as wide as the content area. Smallimg takes the parameters src, alt, smartfloat (optional), width (optional, in pixels only), and clear (optional). The smartfloat parameter can be set to right or left, and it floats the image to the right or left on big enough screens. The clear parameter allows you to clear a previous float which is helpful if you are using multiple smallimgs close to each other.<!--- smallimg will also display a WebP image on supported browsers if smile.webp exists -->
{{< smallimg src=""smile.png"" alt=""A big beautiful smile"" smartfloat=""left"" width=""100px"" clear=""true"" >}}
Further Customization To change the heading and subtext at the top of list pages just add a _index.md file in the folder that the list page is generated from. For example, to change the heading at the top of the homepage, add an _index.md file to the content folder with the following parameters.---
title: ""This is the main heading text in big letters""
date: the date
description: ""This is the subtext below the main heading in smaller letters""
---
Overriding CSS To override CSS, you should create file project_root/assets/css/override.css and place all your CSS inside it. This file will be merged with standard CSS when the site is generated.Custom Meta Tags You can add optional Open Graph, Twitter, or other meta tags by adding project_root/layouts/partials/meta-tags.html
Refer to /exampleSite/layouts/partials for sample meta configs.Helpful Links Aether Blog Post - See aether in action and learn more about the themeHugo Documentation - Learn how to use HugoMarkdown Cheatsheet - Write in markdown like a proLatex Math Documentation - Learn math typesetting with LaTeX (powered by KaTeX)Contributing Aether is actively maintained and I welcome you to help make it better! Contributions in the way of new features, documentation improvements, bug fixes, and feature requests are appreciated. Please make an individual pull-request/issue for each suggestion. PRs are tested in GitHub Actions to ensure the html and css generated from the example site are valid.License MIT © Joe HutchinsonSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Parsia Hakimian,141,2023-02-10,MIT,NA,Hugo-Octopress,Octopress classic theme for Hugo,https://github.com/parsiya/Hugo-Octopress,NA,"Hugo-OctopressHugo-Octopress is a port of the classic Octopress theme to
Hugo.Live demo using the unmodified theme:http://hugo-octopress-test.s3-website-us-east-1.amazonaws.com/.Source: https://github.com/parsiya/Hugo-Octopress-Test.My personal website with the compact index (see below):https://parsiya.net.Source: https://github.com/parsiya/parsiya.netContents Quick startConfigurationCode highlightGoldmark vs. Blackfriday Markdown EnginesCSS overrideNavigation menuExtending Headers and FootersSidebarSidebar textSocial network iconsSidebar menuRecent postsShortcodesCode captionImage captionTable of ContentsPagesLicense pageNot Found or 404.htmlTaxonomy pagesIndividual pagesTable of contentstoc configurationUse toc in FrontmatterUse the toc ShortcodeEditor PluginsDisqusTwitter CardCompact IndexmainSectionsCustom faviconTroubleshootingHugo page summary bugEmpty Posts Link on HomepageIssues/TODOAttributionPorted byTheme licenseQuick start Add the theme to your existing site or Hugo’s quick start.
All commands are run from the root directory of your website.If using git to manage your website, add the theme as a git submodule:git submodule add https://github.com/parsiya/Hugo-Octopress themes/Hugo-Octopress
Or you can clone it:git clone https://github.com/parsiya/Hugo-Octopress themes/Hugo-Octopress
To view the theme with the example site:cd themes/Hugo-Octopress/
hugo serve -vw --source=exampleSite
And view the example website at http://localhost:1313.Example site was originally created by
https://github.com/nonumeros. I reviewed the
pull request almost two years late and had to copy/paste the
website instead of resolving merge conflicts. The example website also has a
page with the theme’s shortcodes.Configuration Hugo-Octopress can be configured by modifying the parameters in the
configuration file.
sample-config.toml and
exampleSite/config.toml are both working examples.Code highlight This theme uses the built-in Chroma highlighter with the
solarized-dark theme. See all supported styles at
https://xyproto.github.io/splash/docs/all.html.
To change the style, change it in the config file like below to one of the
supported styles.Some options to control code highlighting post version 0.60.[markup]
  [markup.tableOfContents]
    endLevel = 8
    startLevel = 1
  [markup.highlight]
    style = ""solarized-dark""
For more configuration options please see
https://gohugo.io/getting-started/configuration-markup/#highlight
and https://gohugo.io/extras/highlighting/ in Hugo’s
documentation.Goldmark vs. Blackfriday Markdown Engines Prior to version 0.60, Hugo used Blackfriday. Now it uses Goldmark by default.
See https://gohugo.io/getting-started/configuration-markup#highlight for
information about setting it up.There are trade-offs. Mainly, the hrefTargetBlank Blackfriday extension. It
was set to true to open external links in a new browser tab. Unfortunately,
Goldmark does not have this built-in. To make it happen, we need to use a render
hook. I used the one in Hugo docs athttps://gohugo.io/getting-started/configuration-markup#link-with-title-markdown-example.This works for markdown links but not linkify or image links. Linkify links are
straight URLs pasted into the document (e.g., https://example.net). A
workaround is not having links similar to this (which is not in the markdown
standard anyways) and use normal links. For example,
[example.net](https://example.net) or reference links.You can keep using Blackfriday like this:[markup]
  defaultMarkdownHandler = ""blackfriday""
  [markup.blackFriday]
    hrefTargetBlank = true
CSS override You can override the built-in CSS and add your own. Put your CSS files in the
static directory of your website. While storing them inside the
themes/Hugo-Octopress/static directory works, it’s not recommended (keep your
website and theme as separated as possible to be able to switch themes easily).
Then modify the customCSS parameter. The path should be relative to the
static folder. These CSS files will be added through the header partial
after the built-in CSS file.For example, if custom CSS files are static/css/custom.css and
static/css/custom2.css then customCSS will look like this:[params]
  customCSS = [""css/custom.css"",""css/custom2.css""]
Navigation menu Links in the navigation menu (everything other than Google search and RSS icon)
can be customized. The navigation menu is generated using the
layouts/partials/navigation.html partial.By default, navigation menu links will open in the same window. You can change
this behavior by setting the navigationNewWindow parameter to true. Links to
root (""/"") will always open in the same window. Currently, Hugo does not support
adding custom attributes to menus.Links are sorted according to weight from left to right. For example, a link
with weight of -10 will appear to the left of links with weights 0 or 10.
Links can be added to the config file:[[menu.main]]
  Name = ""Blog""
  URL = ""/""
  weight = -10

[[menu.main]]
  Name = ""The other guy from Wham!""
  URL = ""https://www.google.com/search?q=andrew+ridgeley""
  weight = -5

[[menu.main]]
  Name = ""This theme - add link""
  URL = ""https://www.github.com""

[params]
  # If set to true, navigation menu links will open in a new window with the exception of links to root (""/"")
  # If this item does not exist or is set to false, then navigation menu links will open in the same window
  navigationNewWindow = true
Search engine customization:[params]
  searchEngineURL = ""https://www.google.com/search""
Extending Headers and Footers Copy these files from theme/Hugo-Octopress/layouts/partials/ into
your-site/layouts/partials and modify them:extend_header.html: Everything will be added to the end of the head tag on
every page.extend_footer.html: Everything will be added after the footer tag on every
page.Sidebar The sidebar has four sections, from top to bottom:Sidebar header and text (optional).Social network icons (optional): Icons and links to GitHub, Mastodon, and more.Sidebar menu (optional): Links in sidebar.Recent posts: Displays last X posts (default is 5).The sidebar is generated using the partial at layouts/partials/sidebar.html.Sidebar text The sidebar text has two parts and both can be configured. Both are passed to
markdownify so you can use markdown (e.g. add links or new lines).Sidebar header appears first in an <h1> tag. It can be configured with
sidebarHeader.Sidebar text appears under the header and is in sidebarText.You can add new lines can be added with two spaces at the end of line. New
paragraphs can be added with two an empty line. when adding two new lines,
remember to remove the indentation otherwise the new line will be treated as a
codeblock.sidebarHeader = ""Sidebar Header""

sidebarText = """"""Here's a [link to google](https://www.google.com)

New paragraph

Another paragraph which has two spaces in the end to create a new line using markdown  
New line but not a new paragraph
""""""
If you want to use </br> here and not just markdown, you need to enable unsafe
rendering of HTML in Goldmark. You can do this like this.[markup]
  [markup.goldmark]
    [markup.goldmark.renderer]
      unsafe = true
Blackfriday renders the </br> tags and does not need extra configuration.Social network icons Sidebar social network icons are configured as follows:[params]
  github = ""https://github.com/parsiya/Hugo-Octopress/""
  bitbucket = """"
  gitlab = """"
  twitter = """"
  keybase = """"
  linkedin = """"
  mastodon = """"
  stackoverflow = """"
  youtube = """"
  facebook = """"
  instagram = """"
  bitcoin = """"
Icon sequence is unfortunately hardcoded. To modify, copy
your-website/themes/Hugo-Octopress/layouts/partials/social.html to
your-website/layouts/partials/social.html and modify the sequence. Use </br>
to create a new line.Code to display links (and the idea to use these icons) is from
Hyde-x.Icons are from Font Awesome and Fork Awesome. To
use icons with square dark backgrounds add -square. For example,
<i class=""fa fa-twitter-square fa-3x""></i>. Size can be from 1 to 5 use
fa-lg to make them adaptive.Sidebar menu This menu can be enabled by setting sidebarMenuEnabled to true. It has two
sections:A header that appears inside the <h1> tag on top. It can be set by
sidebarMenuHeader. This part only supports text.A set of links. They can be configured similar to the navigation menu items by
using the [[menu.sidebar]] tag. Set sidebarNewWindow to true to open
these links in a new window[[menu.sidebar]]
  Name = ""Google""
  URL = ""https://www.google.com""
  weight = 0

[[menu.sidebar]]
  Name = ""Hugo""
  URL = ""/categories/hugo/""
  weight = 1
Recent posts Last x posts can be displayed in the sidebar. This number is controlled by
sidebarRecentLimit. To hide this section you can remove sidebarRecentLimit
from the config file or set it to zero.Shortcodes Creating shortcodes in Hugo is very easy and one of the
reasons I switched to it. I recreated a few plugins from Octopress. They add
captions to code blocks and images. These shortcodes are in
layouts/shortcodes/.For all my Hugo shortcodes see
https://github.com/parsiya/Hugo-Shortcodes.Code caption This shortcode adds a caption to codeblocks. The codeblock is wrapped in a
<figure> tag and caption is added using <figcaption>. It has two parameters,
title which is the caption of the code block and lang which is the language
that is passed to the Hugo’s highlight function along with linenos=true to
enable line numbers.Usage and source (parameters are named and not positional):{{< codecaption lang=""html"" title=""Code caption shortcode"" >}}
<figure class=""code"">
  <figcaption>
    <span>{{ .Get ""title"" }}</span>
  </figcaption>
  <div class=""codewrapper"">
    {{ highlight .Inner (.Get ""lang"") ""linenos=true"" }}
  </div>
</figure>
{{< /codecaption >}}
And will look like:.If the code inside the tag overflows, a horizontal sidebar will be added to the
table. It took me a while to achieve this as the highlight function created
tables that were out of my control. The output from highlight is wrapped in
<div class=""codewrapper""> and the scroll bar will be added for the whole
div. The following in the CSS file (starting from line 2225) enables this
behavior:div.codewrapper {
    overflow-x: auto;
    overflow-y: hidden;
    background-color: #002B36;
}
Image caption This shortcode adds captions to pictures. Due to the way the original CSS file
was organized, this shortcode does not use <figure> and <figcaption>. Alt
tag is also set to title.Usage (parameters are named and not positional):{{< imgcap title=""Sample caption"" src=""/images/2016/thetheme/1.png"" >}}
Results in:<span class=""caption-wrapper"">
  <img class=""caption"" src=""/images/2016/thetheme/1.png"" title=""Sample caption"" alt=""Sample caption"">
  <span class=""caption-text"">Sample caption</span>
</span>
Table of Contents This shortcode adds table of contents to the theme. You can use it to add the
toc to anywhere in the page with {{< toc >}}.Pages This section discusses the different kind of pages that are supported by the
theme.License page License page address is baseurl/license/. Create a markdown file containing
the text for the license page under content and set its type to license in
frontmatter:---
title: ""License""
type: license
---

License text
License page template is: layouts/license/single.html.Not Found or 404.html The 404.html page has two optional parameters and both support markdown:notFoundHeader: 404 page titlenotFoundText: 404 page textIf they are not set in the config file, theme’s default page is used
(layouts/404.html).Taxonomy pages You can create taxonomy lists (e.g. categories and tags). Set
generateTaxonomyList = true to get generate them at baseURL/tags/ and
baseURL/categories. By default items are sorted by count.
sortTaxonomyAlphabetical = true changes the sort to alphabetical.[Params]
  generateTaxonomyList = true

  # Alphabetical sort
  # sortTaxonomyAlphabetical = true
To revert, remove sortTaxonomyAlphabetical or set it to false.Note: As of Hugo 0.33, indexes has been removed. If your taxonomy pages are
not rendered, please update to the latest version of Hugo. Templates are now at:/layouts/category/category.html/layouts/tag/tag.htmlIndividual pages You can create individual pages in at least two ways:Create a new content file in content/page.Create a page anywhere inside content and set the type to page in
frontmatter. E.g. type: page.The template for individual pages is at
Hugo-Octopress/layouts/page/single.html. It can be overridden by a file in the
website’s layouts/page/single.html. For more information see
Single Page Templates in Hugodocs.Table of contents There are three ways to add Table of Contents (ToC) to pages.toc configuration With Goldmark, you need to change the defaults for the table of contents
renderer in your site’s config. The defaults only render markdown headings level
2 and 3.[markup]
  [markup.tableOfContents]
    endLevel = 8
    startLevel = 1
Please see more at
https://gohugo.io/getting-started/configuration-markup/#table-of-contents.Use toc in Frontmatter This ToC is on top of the page and does not appear in the summary. You can
customize the ToC for each page or globally:Add a variable named toc to the frontmatter of the post/page and set it to true.title: ""title""
date: 2016-04-01T20:22:37-04:00
draft: false
toc: true
Enable it globally by setting tableOfContents under [Params] to true.[Params]
  tableOfContents = true
The toc variable in the frontmatter has priority. If it is set to false the
global setting is ignored for that page.Use the toc Shortcode If you want the table to appear in a different location use the shortcode. For
example, in the cheatsheet on my website it appears after
the summary.---
frontmatter
---

summary or whatever.

{{< toc >}}
Editor Plugins There are various editor plugins that create a table of contents in markdown
using markdown links. This approach is self-contained and not reliant on the
theme or the shortcode. I used the VS Code plugins
Markdown All in One.Disqus Hugo supports Disqus. Note Disqus shortname is directly in the config file (and
not under params):disqusShortname = ""whatever""
You can disable comments for individual pages by adding comments: false to
the frontmatter.Twitter Card Twitter card support can be enabled in the config file under Params:[params]
  # Twitter card config
  # Enable.
  twitterCardEnabled = true
  # Don't include the @.
  # twitterCardSite = 
  twitterCardDomain = ""parsiya.net""
  # Don't include the @.
  twitterCardAuthor = ""CryptoGangsta""
After Twitter card is enabled, you can add summary images to your posts in front
matter with twitterImage:twitterImage: 02-fuzzer-crash.png
Note: Image URL should be relative to the page, otherwise the final URL will
not be correct. In short, image URL should be part of the page bundle. In this
case, both index.md and 02-fuzzer-crash.png are in the same root directory.
If the image is in a subdirectory of page bundle, it can be added like this:twitterImage: images/02-fuzzer-crash.png
To modify this template, copy
your-website/themes/Hugo-Octopress/layouts/partials/custom_twitter_card.html
to your-website/layouts/partials/custom-twitter-card.html and make changes.Compact Index The original theme renders each post’s summary in the main page. I prefer a more
compact index and use it for my own website. You can enable it by adding this to
the config file:[params]
  # Set to true to enable compact index. Set to false or remove to go back to classic view.
  compactIndex = true
Compare the views (classic - compact) - click for full-size image: mainSections Hugo-Octopress supports using the mainSections property in
the config file to display different kinds of posts on the main page. If not
defined, mainSection will default to the section with the most number of
pages. In a vanilla Hugo-Octopress setup, it will be under post. But, you can
add your own sections in the config file:[params]
  mainSections = [""posts"", ""blogs""]
See the code in layouts/partials/classic_index.html:<div class=""blog-index"">
  {{ $paginator := where site.RegularPages ""Type"" ""in"" site.Params.mainSections | .Paginate }}
  {{ range $paginator.Pages }}
  <article>
  ...
Custom Favicon The theme uses the default Octopress favicon. You can
modify it:Add favicon to the config file under params. This path is relative to the
static directory.[params]
  favicon = ""myicon.png""
Store the file in your site’s static directory:
your-site/static/myicon.png.TroubleshootingCommon issues when dealing with the theme.Hugo page summary bug Without a summary divider `, Hugo uses the first 70 words of the post. The result is usually not pretty and contains raw HTML. Always use the summary divider ` in your posts. This does not matter if you
use the compact index because it does not use the summary.Hugo does not display render style links in the page summary if the link is also
not before the summary divider. You can read more
here.Reference style links look like this:This is a link to [Example][example-link].

[example-link]: https://www.example.com
There are two workarounds:Do not use reference style links in summary. Use normal links like [Example](https://www.example.com).Put the reference links before the summary divider.Empty Posts Link on Homepage After rebuilding the blog with Hugo 0.57, you may see a single Posts link in
the classic index. Update to Hugo 0.57.2+ (there is an issue with 0.57.1)
and it should work.For more information please see:https://github.com/gohugoio/hugoThemes/issues/682This should not be an issue anymore because the theme’s minimum version of Hugo
has been bumped.Issues/TODO If you discover any issues/bugs or want new features please use the GitHub issue
tracker. Please keep in my mind that development has not been my day job for
quite a while and I may be slow in fixing things (don’t be surprised if I ask
you about details).The css is a mess. The CSS file is taken directly from the classic Octopress
theme. I found it easier to just modify the templates to generate HTML code
similar to Octopress’ output and use the existing CSS file. It’s bulky (around
53KBs and 2300 lines) and it probably has code for elements that are never used
(also duplicates).Attribution Octopress is created by Brandon Mathis.
Octopress source can be found on
https://github.com/imathis/octopress.Some code was taken from the Hyde-x Hugo theme by Andrei Mihu.Sidebar icons are from Font Awesome by Dave Gandy and Fork Awesome.Special thanks to contributors and everyone who has
helped with issues.Ported by Ported by Parsia.Theme license Open sourced under the MIT license.",NA
Michael Schnerring,118,2023-11-25,MIT,"Blog, Dark Mode, Minimal, Personal, Responsive",Gruvbox,"A retro-looking Hugo theme inspired by the gruvbox. The pastel colors are high contrast, easily distinguishable, pleasing to the eye, and feature light and dark color palettes.",https://github.com/schnerring/hugo-theme-gruvbox,https://hugo-theme-gruvbox.schnerring.net,"Gruvbox Hugo ThemeA retro-looking Hugo theme inspired by
gruvbox to build secure, fast, and
SEO-ready websites.This theme is easily customizable with features that any coder loves.I took a lot of inspiration from the
Hello Friend and
Doks Hugo themes.DEMO https://hugo-theme-gruvbox.schnerring.net/ DISCLAIMER: Project Status This theme is still in early development.
Check out the issues
to see what’s still missing.Highlights Code highlighting with PrismFull-text search with Flex SearchDisplay your CV using structured JSON Resume dataIntegrated image optimization with next-gen image formats and lazy loadingDark mode that also changes Prism themesDynamic color choices from the Gruvbox color paletteExtensible to make it suit your needsResponsive, mobile-first designBeautiful SVG icons with Tabler IconsA big thank you to the authors of the software that make this theme possible! ❤️Quickstart The theme requires extended Hugo because it uses Sass/SCSS. You’ll also have
to install Go because the theme uses Go modules.git clone the repository and cd into itRun npm ci to install the dependenciesRun hugo serverInstall The Theme Create a new Hugo website:hugo new site example.com
cd example.com/
Initialize the site as Hugo modulehugo mod init example.com
Add the following to the config.toml file:[markup]
  # (Optional) To be able to use all Prism plugins, the theme enables unsafe
  # rendering by default
  #_merge = ""deep""

[build]
  # The theme enables writeStats which is required for PurgeCSS
  _merge = ""deep""

# This hopefully will be simpler in the future.
# See: https://github.com/schnerring/hugo-theme-gruvbox/issues/16
[module]
  [[module.imports]]
    path = ""github.com/schnerring/hugo-theme-gruvbox""
  [[module.imports]]
    path = ""github.com/schnerring/hugo-mod-json-resume""
    [[module.imports.mounts]]
      source = ""data""
      target = ""data""
    [[module.imports.mounts]]
      source = ""layouts""
      target = ""layouts""
    [[module.imports.mounts]]
      source = ""assets/css/json-resume.css""
      target = ""assets/css/critical/44-json-resume.css""
  [[module.mounts]]
    # required by hugo-mod-json-resume
    source = ""node_modules/simple-icons/icons""
    target = ""assets/simple-icons""
  [[module.mounts]]
    source = ""assets""
    target = ""assets""
  [[module.mounts]]
    source = ""layouts""
    target = ""layouts""
  [[module.mounts]]
    source = ""static""
    target = ""static""
  [[module.mounts]]
    source = ""node_modules/prismjs""
    target = ""assets/prismjs""
  [[module.mounts]]
    source = ""node_modules/prism-themes/themes""
    target = ""assets/prism-themes""
  [[module.mounts]]
    source = ""node_modules/typeface-fira-code/files""
    target = ""static/fonts""
  [[module.mounts]]
    source = ""node_modules/typeface-roboto-slab/files""
    target = ""static/fonts""
  [[module.mounts]]
    source = ""node_modules/@tabler/icons/icons""
    target = ""assets/tabler-icons""
Install the theme:hugo mod get
Initialize the NPM package.json and install the dependencies:hugo mod npm pack
npm install
Run Hugo:hugo server
Update The Theme Update the Hugo modules:hugo mod get -u
hugo mod tidy
Update the NPM dependencies:hugo mod npm pack
npm install
Colors Two options are available to configure the theme colors:defaultTheme: dark or light (defaults to light)Default theme color for when a user visits the site for the first time. OS or
user preference override this setting.
See this comment for more details.themeColor: gray, red, green, yellow, blue, purple, aqua, or
orange (defaults to blue)Theme color for things such as links, headings etc.themeContrast: soft, medium, or hard (defaults to medium)Theme background colorPrism The theme allows customization of Prism via
config.toml parameters:[params]
  [params.prism]
    languages = [
      ""markup"",
      ""css"",
      ""clike"",
      ""javascript""
    ]
    plugins = [
      ""normalize-whitespace"",
      ""toolbar"",
      ""copy-to-clipboard""
    ]
In my opinion, this is the coolest feature of the theme. Other Hugo themes
usually include a pre-configured version of Prism, which complicates updates and
change tracking, and clutters the theme’s code base with third-party JavaScript.The Prism theme is not configurable because of the integration with the dark
mode functionality. Toggling between color modes swaps the Prism theme between
gruvbox-dark
and
gruvbox-light
from github.com/PrismJS/prism-themes.Check out the
Prism showcase on the Demo site for examplesExplore Prism Features After running npm install, explore Prism features like this:# Languages
ls node_modules/prismjs/components

# Plugins
ls node_modules/prismjs/plugins
Image Optimization Images are optimized by default without requiring
shortcodes. A
custom render hook
does all the heavy lifting (see
render-image.html).By default, the theme creates resized versions of images ranging from 300 to 700
pixels wide in increments of 100 pixels.If the image format is not WebP, the image
is converted. The original file format will serve as a fallback for browsers
that don’t support the WebP format.Note that only images that are part of the
page bundle are processed.
If served from the static/ directory or external sources, the image will be
displayed but not be processed.Additionally, all images are lazily loaded to save the bandwidth of your users.Configuration The default quality is 75%. See the
official Image Processing Config Hugo docs.
Change it by adding the following to the config.toml file:[imaging]
  quality = 75
Change the resize behavior:[params]
  [params.imageResize]
    min = 300
    max = 700
    increment = 100
Captions ![Alt text](image-url.jpg ""Caption with **markdown support**"")
The demo site features examples you can look at.
I also use the theme for my website.Blog Post Covers Add blog post covers by defining them in the
front matter of your
posts:---
cover:
  src: my-blog-cover.jpg
  alt: A beautiful image containing interesting things
  caption: [Source](https://www.flickr.com/)
---
Embed Video Files Use the
video shortcode
to embed your video files from
Page Resources.With a page bundle looking like the following:embed-videos/
|-- index.md
|-- my-video.jpg
|-- my-video.mp4
|-- my-video.webm
You can embed my-video like this:{{< video src=""my-video"" autoplay=""true"" controls=""false"" loop=""true"" >}}
The shortcode looks for media files matching the filename my-video*. For each
video MIME type file, a <source> element is added. The first image MIME
type file is used as poster (thumbnail). It will render the following HTML:<video
  autoplay
  loop
  poster=""/blog/embed-videos/my-video.jpg""
  width=""100%""
  playsinline
>
  <source src=""/blog/embed-videos/my-video.mp4"" type=""video/mp4"" />
  <source src=""/blog/embed-videos/my-video.webm"" type=""video/webm"" />
</video>
You can set a Markdown caption, wrapping the <video> inside a <figure>.Additionally, the shortcode allows you to set the following attributes:AttributeDefaultautoplayfalsecontrolstrueheightloopfalsemutedtruepreloadwidth100%playsinlinetrueLearn more about the <video> attributes here.SEO Due to the
European Copyright Directive
it is required to opt into displaying
snippets
in search engine results.By default, every page (except 404) includes the
index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1
robots meta value, opting into all snippet features.You can override the robots meta value in the front matter of your pages:---
robots: noindex, nofollow
---
Social Share Links Configure social share links in the Hugo config like this:[params]
  [[params.socialShare]]
    iconSuite = ""simple-icon""
    iconName = ""facebook""
    formatString = ""https://www.facebook.com/sharer.php?u={url}""
  [[params.socialShare]]
    iconSuite = ""simple-icon""
    iconName = ""reddit""
    formatString = ""https://reddit.com/submit?url={url}&title={title}""
  [[params.socialShare]]
    iconSuite = ""tabler-icon""
    iconName = ""mail""
    formatString = ""mailto:?subject={title}&body={url}""
Use the iconSuite option to specify the icon suite used for the social share
link: simple-icon or tabler-icon. Select an icon from the suite with the
iconName option.The formatString supports the following placeholders:{url} is replaced with the .Permalink of the post{title} is replaced with the .Title of the postTo enable social share links, set the following in the post’s front matter:---
socialShare: true
---
Check out the
Social Share URLs repo on GitHub
for more format strings.Favicon The favicons and corresponding markup
were generated with the free
RealFaviconGenerator.net.The easiest way to replace the default favicons is to generate them using
RealFaviconGenerator.net and put the generated files into the static/
directory.Extensibility You can extend the theme by overriding the following partials in the
layouts/partials directory which by default are empty placeholder files:head/head_start.htmlCustom HTML at the start of <head>head/head_end.htmlCustom HTML at the end of <head>footer_end.htmlCustom HTML at the end of <body>comments.htmlComments at the end of postsExample: Adding KaTeX Support to the Theme KaTeX is a fast, easy-to-use JavaScript library for TeX
math rendering on the web. Let’s add it to the theme via npm. First, add the
following to the package.hugo.json file:""dependencies"": {
  ""katex"": ""^0.16.8""
}
Then run hugo mod npm pack to sync the package.hugo.json dependencies with
package.json. Run npm install after. We then need to mount the
node_modules/katex folder into Hugo’s virtual filesystem by adding the
following to the config/_default/module.toml file:[[mounts]]
  source = ""node_modules/katex""
  target = ""assets/katex""
We can then add the following to layouts/partials/head/head_end.html:{{ if .Params.katex }}
  {{ $katexCSS := resources.Get ""katex/dist/katex.min.css"" }}
  <link
    rel=""stylesheet""
    href=""{{ $katexCSS }}""
    {{ if hugo.IsProduction }}
      integrity=""{{ $katexCSS.Data.Integrity }}""
    {{ end }}
    crossorigin=""anonymous""
  />

  {{ $katexJS := resources.Get ""katex/dist/katex.min.js"" }}
  <script
    defer
    src=""{{ $katexJS.RelPermalink }}""
    {{ if hugo.IsProduction }}
      integrity=""{{ $katexJS.Data.Integrity }}""
    {{ end }}
    crossorigin=""anonymous""
  ></script>

  {{ $autoRender := resources.Get ""katex/dist/contrib/auto-render.min.js"" }}
  <script
    defer
    src=""{{ $autoRender.RelPermalink }}""
    {{ if hugo.IsProduction }}
      integrity=""{{ $autoRender.Data.Integrity }}""
    {{ end }}
    crossorigin=""anonymous""
    onload=""renderMathInElement(document.body);""
  ></script>
{{ end }}
The only thing left is enabling KaTeX in the front matter of our content:---
title: ""Hello World""
description: ""The first post of this blog""
date: 2021-03-14T15:00:21+01:00
draft: false
katex: true
---

I'm a .NET developer by trade, so let's say hello in C#!
Configure the Tag Cloud The theme comes with a tag cloud partial. It is included in the sidebar, but it
is disabled by default. If you wish to configure it, add the following to the
[params] section in the config.toml file:[params.tagCloud]
  enable = true
  minFontSizeRem = 0.8
  maxFontSizeRem = 2.0
Remove the Sidebar If you want to get rid of the sidebar, add an empty data/en.json file with the
following content:{
  ""$schema"": ""https://raw.githubusercontent.com/jsonresume/resume-schema/v1.0.0/schema.json"",
  ""basics"": {},
  ""work"": [],
  ""volunteer"": [],
  ""education"": [],
  ""awards"": [],
  ""certificates"": [],
  ""publications"": [],
  ""skills"": [],
  ""languages"": [],
  ""interests"": [],
  ""references"": [],
  ""projects"": [],
  ""meta"": {
    ""canonical"": ""https://raw.githubusercontent.com/jsonresume/resume-schema/master/resume.json"",
    ""version"": ""v1.0.0"",
    ""lastModified"": ""2017-12-24T15:53:00""
  }
}
Extend CSS The theme uses PostCSS with following plugins:postcss-importpostcss-urlpostcss-nestingpostcss-custom-mediaAdditionally the following plugins are used if building the site with
hugo -e production:postcss-preset-envcssnano for minification@fullhuman/postcss-purgecssInside the assets/css two folders exist, critical and non-critical. Files
inside critical are concatenated during build time and inlined into the
<head> element. The styles target mostly
above the fold content.
Try to keep inline CSS to a minimum because it can’t be cached and will be
inlined into every single page. Files inside non-critical are concatenated
into a single file and included as <style>. Most of the styles are in there.Files are concatenated in lexicographic order of their file names. File names
start with two digits and a hyphen: NN-. The order of files might differ
between Linux and Windows, so using this convention improves cross-platform
compatibility.
You might know this approach if you’re familiar with Xorg.You can add new CSS files to the PostCSS pipeline like this:critical/50-foo.cssnon-critical/05-bar.cssnon-critical/99-last.cssSee AlsoBlowfishCompostHolyHugoplateLightbi",NA
Luke Orth,111,2023-11-27,GPL-3.0 License,"Blog, Dark, Light, Minimal, Personal",Poison,"A pragmatic Hugo theme for bloggers. Based on the classic ""Hyde"" design by mdo.",https://github.com/lukeorth/poison,https://poison.lukeorth.com,"PoisonDEMO - https://poison.lukeorth.com/ Poison is a clean, professional Hugo theme designed to captivate your readers.It’s also tiny and privacy conscious with no external dependencies. No JavaScript frameworks, icon packs, or Google fonts. No ads or trackers polluting your console window. We kept things simple. A little vanilla JavaScript, a dash of CSS, and the power of Hugo.All the static assets for the site (JS files, CSS, and fonts) are located within the theme’s /assets/ directory. That way you know exactly what’s going onto your site.Check out our demo site’s analytics here to gauge community interest in the theme.Contents PoisonDEMO - https://poison.lukeorth.com/ContentsFeaturesLight & dark modeTable of contentsCommentsAnalyticsEmail newslettersSeriesKaTeXTabsMermaid diagramsPlantUML diagramsInstallationHow to ConfigureThe sidebar menuThe front pageExample configCustom CSSSuggestions / ContributionsAuthorPorted ByLicenseFeatures In addition to the standard Built-in templates and shortcodes that come with Hugo, Poison offers some unique features of its own.Light and dark mode Give readers the choice to read in light or dark mode. The user’s preference is stored in local storage. Light mode is the default for first time visitors, but you can change this in your config file.Table of contents Provide a floating table of contents for readers with large enough screens (i.e. screen-width > 1600 pixels).If you prefer not to display a table of contents, you can disable them site-wide in your config.toml file.[params]
    hideToc: true
Alternatively, you can choose to disable the table of contents on a per-post basis by putting the flag in the frontmatter of an individual post.---
title: ""Example to demonstrate how to hide the table of contents on a single post""
date: 2023-07-10
draft: false
hideToc: true
tags: [""Hugo""]
---
Comments Facilitate discourse by allowing users to comment on your posts. Poison currently supports two different commenting engines for this purpose – Disqus and Remark42.Note: Enabling comments will add external dependencies.Disqus Demo SiteRemark42 Demo SiteDisqus is free and easy to use. Checkout the Hugo docs to get started. Once you’ve created a Disqus account, you can activate it in the Poison theme by adding a single line to your config.toml file.disqusShortname = 'yourDisqusShortname'
This is a great option for people that don’t want to bother with self-hosting their own commenting engine; however, it has some drawbacks. Because Disqus provides this service for free, they recoup any financial loss by injecting third-party ad trackers onto your website. These trackers help to collect and sell information about your users, while also negatively affecting your site’s speed.Even still, Disqus may be the best solution depending on your situation. The above paragraph is only meant to highlight its trade-offs and not meant to discourage its use entirely.Remark42 is a lightweight, open source commenting engine that doesn’t spy on your users. The downside is that you must host it yourself. Checkout the Remark42 documentation to get started. I also found this blog post helpful when setting it up on my site.Once everything is set up, you can activate it in the Poison theme by including the following in the [params] section of your config.toml file.[params]
    remark42 = true
    remark42_host = ""https://yourhost.com""
    remark42_site_id = ""your_site_id""
Analytics Gain insights on your users. Poison currently supports Plausible which is available via a paid service or by self-hosting. Take a look at the Poison demo site’sNote: Enabling analytics will add external dependencies.Check out our demo site’s Plausible analytics here! Once you’ve established your Plausible instance, you can activate it by adding three lines to your config.toml file.[params]
    plausible = true
    plausible_domain = ""myblog.com""
    plausible_script = ""https://plausible.myblog.com/js/script.js""
This will insert the necessary code in the <head> on each page and will allow your Plausible instance to collect a limited set of data on your users.For reference, the configuration above would add the following code to each page. Adjust according to your specific environment.<script defer data-domain=""myblog.com"" src=""https://plausible.myblog.com/js/script.js""></script>Email newsletters Allow users to subscribe to your blog newsletters via email.
Poison currently supports Listmonk which is available via self-hosting.
Listmonk is a standalone, self-hosted, newsletter and mailing list manager.
The downside is that you must host it yourself.
Checkout the Listmonk documentation to get started.Once you’ve established your Listmonk instance, activate it by adding these lines to your config.toml file.[params]
    listmonk = true
    listmonk_host = ""https://listmonk.your_domain.tld""
    listmonk_subscription_list_uiid = ""YOUR_NEWSLETTERS_LIST_UIID""
    listmonk_subscription_form_text = ""Subscribe to my newsletters""       # default: Subscribe to my newsletters
    listmonk_subscription_success_message = ""Thanks for subscribing""      # default: Thanks for subscribing
    listmonk_subscription_error_message = ""Something went wrong""          # default: Sorry, something went wrong. Please, try again
This will insert a form at the bottom of each post’s content.
The user will be subscribed to the newsletter specified in the listmonk_subscription_list_uiid parameter.Series Sensibly link and display content into “series” (i.e. Tutorial One, Tutorial Two, etc.).This is done with a custom taxonomy, so just add series to the frontmatter on the content you’d like to group together.---
title: ""Example to demonstrate how to use series""
date: 2022-10-04
draft: false
series: ""How to use poison""
tags: [""Hugo""]
---
KaTeX Make your mathematical notations pop.For notations that should appear on their own line, use the block quotes $$ ... $$$$ 5 \times 5 = 25 $$For notations that should appear on the same line, use the inline quotes $ ... $Note: Enabling KaTeX will add external dependencies.Tabs Some content is just better viewed in tabs. Luckily we have a shortcode for that.Here’s the code for the tabs shown above&mldr;{{</* tabs tabTotal=""2"" */>}}

{{%/* tab tabName=""First Tab"" */%}}
This is markdown content.
{{%/* /tab */%}}

{{</* tab tabName=""Second Tab"" */>}}
{{</* highlight text */>}}
This is a code block.
{{</* /highlight */>}}
{{</* /tab */>}}

{{</* /tabs */>}}
Mermaid diagrams You can embed rendered Mermaid diagrams.Note: Enabling Mermaid diagrams will add external dependencies.For an example of how to do this, please visit the Poison demo site.PlantUML diagrams You can embed rendered PlantUML diagrams.Note: Enabling PlantUML diagrams will add external dependencies.For an example of how to do this, please visit the Poison demo site;Installation First, clone this repository into your themes directory:git clone https://github.com/lukeorth/poison.git themes/poison --depth=1
Next, specify poison as the default theme in your config.toml file by adding the following line:theme = ""poison""
Lastly, if there are any future updates to this repository that you wish to include in your local copy, these can be retrieved by running:cd themes/poison

git pull
For more information on how to get started with Hugo and themes, read the official quick start guide.How to Configure After successfully installing Poison, the last step is to configure it.The sidebar menu Any items you want displayed in your sidebar menu must satisfy two requirements. They must:Have a corresponding markdown file in your /content/ directory.Be declared in your config.toml file (example below).There are two types of menu items:Single Page – The About menu item (to the left) is a good example of this. It displays a direct link to an individual page. For arbitrary single pages, the page content must be located at content/<foo>/_index.md and the front matter of _index.md must contain layout: single.List – The Posts menu item is a good example of this. It displays a directory and dynamically lists the contents (i.e. pages) contained by date. List items have two optional configurations: a subheading (like the Recent subheading that appears on the menu to the left), and a maximum number of items to display.The sidebar menu items are configured with a dictionary value in your config.toml file. I’ve included an example below. Additionally, there is a placeholder for this in the config.toml file shown in the next section.Important: You must have a markdown file present at the path specified in order for your menu item to be displayed.menu = [
        # Dict keys:
            # Name:         The name to display on the menu.
            # URL:          The directory relative to the content directory.
            # HasChildren:  If the directory's files should be listed.  Default is true.
            # Limit:        If the files should be listed, how many should be shown.

        # SINGLE PAGE
        # Note that you must put your markdown file 
        # inside of a directory with the same name.

        # Example:
        # ... /content/about/about.md
        {Name = ""About"", URL = ""/about/"", HasChildren = false},
        
        # ... /content/foo/_index.md
        # {Name = ""Foo"", URL = ""/foo/"", HasChildren = false},

        # LIST
        # This example has a subheading of ""Recent""
        # and will display up to 5 items.

        # Example:
        # ... /content/posts/introducing-poison.md
        {Name = ""Posts"", URL = ""/posts/"", Pre = ""Recent"", HasChildren = true, Limit = 5},

        # Example of a list without a subheading or limit.
        {Name = ""Projects"", URL = ""/projects/""},
    ]
The front page When visiting the base url for the site, i.e. your.domain.com/, a paginated feed of your recently added content is displayed in reverse chronological order. By default, only content in the “posts” page bundle is displayed. You can configure a list of page bundle names to be included on this page by adding the front_page_content parameter to your config.toml file.[params]
  front_page_content = [""posts"", ""projects""]
Example config I recommend starting by copying/pasting the following code into your config.toml file. Once you see how it looks, play with the settings as needed.NOTE: To display an image in your sidebar, you’ll need to uncomment the remote_brand_image and set a image URL or the brand_image path below and have it point to an image file in your project. The path is relative to the static directory. If you don’t have an image, just leave both lines commented out.baseURL = ""/""
languageCode = ""en-us""
theme = ""poison""
paginate = 10
pluralizelisttitles = false   # removes the automatically appended ""s"" on sidebar entries

# NOTE: If using Disqus as commenting engine, uncomment and configure this line
# disqusShortname = ""yourDisqusShortname""

[params]
    brand = ""Poison""                      # name of your site - appears in the sidebar
    # remote_brand_image = 'https://github.com/USERNAME.png' # path to a remote file
    # brand_image = ""/images/test.jpg""    # path to the image shown in the sidebar
    description = ""Update this description..."" # Used as default meta description if not specified in front matter
    dark_mode = true                      # optional - defaults to false
    # favicon = ""favicon.png""             # path to favicon (defaults to favicon.png)

    front_page_content = [""posts""] # Equivalent to the default value, add page bundle names to include them on the front page.

    # MENU PLACEHOLDER
    # Menu dict keys:
        # Name:         The name to display on the menu.
        # URL:          The directory relative to the content directory.
        # HasChildren:  If the directory's files should be listed.  Default is true.
        # Limit:        If the files should be listed, how many should be shown.
    menu = [
        {Name = ""About"", URL = ""/about/"", HasChildren = false},
        {Name = ""Posts"", URL = ""/posts/"", Pre = ""Recent"", HasChildren = true, Limit = 5},
    ]

    # Links to your socials.  Comment or delete any you don't need/use. 
    discord_url = ""https://discord.com""
    email_url = ""mailto://user@domain""
    facebook_url = ""https://facebook.com""
    flickr_url = ""https://flickr.com""
    github_url = ""https://github.com""
    gitlab_url = ""https://gitlab.com""
    instagram_url = ""https://instagram.com""
    linkedin_url = ""https://linkedin.com""
    mastodon_url = ""https://mastodon.social""
    matrix_url = ""https://matrix.org""
    telegram_url = ""https://telegram.org""
    tryhackme_url = ""https://tryhackme.com""
    twitter_url = ""https://twitter.com""
    xmpp_url = ""https://xmpp.org""
    youtube_url = ""https://youtube.com""

    # NOTE: If you don't want to use RSS, comment or delete the following lines
    # Adds an RSS icon to the end of the socials which links to {{ .Site.BaseURL }}/index.xml
    rss_icon = true
    # Which section the RSS icon links to, defaults to all content. See https://gohugo.io/templates/rss/#section-rss
    rss_section = ""posts""

    # Hex colors for your sidebar.
    moon_sun_background_color = ""#515151""   # default is #515151
    moon_sun_color = ""#FFF""                 # default is #FFF
    sidebar_a_color = ""#FFF""                # default is #FFF
    sidebar_bg_color = ""#202020""            # default is #202020
    sidebar_h1_color = ""#FFF""               # default is #FFF
    sidebar_img_border_color = ""#515151""    # default is #515151
    sidebar_p_color = ""#909090""             # default is #909090
    sidebar_socials_color = ""#FFF""          # default is #FFF

    # Hex colors for your content in light mode.
    code_color = ""#000""                     # default is #000
    code_background_color = ""#E5E5E5""       # default is #E5E5E5
    code_block_color = ""#FFF""               # default is #FFF
    code_block_background_color = ""#272822"" # default is #272822
    content_bg_color = ""#FAF9F6""            # default is #FAF9F6
    date_color = ""#515151""                  # default is #515151
    link_color = ""#268BD2""                  # default is #268BD2
    list_color = ""#5A5A5A""                  # default is #5A5A5A
    post_title_color = ""#303030""            # default is #303030
    table_border_color = ""#E5E5E5""          # default is #E5E5E5
    table_stripe_color = ""#F9F9F9""          # default is #F9F9F9
    text_color = ""#222""                     # default is #222

    # Hex colors for your content in dark mode
    code_color_dark = ""#FFF""                        # default is #FFF
    code_background_color_dark = ""#515151""          # default is #515151
    code_block_color_dark = ""#FFF""                  # default is #FFF
    code_block_background_color_dark = ""#272822""    # default is #272822
    content_bg_color_dark = ""#121212""               # default is #121212
    date_color_dark = ""#9A9A9A""                     # default is #9A9A9A
    link_color_dark = ""#268BD2""                     # default is #268BD2
    list_color_dark = ""#9D9D9D""                     # default is #9D9D9D
    post_title_color_dark = ""#DBE2E9""               # default is #DBE2E9
    table_border_color_dark = ""#515151""             # default is #515151
    table_stripe_color_dark = ""#202020""             # default is #202020
    text_color_dark = ""#EEE""                        # default is #EEE

    # NOTE: If using Remark42 as commenting engine, uncomment and configure these lines
    # remark42 = true
    # remark42_host = ""https://yourhost.com""
    # remark42_site_id = ""your_site_id""

    # NOTE: The following three params are optional and are used to create meta tags + enhance SEO.
    # og_image = """"                       # path to social icon - front matter: image takes precedent, then og_image, then brand_url
                                          # this is also used in the schema output as well. Image is resized to max 1200x630
                                          # For this to work though og_image and brand_url must be a path inside the assets directory
                                          # e.g. /assets/images/site/og-image.png becomes images/site/og-image.png
    # publisher_icon = """"                 # path to publisher icon - defaults to favicon, used in schema

[taxonomies]
    series = 'series'
    tags = 'tags'
Custom CSS You can override any setting in Poison’s static CSS files by adding your own
/assets/css/custom.css file. For example, if you want to override the title font and
font size, you could add this:.sidebar-about h1 {
  font-size: 1.4em;
  font-family: ""Monaco"", monospace;
}
Suggestions / Contributions Please feel free to add suggestions for new features by opening a new issue in GitHub.A big shout out and thank you to these top contributors:Darius Makovsky (traveltissues)Pierre Bourdon (delroth)Karl Austin (KarlAustin)Diogo Almeida (Diogo-Almeida3)Ayden Holmes (eyegog)Author Mark Ottohttps://github.com/mdohttps://twitter.com/mdoPorted By Luke Orthhttps://github.com/lukeorthLicense Open sourced under the GNU General Public License v3.0.See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
Vimux,110,2023-11-28,MIT,"Blog, Dark, Responsive",Binario,Responsive card-based & code-light Hugo theme,https://github.com/Vimux/Binario,https://binario.netlify.app/,"BinarioBinario is a responsive card-based & code-light Hugo theme.DemoFeatures:ResponsiveCard-based list layoutColor themesInternal Hugo templates (Open Graph, Schema, Twitter Cards, Google Analytics, Disqus comments)Table of contentsRelated contentMathJaxTable of Contents InstallationOption A. Git cloneOption B. Git submoduleOption C. Download ZIP and manual installConfigurationConfig.toml exampleFront Matter exampleConfiguration optionsColumnsCustom CSSCustom JSEntry MetaRelated ContentShare ButtonsFeatured ImageBreadcrumbFooter Social IconsWeb App ManifestContributingLicenseInstallation First of all, you will need to install Hugo and
create a new site. Also, you have git
installed on your machine and you are familiar with basic git usage. After that, you ready to install Binario.There are three different ways you can install Binario. Choose one of the installation methods listed below and
follow the instructions.A. Git cloneB. Git submoduleC. Download ZIP and manual installFor more information read the “Install and Use Themes”.Option A. Git clone In your Hugo site directory, run:git clone https://github.com/vimux/binario themes/binario
Next, edit your config.toml configuration file and add parameter:theme = ""binario""
Option B. Git submodule In your Hugo site directory, run:git submodule add https://github.com/vimux/binario themes/binario
Next, edit your config.toml configuration file and add parameter:theme = ""binario""
You can read the GitHub documentation for submodules or those
found on Git’s website for more informationOption C. Download ZIP and manual install Download ZIP and extract to the themes/binario within your
Hugo website.Next, edit your config.toml configuration file and add parameter:theme = ""binario""
You can run your site in Hugo server mode:hugo server
Now you can go to localhost:1313 webpage and the Binario theme should be visible.After you make sure that Binario works, you may start customizing the theme if it’s needed. You can change
number of columns, activate footer social icons, share buttons and
much more.Configuration Hugo uses the config.toml, config.yaml, or config.json (if found in the site root) as the default site config
file. Here is Binario configuration example in TOML with all available theme-specific config params:Config.toml example baseurl = ""/""
title = ""Binario""
languageCode = ""en-us""
paginate = ""10"" # Number of elements per page in pagination
theme = ""binario""
disqusShortname = """" # Enable comments by entering your Disqus shortname
googleAnalytics = """" # Enable Google Analytics by entering your tracking id

[Author] # Used in authorbox
  name = ""John Doe""
  bio = ""John Doe's true identity is unknown. Maybe he is a successful blogger or writer.""
  avatar = ""img/avatar.png""

[Params]
  description = ""Responsive card-based & code-light Hugo theme"" # Site Description. Used in meta description
  copyright = ""Binario"" # Copyright holder, otherwise will use .Site.Title
  opengraph = true # Enable OpenGraph if true
  schema = true # Enable Schema
  twitter_cards = true # Enable Twitter Cards if true
  columns = 2 # Set the number of cards columns. Possible values: 1, 2, 3
  mainSections = [""post""] # Set main page sections
  dateFormat = ""January 02, 2006"" # Change the format of dates
  colorTheme = """" # dark-green, dark-blue, dark-red, dark-violet
  customCSS = [""css/custom.css""] # Include custom CSS files
  customJS = [""js/custom.js""] # Include custom JS files
  mainMenuAlignment = ""right"" # Align main menu (desktop version) to the right side
  authorbox = true # Show authorbox at bottom of single pages if true
  comments = true # Enable comments for all site pages
  related = true # Enable Related content for single pages
  relatedMax = 5 # Set the maximum number of elements that can be displayed in related block. Optional
  mathjax = true # Enable MathJax for all site pages
  mathjaxPath = ""https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js"" # Specify MathJax path. Optional
  mathjaxConfig = ""TeX-AMS-MML_HTMLorMML"" # Specify MathJax config. Optional
  hideNoPostsWarning = false # Don't show no posts empty state warning in main page, if true

[Params.Entry]
  meta = [""date"", ""categories"", ""tags""] # Enable meta fields in given order
  toc = true # Enable Table of Contents
  tocOpen = true # Open Table of Contents block. Optional

[Params.Featured]
  previewOnly = false # Show only preview featured image

[Params.Breadcrumb]
  enable = true # Enable breadcrumb block globally
  homeText = ""Binario"" # Home node text

[Params.Social]
  email = ""example@example.com""
  facebook = ""username""
  twitter = ""username""
  telegram = ""username""
  instagram = ""username""
  pinterest = ""username""
  vk = ""username""
  linkedin = ""username""
  github = ""username""
  gitlab = ""username""
  stackoverflow = ""numberid""
  mastodon = ""https://some.instance/@username""
  medium = ""username""

[Params.Share] # Entry Share block
  facebook = true
  twitter = true
  reddit = true
  telegram = true
  linkedin = true
  vk = true
  pocket = true
  pinterest = true

# Web App Manifest settings
# https://www.w3.org/TR/appmanifest/
# https://developers.google.com/web/fundamentals/web-app-manifest/
[Params.Manifest]
  name = ""Binario""
  shortName = ""Binario""
  display = ""browser""
  startUrl = ""/""
  backgroundColor = ""#2a2a2a""
  themeColor = ""#1b1b1b""
  description = ""Responsive card-based & code-light Hugo theme""
  orientation = ""portrait""
  scope = ""/""

[outputFormats]
  [outputFormats.MANIFEST]
    mediaType = ""application/json""
    baseName = ""manifest""
    isPlainText = true
    notAlternative = true

[outputs]
  home = [""HTML"", ""RSS"", ""MANIFEST""]
For more information about Hugo configuration files and all common configuration settings, please read
“Configure Hugo” from Hugo official documentation.Front Matter example Hugo supports three formats for front matter: yaml, toml and json. Here is Front Matter example in YAML:---
# Common-Defined params
title: ""Example article title""
date: ""2017-08-21""
lastmod: ""2018-12-21""
description: ""Example article description""
categories:
  - ""Category 1""
  - ""Category 2""
tags:
  - ""Tag""
  - ""Another tag""
menu: main # Add page to a menu. Options: main, footer

# Theme-Defined params
comments: true # Enable/disable Disqus comments for specific page
authorbox: true # Enable/disable Authorbox for specific page
toc: true # Enable/disable Table of Contents for specific page
tocOpen: true # Open Table of Contents block for specific page
mathjax: true # Enable/disable MathJax for specific page
related: true # Enable/disable Related content for specific page
meta:
  - date
  - categories
  - tags
featured:
  url: image.jpg # relative path of the image
  alt: A scale model of the Eiffel tower # alternate text for the image
  caption: Eiffel tower model # image caption
  credit: Unknown author # image credit
  previewOnly: false # show only preview image (true/false)
---
For more information about front matter variables and formats read
“Hugo Front Matter” from Hugo official documentation.Configuration options Binario includes some customizable configuration options that may be useful.Columns By default, Binario works with two columns card layout (if it possible by screen size) for list pages, but you can also
use one or three columns layout. Change Params.columnsto preferable value (from 1 to 3). You can also change this
option for specific list pages in frontmatter params.Custom CSS If you want to include custom CSS files, you need to assign an array of references in site config file
(config.toml by default) like following:[Params]
  customCSS = [""css/custom.css""]
Of course, you can reference as many CSS files as you want. Their paths need to be relative to the static folder of
your Hugo site:[Params]
  customCSS = [""css/custom.css"", ""css/another.css""]
All custom CSS files will be added in the head section of a baseof.html right after the built-in CSS file.Custom JS You can add custom JavaScript files by assigning an array of references in site config file (config.toml by default)
like following:[Params]
  customJS = [""js/custom.js""]
And of course, just like with custom CSS, you can reference as many JS files as you want. Their paths need to be
relative to the static folder of your Hugo site:[Params]
  customJS = [""js/custom.js"", ""js/another.js""]
All custom JS files will be added before closing body tag of a baseof.html file.Entry Meta Entry metadata are relevant information about your entry such as published date, last modified date, category, etc. You
may activate meta fields with meta parameter under the [Params.Entry] config section:[Params.Entry]
  meta = [""date"", ""categories"", ""tags""]
Related Content Binario uses default Related Content Hugo feature to provide “See Also”-like section. You can activate “Related Content”
section with .Site.Params.related parameter.More information available at Hugo Related ContentShare Buttons To display share buttons, set up [Params.Share] specific parameters in your site config file.Available share buttons: Facebook, Twitter, Reddit, Telegram, LinkedIn, VK, Pocket, PinterestFeatured Image There are two main different ways to add a featured image for a page.Option 1. Put featured.* or thumbnail.* image file in the
page bundle.Option 2. Put any image in the page bundle & specify featured param in the page’s front matter.You may put any image in the page bundle and specify featured param in the page’s front matter:featured: image.jpg
Or you can add some additional params like alt, caption, credit and previewOnly:featured:
  url: image.jpg
  alt: A scale model of the Eiffel tower standing on a map
  caption: Eiffel tower model
  credit: Unknown author
  previewOnly: false
Note: caption and credit appear only on single pages, not summaries.Breadcrumb Breadcrumb navigation is a hierarchical navigation menu presented as a trail of links. The main purpose of breadcrumb is
to help users navigate in the site hierarchy.For enabling breadcrumb partial globally (for all single and list pages), use enable param under the
[Params.Breadcrumb] section of your config.toml file:[Params.Breadcrumb]
  enable = true
The global .Site.Params.Breadcrumb.enable param can be overridden for specific pages with breadcrumb front matter
param:breadcrumb: false
Footer Social Icons With Binario, you have the option to display social icons in the footer. To display them, set up [Params.Social]
specific parameters in your site config file.Available social services: Email, Facebook, Twitter, Telegram, Instagram, Pinterest, VK, LinkedIn, GitHub, GitLab,
Stack Overflow, Mastodon, MediumWeb App Manifest Web App Manifest is a simple json file with basic
site info like name, description, icons, etc. This file tells the browser about your web application and how it should
behave when “installed” (as PWA) on the users mobile device or desktop.To activate Web App Manifest, define MANIFEST as custom output format and include this for home Kind attribute in
your site config file. Here’s how to make it.First of all, you should define MANIFEST custom output format [config.toml]:[outputFormats]
  [outputFormats.MANIFEST]
    mediaType = ""application/json""
    baseName = ""manifest""
    isPlainText = true
    notAlternative = true
Then, include MANIFEST output format for home Kind attribute [config.toml]:[outputs]
  home = [""HTML"", ""RSS"", ""MANIFEST""]
After that, Web App Manifest file will be generated. Still, it’s better to specify [Params.Manifest] params to make
sure that everything works as expected.Web App Manifest Property.Site.Params.Manifest KeyDefault ValueTypenamename.Site.Titlerequiredshort_nameshortName.Site.Titlerequireddisplaydisplaybrowserrequiredstart_urlstartUrl/requiredbackground_colorbackgroundColor#2a2a2arecommendedtheme_colorthemeColor#1b1b1brecommendeddescriptiondescriptionrecommendedorientationorientationrecommendedscopescoperecommendedicons*required* You can’t customize manifest icons through config params, only replacing icons/192.png and icons/512.png files.To verify that your manifest file is configured properly and works well, run Hugo server and open
Chrome DevTools (Press F12 in Chrome) → Application → ManifestIf you use Apache as a web server, you may have difficulty accessing files in the icons folder within your root dir.
Check Issue #4 for more information.Contributing Have a bug? Please open a new issue.Pull requests are very welcome too, but please make sure they match the existing
contributing guide.License Binario is licensed under the MIT License.Social media icons based on SuperTinyIcons [MIT]CSS Reset based on Bootstrap Reboot
[MIT]See AlsoAcademicAnatoleAnubisAstatineAutoPhugo",NA
Matúš Námešný,128,2023-06-16,MIT,"Blog, Minimal, Multilingual",Nix,Simple theme for Hugo,https://github.com/LordMathis/hugo-theme-nix,NA,"NixNix is a simple, minimal theme for HugoUsage Clone the repository to your hugo theme directorymkdir themes
cd themes
git clone https://github.com/LordMathis/hugo-theme-nix
Configuration Add these parameters to your config.toml:[params]
  Name = ""your_name""
  HeaderUsername = ""username""
  HeaderHostname = ""hostname""
  About = ""info_about_you""
  ProfilePicture = ""profile_picture_url""
HeaderUsername and HeaderHostname will be displayed in navbar on left side in the format: HeaderUsername@HeaderHostname ~ $.Optionaly you can add any of these social networks to the [params] section.  BitbucketID = ""your_bitbucket_id""
  CodepenID = ""your_codepen""
  CvURL = ""your_cv_url""
  Email = ""your_email""
  FacebookID = ""your_facebook""
  GithubID = ""your_github""
  GitlabId = ""your_gitlab""
  # Uses keys.openpgp.org keyserver to search your fingerprint
  # https://keys.openpgp.org/search?q=your_gpg_fingerprint
  GnuPGFingerprint = ""your_gpg_fingerprint""
  GoogleAnalytics = ""your_google_analytics_id""
  GoogleplusID = ""your_googleplus""
  InstagramID = ""your_instagram""
  LinkedInID = ""your_linkedin""
  MastodonURL = ""your_mastodon_profile""
  MediumID = ""your_medium_id""
  Mobile = ""+1-201-555-0123""
  PayPalMeID = ""https://www.paypal.me/...""
  Phone = ""+1-201-555-0123""
  RedditID = ""your_reddit""
  RSSURL = ""\path-to-xml"" ( default hugo generates from pages at ""/index.xml"" )
  SlackURL = ""https://join.slack.com/...""
  SpotifyID = ""your_spotify_id""
  SoundcloudID = ""your_soundcloud_id""
  StackExchangeID = ""your_stackexchange_id""
  StackOverflowID = ""your_stackoverflow_id""
  TelegramID = ""your_telegram""
  TwitterID = ""your_twitter""
  TwitchID = ""your_twitch_username""
  XingURL = ""https://www.xing.com/profile/...""
  # For youtube, since there are multiple path urls please add everything after https://youtube.com/ in channel url
  YoutubeID = ""c/your_youtube_id""
To add a menu item add [[menu.header]] item to config.toml. For example:[menu]
  [[menu.header]]
    name = ""posts""
    weight = 0
    url = ""/posts""
To add a submenu item add [[menu.header]] item with a parent parameter to config.toml. For example:[menu]
  [[menu.header]]
    identifier = ""post""
    name = ""posts""
    weight = 0
  [[menu.header]]
    parent = ""post""
    name = ""All Posts""
    url = ""/posts""
  [[menu.header]]
    parent = ""post""
    name = ""categories""
    url = ""/categories""
  [[menu.header]]
    parent = ""post""
    name = ""tags""
    url = ""/tags""
To enable disqus comments add disqusShortname to your config.toml.You can turn off disqus comments per page by adding nocomments = true to the front matter.License Nix is licensed under the MIT LicenseSee AlsoAcademicAnubisBear CubBeautiful HugoBootstrap-BP",NA
Benedikt 'dataCobra' Brinkmann,128,2023-02-10,GPL-3.0-or-later,"Blog, Light, Minimal, Responsive",Vitae,Vitae is a feature-rich blog theme for Hugo that focuses on your content.,https://github.com/dataCobra/hugo-vitae,NA,"Vitae&mldr; is a feature-rich blog theme for Hugo that focuses on your content.:mega: Version 3 is finally released! The development of version 3 is finished. Currently I’m in the process of
planning how to proceed with the development of the theme. For the moment I’ll
mainly fix bugs and refactor program code.Donations If you like my work and want to support me you now have the possibility to
donate via Liberapay.Screenshot Installation Download the latest stable release.
It’s available as .zip or .tar.gz. Decompress it into your themes/ folder.For more information about installation read the
official setup guide of Hugo.Features I’m currently elaborating a plan to provide good documentation of the theme
in the future. Until the documentation is ready, here is a brief overview of
the features that the theme offers: FEATURES.mdCredits freepik for the avatargoogle for the roboto fontsfontawesome for providing amazing iconsKaTeX for providing math typesetting for the webLicensed under the GPL-3.0-or-later.See AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Masellum,126,2023-09-20,MIT,"Blog, Minimal",no-style-please,"a (nearly) no-CSS, fast, minimalist Hugo theme ported from riggraz/no-style-please.",https://github.com/g-hw/hugo-theme-nostyleplease,NA,"no style, please!A (nearly) no-CSS, fast, minimalist Hugo theme ported from riggraz/no-style-please.Features Fast (1kb of CSS!)Light, dark and auto modesResponsiveContent first (typography optimized for maximum readability)RSS feed (using Hugo’s embedded RSS template)MathJax supportInstallation The easiest way is to clone this repo (or add as a submodule) to themes/nostyleplease then append theme = 'nostyleplease' as a newline to config.toml. Pages shipped with theme as examples have draft: true in their frontmatters, use --buildDrafts to build them.Usage You can edit config.toml file to customize your blog. You can change things such as the name of the blog, the author, the appearance of the theme (light, dark or auto), how dates are formatted, etc. Customizable fields should be straightforward to understand. Still, config.toml contains some comments to help you understand what each field does. Note that the config.toml under root directory of your hugo site will completely override the one in the theme directory, so copy the attributes you want to keep or edit from the theme’s config.toml to your site’s config.toml.Customize the menu In order to add/edit/delete entries from the main menu, you have to edit the menu.toml file inside data folder. Through that file you can define the structure of the menu. Take a look at the default configuration to get an idea of how it works and read on for a more comprehensive explanation.The menu.toml file accepts the following fields:entries define a new unordered list that will contain menu entrieseach entry is a member of the TOML array entries in questioneach entry can have the following attributes:title, which defines the text to render for this menu entry (NB: you can also specify HTML!)url, which can be used to specify an URL for this entry. If not specified, title will be rendered as-is; otherwise title will be sorrounded by a link tag pointing to the specified URL. Note that the URL can either be relative or absolute. Also note that you can get the same result by placing an <a> tag in the title field.post_list, which can be set either to true or to an object. If it is true, the entry will have a list of all posts as subentries. This is used to render your post list. If you want to customize which posts to render (e.g. by section), you can add one or more of the following attributes under post_list:section, which can be set to a string. It is used to render a list of posts of the specified section only. If you don’t set it, then posts of all sections will be rendered.limit, which can be set to a number. It specifies the number of posts to show. If not set, all posts will be rendered.show_more, which can be true. If it is true and if the number of posts to show is greater than the specified limit, render a link to another page. To specify the URL and the text of the link, you can set show_more_url and show_more_text attributes, which are documented below.show_more_url, which can be a string. It specifies the URL for the show more link. Use only if show_more is true. This will usually redirect to a page containing all posts, which you can easily create using an section page (see section pages section)show_more_text, which can be a string. It specifies the text for the show more link. Use only if show_more is true.entries, yes, you can have entries inside entries. In this way you can create nested sublists!Section pages A so-called section page is a page that shows a list of posts in a specific section. It should be automatically created by hugo when a new section is created.Customize the index page The index.md page should use layout home, which is the layout that displays the menu. If you want to have some content after the menu, you can just add that content in the _index.md file, and it will automatically show under the menu.Another thing you can do to customize the index page is show the description of your blog between the title and the menu. To do this, just edit config.toml and change params.theme_config.show_description to true.Adding table of contents You can add a table of contents by supplying the toc: true param to your post front matter. If you want a border around it you can also set tocBorder: true. The toc style behavior is handled by Goldmark and the defaults can be found in the config.toml file.Pro tips Dark mode for images This theme provides dark mode by inverting all colors of light mode throught the CSS invert() function. This approach would also invert the color of all images, but, since this is not the behaviour one would expect, images are not inverted by default.However, if you would like to force the color inversion on a specific image you can do so by applying class=""ioda"" to that image (“ioda” stands for “invert on dark appearance”). See the image in the overview post for an example of this approach. Note that color inversion will take place only when the theme has dark appearance!For example, if you have a black and white image it could make sense to invert it in dark mode. On the other hand, a colorful image will probably look bad if inverted.Contributing Bug reports and pull requests are welcome on GitHub at https://github.com/Masellum/hugo-theme-nostyleplease.Thanks Some of the code comes from wooseopkim/hugo-theme-nostyleplease, a fork of this theme.Some of the test pages are from this jekyll theme.License The theme is available as open source under the terms of the MIT License.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Alexandre NEGREL,126,2023-07-12,MIT,"Blog, Dark, Landing, Light, Multilingual, Personal, Responsive",Pico,Pico is an elegent theme inspired by Medium & The New York Times.,https://github.com/negrel/hugo-theme-pico,NA,":black_circle: Pico

This theme aims to be minimalist, readable, responsive, light and beautiful. Inspired by Medium and The New York Times, Pico try to provide the best experience for the reader while having an awesome design. It can be configured as a single page, or as a full-featured site with multiple sections. It is multilingual, responsive, and includes a light and dark theme.You can check the example site.
Features :Multilingual - supports side-by-side content in different language versionsSyntax highlighting (“one dark” theme)Styled Markdown throughout, including post titlesCustomizable pages with widget or TailwindCSSStraightforward customization via config.tomlProjects and Blog sectionsLight, CSS bundle is purged and minified thanks to PostCSSLight & Dark themeDeveloper-friendly :Sass files included with instant compiling to CSS thanks to Hugo Pipes and PostCSSTailwindCSS for rapidly building custom designPreview the theme Pico ships with an fully configured example site. For a quick preview:cd themes/pico/exampleSite/
hugo server --themesDir ../..
Then visit http://localhost:1313/ in your browser to view the example site.Getting started Requirements Extended version of Hugo (latest version recommended)Some NPM packages :postcss-clipostcss-importautoprefixer@fullhuman/postcss-purgecsstailwindcssLearn how to install and use npm here.Get the theme # Clone the repository
git clone https://github.com/negrel/hugo-theme-pico.git pico

# Copy the example site
mkdir my_website
cp -r pico/exampleSite/* my_website

# You can delete the cloned repository
rm -rf pico

# Navigate to your website
cd my_website

# Install the node modules and the theme via the script
./setup.sh

# OR manually
# Installing node modules
npm install

# Adding the theme as a submodule (better maintenance than a clone)
# NOTE: my_website/ must be a git repository
git submodule add -f https://github.com/negrel/hugo-theme-pico.git ./themes/pico

# Start the dev server
hugo server
Your website is running :smile:, you can start editing content files.Multilingual Pico currently ships with support for 5 languages (fr, en, it, es, de). Contributions for other language translations are welcome.
To create a new language translation, add the .toml file to the i18n/ folder. See the existing files for the necessary fields.
See the hugo documentation for more details.Menu Pico contains a default menu. If you want to override this, you can do so by editing the menu.main in config.toml.Google Analytics Set googleAnalytics in config.toml to activate Hugo’s internal Google Analytics template.Contributing If you want to contribute to Pico to add a feature or improve the code contact me at negrel.dev@protonmail.com, open an issue or make a pull request.:stars: Show your support Please give a :star: if this project helped you!:scroll: License MIT © Alexandre NegrelSee AlsoAcademicHugoplatePaigeAnubisBootstrap Theme for Personal Blog and Documentations",NA
Kellen Evan Person,125,2023-10-16,MIT,"Blog, Minimal, Personal",Hugo - Classic,"A minimal blog theme, for those who love text. Based off the eXtremely minimal theme by Yihui Xui.",https://github.com/goodroot/hugo-classic,NA,"Hugo.io - Classic ThemeClassic is a stylized fork of the XMin theme, written by Yihui Xie.Provides highlight.js for syntax highlighting, emoji support, Inter and optional darkmode.View live demoInstructions 1: Install Hugo.brew install hugo
2: Create a new site.hugo new site classic
3: Change to themes dir.cd classic/themes
4: Clone the repogit clone git@github.com:goodroot/hugo-classic.git
5: Copy files within the exampleSite directorycp -a hugo-classic/exampleSite/. ../
6: Run hugo server within classic/cd .. && hugo server
New Posts Make new posts:hugo new post/good-to-great.md
Header Colour Adjust header colour within static/css/style.cssheader {
    background: #613DC1;
}
&mldr; background: to any colour value you’d like!For header font:header a {
    color: #fff;
}
Change color: to a nice matching colour.Darkmode Match or over-ride system-wide dark/light settingsOpen static/css/style.cssEdit the following attributes to match light/dark/* darkmode */
@media (prefers-color-scheme: dark) {
    ...
}

/* lightmode */
@media (prefers-color-scheme: light) {
    ...
}
Screenshot Blog Posts hugo-classic has appeared in&mldr;15 Hugo Framework blog themes by paskalSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
lgaida,125,2023-02-02,MIT,"Blog, Minimal, Personal, Responsive",mediumish,"An elegant, mediumish theme for gohugo",https://github.com/lgaida/mediumish-gohugo-theme,NA,"Mediumish ThemeThis theme for gohugo is a customized port based on the Mediumish Jekyll-Theme by WowThemesNet. The original theme ships with a few more features than this ported version but i also added features which the original version did not include.See the Demo and Demo-SourceFeatures Landingpage404-PagePoststags can be usedshareable via socialmediaCustom paginationPrev/Next-LinksTag-Overview in JumbotronIntegrations:Disqus CommentsGoogle AnalyticsMailchimpInstallation Inside the folder of your Hugo site run:$ cd themes
$ git clone https://github.com/lgaida/mediumish-gohugo-theme
Preface I recommend placing image files for your site config within the static folder of your gohugo website. This allows them to be easily referenced from the config.toml or post.md files. You may structure the files and folders within static however you’d like, with one exception: There must be a file named jumbotron.jpg present under the path static/images as it is referenced in the .css.Post Example To create a simple post use the hugo new command as usual.
This theme makes use of page bundles / page resource (see https://gohugo.io/content-management/page-bundles/).
Place any image next to your post’s index.md file and make sure it contains the keyword “cover” inside its name.
This image will also be used for twitter and opengraph cards.hugo new blog/my-first-post/index.md
Creating a new post will create something like this:---
title: ""My first post""
date: 2018-10-01T15:25:19+02:00
publishdate: 2018-10-07T11:17:14+02:00
lastmod: 2018-10-08T18:55:29+02:00
tags: [""post"", ""interesting""]
type: ""post""
comments: false
---
# Lorem ipsum
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean semper libero quis dictum dapibus. Nulla egestas vitae augue eu rutrum. Duis ullamcorper dictum ipsum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse tortor dui, fermentum non dapibus id, volutpat non odio.
publishdate: is displayed at the top of the single-viewlastmod: is displayed as a hint on the single-viewtags: are used as usual, just add the tags you want to use. They are displayed in the jumbotron on the list-view, and on the bottom of each single-viewcomments: true/false to turn on/off disqus-commentsStatic Content I added a customized layout for content of type “static”, which means that posts in the folder “static” are displayed as standalone pages. I also disabled the list-layout for this folder.For example: to create an imprint, simply go with the following command and add your markdown-text.hugo new static/imprint.md
Configuration You should at least specify the following default params in your config.tomlbaseURL = ""http://yourdomain.com""
languageCode = ""en-us""
title = ""Mediumish""
theme = ""mediumish-gohugo-theme""
summaryLength = 25
copyright = ""John Doe - All rights reserved""
disqusShortname = ""shortDisquis""
googleAnalytics = ""UA-1XXXXXXX1-X""
title: is displayed on the postlist and on each post as the titlesummaryLength: feel free to play around with thiscopyright: is displayed in the footer next to the copyright-logodisqusShortname: provide your disqusShortnamegoogleAnalytics: provide your googleAnalytics-CodeGeneral Params [params]
  logo = ""/images/icon.png""
  description = ""the clean blog!""
  mailchimp = ""you can provide a mailchimp-link here, see below""
  mailprotect = ""you can provide a protector-name here, see below""
  customCSS = [""css/tweaks.css"", ""css/customHeader.css""]
logo: is displayed in titlebar and alertbardescription: is displayed under titlemailchimp and mailprotect: provide links to a mailchimp-list and a mailchimp-protector id, the following screenshot should clarify. if not specified the alertbar for mail-subscription doesn’t show up.
customCSS: you can add paths to your own css files here to tweak and customize the cssAuthor Params [params.author]
  name = ""John Doe""
  thumbnail = ""/images/author.jpg""
  description = ""Creator of this blog.""
Landingpage Params [params.index]
  picture = ""/images/author.jpg""
  title = ""John Doe""
  subtitle = ""I'm a unique placeholder. Working here and there!""
  mdtext = '''Currently trying to get this blog running, still don't know what the blog will be about!\
**This textblock is a demonstration of the mdtext-param.**\
### This is a markdown heading'''
  alertbar = true
You can currently provide your username from github, linkedin, xing, twitter, medium. They will be displayed as icons on the landingpage.[params.social]
  github = ""<username>""
  linkedin = ""<username>""
  xing = ""<username>""
  medium = ""<username>""
  twitter = ""<username>""
  instagram = ""<username>""
Contributing Feel free to use the issue tracker if you want to contribute in any possible way.
You can also create a pull request if you have already implemented a new feature that you want to share.License Like the original jekyll-theme this ported theme is released under the MIT License. Read more at the License itself.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Queensferry,121,2023-06-11,MIT,"Blog, Light, Minimal, Responsive",TeXify,"A minimal, latex-style hugo theme for personal blogging",https://github.com/queensferryme/hugo-theme-texify,NA,"TeXifyA minimal, latex-style hugo theme for personal blogging.Features Disqus & Google Analytics includedResponsive design for mobile devicesCustomize the site with your own stylesheetsMath equations powered by KaTeX or MathJaxMinimal CSS, No JavaScript, Blazing Fast!Usage Install with:git submodule add https://github.com/queensferryme/hugo-theme-texify.git themes/hugo-theme-texify
Upgrade with:git submodule foreach git pull origin master
See config.toml for an example configuration.Note that for Simplified Chinese users, it is recommended to use Noto Serif SC via Google Fonts. You may put the following codes in your static/css/custom.css:@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@300;700&display=swap');

#wrapper {
    font-family: 'Latin Modern Roman', 'Times New Roman', 'Noto Serif SC', serif;
}
Development make dev
Acknowledgement The design of this theme is inspired by the following softwares:https://github.com/vincentdoerig/latex-csshttps://github.com/7ma7X/HugoTeXhttps://theme.typora.io/theme/Academic/See AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
koirand,121,2022-08-08,MIT,"Blog, Light, Minimal, Personal",pulp,"Pulp is a Hugo theme for getting a simple, easy-to-read blog site.",https://github.com/koirand/pulp,NA,"pulpPulp is a Hugo theme for getting a simple, easy-to-read blog site.Screenshots Installation If your site is also under version control using git, the easiest way to install this theme is to add it as a submodule. If you have not created a git repo for your project yet, you need to run git init beforehand. Inside the folder of your Hugo site, run the following command.git submodule add https://github.com/koirand/pulp.git themes/pulp
Alternatively, you can clone the theme into your project.git clone https://github.com/koirand/pulp.git themes/pulp
Configuration Configure your config.toml with reference to exampleSite.
Put your own avatar image in /static/img/avatar.jpg of your own site, and also favicon.ico. Hugo will automatically use that images instead of the standard one. It’s not necessary to alter the theme for that.Update the theme You can update the theme by issuing the following command inside your project folder.git submodule update --remote --rebase
If you have cloned the theme, you can run git pull inside the theme folder.See AlsoCalligraphyMonday themeTatBanTheme2.0TechLabAcademic",NA
Baptiste Jacquemet,116,2023-06-06,MIT,"Blog, Personal, Portfolio",Personal Web,Personal Web is a simple Hugo template to build a personal website including portfolio and blog sections. It will mainly suit freelancers who want to showcase their work.,https://github.com/bjacquemet/personal-web,NA,"Personal WebPersonal Web is a simple Hugo template to build a personal website including portfolio and blog sections. It will mainly suit freelancers who want to showcase their work.Demo website Installation Inside the folder of your Hugo site run:cd themes
git clone https://github.com/bjacquemet/personal-web
or if you’d rather use submodulescd themes
git submodule add https://github.com/bjacquemet/personal-web.git
For more information read the official setup guide of Hugo.Screenshots Start building your website You will find help in the exampleSite folder, or you can browse resources on the demo siteAdd a SVG icon You can create and add your own SVG icons.First, override the svg.html file by duplicating the theme file into your root directory (see https://orcid.org/trademark-and-id-display-guidelines).If you have Sketch, you can use the svgs.sketch file to add new SVGs. Export it and add it to the svg.html file. Note that you can optimize it using the svgo tool.Start the server In order to see your site in action, run Hugo’s built-in local server from your website root directory.hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing Did you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This theme is released under the Unlincense License. For more information read the License.See AlsoAcademicGokarnaHugo InitioHugo LiftoffHugo Profile",NA
Roberto Jordaney,116,2022-09-17,MIT,"Blog, Light, Multilingual, Personal, Responsive",Hugo ReFresh,A re-adaptation of the Hugo Fresh theme,https://github.com/PippoRJ/hugo-refresh,NA,"The ReFresh theme for HugoReFresh is a theme for the Hugo static site generator highly modified from the awesome Fresh theme (below you can find the list of changes to the original theme).You can find a live demo of the original Fresh theme here or a demo of the Hugo ReFresh theme here.You can find another example of ReFresh theme in my personal website.This theme is intended for personal website and blog. If you’d like to extend the theme to include other functionalities submit a pull request.Getting started To create a new site using Hugo ReFresh:# Create site and cd into it
hugo new site my-site && cd my-site

# Clone the ReFresh theme into the themes folder
git init
git submodule add https://github.com/PippoRJ/hugo-refresh.git themes/hugo-refresh

# Remove the default config
rm config.toml

# Fetch the example config
curl -O https://raw.githubusercontent.com/PippoRJ/hugo-refresh/master/exampleSite/config.yaml

# Run the site locally
hugo server -D

# Open the site in your browser
open http://localhost:1313
To run the Example Site using Hugo ReFresh:# Create site and cd into it
hugo new site my-site && cd my-site

# Clone the ReFresh theme into the themes folder
git init
git submodule add https://github.com/PippoRJ/hugo-refresh themes/hugo-refresh

# Remove the default config
rm config.toml

# Copy the Example site content and configuration in my-site
cp -R themes/hugo-refresh/exampleSite/* ./

# Open the site in your browser
hugo server -D
Troubleshooting If you see error: failed to transform resource: TOCSS: failed to transform ""style.sass"" when attempting to run your hugo server, make sure you have the extended version of Hugo installed:# On Ubuntu:
snap refresh hugo --channel=extended
Statistics counter You can enter your Google / Yandex / etc statistic counter code into the layouts/partials/counter.html. Code will be generated right after open <body> tag.Custom HEAD If you want to include custom scripts at the end of the HEAD section, create a file in layouts/partials/custom_head.html and add your content there.Customizing your page There are different configuration options for Hugo ReFresh including options for: the navbar, the sidebar, the homepage, fonts, colours landing, stats counters and images.
Read the comments in the config.yaml file to know more.The images specified in the config.yaml file need to be placed in the directory specified by the assetDir option in the config file.
E.g.: set assetDir: ""static"" to the set the default folder the static folder of your site.List of shortcodes you can use in your articles with description: A live example of these shortcodes can be found here.title1.html, title2.html, title3.html, title4.html, title5.html, title6.htmlUsage example:{{< title1 ""My awesome title"" ""my-title-id"">}}
The first parameter is the title of the shortcode (in this example is “My awesome title”).The second paramter is the ID of the shortcode (in this example is “my-title-id”).It can be used in links to the same page as:[link to the title](#my-title-id)
subtitle1.html, subtitle2.html, subtitle3.html, subtitle4.html, subtitle5.html, subtitle6.htmlUsage example:{{< subtitle1 ""My awesome subtitle"" ""my-subtitle-id"">}}
The first parameter is the title of the shortcode (in this example is “My awesome subtitle”).The second paramter is the ID of the shortcode (in this example is “my-subtitle-id”).It can be used in links to the same page as:[link to the subtitle](#my-subtitle-id)
code.htmlThis shortcode builds a centred page that is two-third of the full size of the page.Usage example:{{< code language=""shell"" >}}
    $ sudo bash -c 'echo 0 > /proc/sys/kernel/randomize_va_space'
{{< /code >}}
This shortcode has 2 parameters:line-numbers to hide or show the line numbers. The default is true, for single line code the number is never shown.language is used to highlight the syntax of the code properlycodeWide.htmlThis shortcode builds a centred page that is as wide as the full size of the page.Usage example:{{< codeWide language=""shell"" >}}
    $ dmesg | tail
    ......
    [13401.299114] overflow64[16566]: segfault at 616161616161 ip 0000616161616161 sp 00007fffffffddb0 error 14 in libc-2.27.so[7ffff79e4000+1e7000]
{{< /codeWide >}}
This shortcode has 2 parameters:line-numbers to hide or show the line numbers. The default is true, for single line code the number is never shown.language is used to highlight the syntax of the code properlycontainer.htmlThis shortcode builds a centred page that is as wide as the two third of the size of the page. The content of the shortcode will pass through the markdown processor.Usage example:{{< container ""container-id"" >}}

{{< /container >}}
This shortcode has an optional parameter to give an ID to the html div.containerWide.htmlThis shortcode builds a centred page that is as wide as the size of the page. The content of the shortcode will pass through the markdown processor.Usage example:{{< containerWide ""container-wide-id"" >}}

{{< /containerWide >}}
This shortcode has an optional parameter to give an ID to the html div.figure.htmlThis shortcode resize an image that with the width and/or height that you specifyUsage example:{{< figure src=""images/the_stack.png"" width=""700"" >}}
{{< figure src=""images/the_stack.png"" height=""700"" >}}
The parameter src is the location of the image relative to the location of the file where the shortcode has been used.The parameter width is the width of the image.The parameter height is the height of the image.The parameter caption is the caption of the image.The parameter alt is the alt property of the image.twoFigure.htmlThis shortcode shows 2 images one next to the other with the possibility to resize them.Usage example:{{< twoFigure src1=""images/overflow_1.png"" width1=""700"" src2=""images/overflow_2.png"" width2=""700"" >}}
The parameter src1 is the location of the right image relative to the location of the file where the shortcode has been used.The parameter width1 is the width of the right image.The parameter height1 is the height of the right image.The parameter caption1 is the caption of the right image.The parameter alt1 is the alt property of the right image.The parameter src2 is the location of the left image relative to the location of the file where the shortcode has been used.The parameter width2 is the width of the left image.The parameter height2 is the height of the left image.The parameter caption2 is the caption of the left image.The parameter alt2 is the alt property of the left image.With a small screen these images will be shown one on top of the other.See example of use heretwoVideos.htmlThis shortcode shows 2 YouTube videos one next to the other.Usage example:{{% twoVideos id2=""pKRzfdIJUZE"" id1=""Ncv2KmhVgyU"" autoplay1=true ratio1=""4:3"" ratio2=""16:9"" %}}
The parameter id1 is the ID of the left videoThe parameter id2 is the ID of the right videoThe parameter autoplay1 is used to start the video on the left (the video will start on mute). Set it to “true” to activate autoplay.The parameter autoplay2 is used to start the video on the left (the video will start on mute). Set it to “true” to activate autoplay.The parameter ratio1 is used to specify the the ratio of the video on the left. It can be either “16:9” or “4:3”. The default is “16:9”.The parameter ratio2 is used to specify the the ratio of the video on the right. It can be either “16:9” or “4:3”. The default is “16:9”.With a small screen these videos will be shown one on top of the other.book.htmlUsage example:{{< book title=""Title Awesome"" authors=""Awesome author"" image=""images/cover.jpg"" size=""300x"">}}
The parameter title is the title of the book.The parameter authors contains the authors of the book.The parameter image is the cover of the book.The parameter size is used to specify the size of the book in pixel “width” x “height”.E.g.: “300x” means 300px of width.E.g.: “x300” means 300px of height.See example of use hereexercise.htmlUsage example:{{< exercise >}}
Text of the exercise.
{{< /exercise >}}
This shortcode has no parameters.See example of use heretabsCode.htmlUsage example:{{< tabsCode 
    file1=""/content/code_exercises/staircase_n_steps/code/solution_python.md"" language1=""python"" title1=""Python"" icon1=""python""
    file2=""/content/code_exercises/staircase_n_steps/code/solution_c.md"" language1=""c"" title2=""C"" icon2=""c""
    file3=""/content/code_exercises/staircase_n_steps/code/solution_java.md"" language1=""java"" title3=""Java"" icon3=""java"" 
>}}
The parameter file1 is the name of the code file to be displayed in the first tab.
The path needs to start from the content folder.The parameter language1 is used to highlight the syntax of the code properly.
The parameter title1 is the title of the first tab.The parameter icon1 is the icon to be shown at the right of the title, it is an optional parameter. See the partial code icon.html for the available icons.There are 6 tabs supported at this momentthe files parameters are file1, file2, file3, file4, file5, file6the titles parameters are title1, title2, title3, title4, title5, title6the languages parameters are language1, language2, language3, language4, language5, language6the icons parameters are icon1, icon2, icon3, icon4, icon5, icon6See example of use heretabs.htmlUsage example:{{< tabs 
    file1=""/content/exercises/article1/comments/my_comments.md"" title1=""My Ideas""
    file2=""/content/exercises/article1/comments/your_comments.md"" title2=""Your Ideas"" 
    file3=""/content/exercises/article1/comments/her_comments.md"" title3=""Her Ideas""  
>}}
The content of the files (file1, file2 &mldr;) are passed through the markdown processor, so you can use markdown in these files.The parameter file1 is the name of the code file to be displayed in the first tab.
The path needs to start from the content folder.The parameter title1 is the title of the first tab.The parameter icon1 is the icon to be shown at the right of the title, it is an optional parameter. See the partial code icon.html for the available icons.There are 6 tabs supported at this momentthe files parameters are file1, file2, file3, file4, file5, file6the titles parameters are title1, title2, title3, title4, title5, title6the icons parameters are icon1, icon2, icon3, icon4, icon5, icon6codeInLine.htmlUsage example:{{< codeInline >}}sudo echo 0 > /proc/sys/kernel/randomize_va_space{{< /codeInline >}}
This shortcode has 2 parameters:language is used to highlight the syntax of the code properlyid to set a id of the html code elementSee an example of usage heremessageBlue.html, messageDark.html, messageGreen.html, messageRed.html, messageYellow.htmlnotificationBlue.html, notificationGreen.html, notificationRed.html, notificationYellow.htmlsiteBlue.html, siteGreen.html, siteLightgreen.html, siteRed.html, siteYellow.htmlUsage example:{{< siteLightgreen ""Web"" ""https://www.example.com"" >}}
<p>Description of the website.</p>
{{< /siteLightgreen >}}
The first parameter will appear in the right coloured part of the shortcode.The second parameter will appear in the middle part of the shortcode.See example of usage hereCustomization options for a regular page These are the options that you can define is the front matter of a regular page:---
title: ""My Awesome Title""
date: 2019-06-03T21:51:13+01:00
draft: false
hideLastModified: true
summaryImage: ""images/system.jpg"" 
keepImageRatio: true
tags: [""Tag1"", ""tag2"", ""tag 3""]
summary: ""This is a custom summary for my article""
showInMenu: true
---
summaryImage: it is used to specify the image to be used in the summarykeepImageRatio: it is used to force the aspect ratio of the image to be kept. The default value is false.summary: it is used to specify the summary of an article instead of taking it from the article itself.hideLastModified: it is used to hide the the timestamp added at the end of the article.showInMenu: it is used to show the article in the top right menu.tags: it is the list of tags for the article; they will be used to build the left sidebar.To avoid path problems when specifying the summaryImage, it is recommended to define a regular page as a leaf bundle. The example above will result in:* my_awesome_title (folder)
   * index.md (file)
   * images (folder)
      * system.jpg (file)
Multilanguage support To chose the default language you need to set the DefaultContentLanguage setting in the config.yaml file.
(You can also have multiple languages at the same time, see exampleSite/config.yaml for an example.)The language supported are:EnglishSpanishFrenchItalianRussianChinesePolishGermanPortugueseIf you want to add a missing language please submit a feature request.List of modifications from the original theme The ReFresh theme was transformed from single page template to multipage.Added multilanguage support.The left side menu now contains page tags along with theirs post counter.The list and terms types of pages contain a list of the post summaries.The images used to build the summaries can be resized to allow better usage of the bandwidth.The js and css files can be minified (with a configurable option on the config.yaml).The menu is automatically built following the structure of the content folder. Two levels are allowed at the moment.The navbar-burger used in the original theme’s menu is removed (it was displayed when the page was resized).The .sass files are now processed with resources.ExecuteAsTemplate so that it is possible to use variables from the config.yaml.Options in the config.yaml are added to configure the font-family for the navbar, sidebar and content of the a page.Bulma (the css framework the theme is based on) is now updated to version 0.7.5 because in the new version the class content has a separate style to allow modification that will impact only the contents of the posts.highlight.js was added to better highlight the code sections of the posts. I chose the style monokai-sublime.highlightjs-line-number.js was added to have the line number at the beginning of each line of code in a code sections of a post.A minimal version of MathJax was added to allow LaTeX style mathematical expressions to be placed in the site.Several other options are added to personalise the content of a post.A shortcode is added to resize the images and save bandwidth in a post content.A shortcode is added to show multiple tabs.Four shortcodes are added to show code: inline, in page, in page wide, in tabs.The loaders images are now processed with resources.ExecuteAsTemplate so that they take the main colour of the theme (defined in config.yaml)The favicon is processed with resources.ExecuteAsTemplate to follow the main colour of the page.Added Open Graph meta tags to each post for easy-sharing on social media sites.All the js and css files are loaded locally, i.e., not loaded from third party sites.See AlsoAcademicAnubisBootstrap Theme for Personal Blog and DocumentationsColor Your WorldHugoplate",NA
taikii,115,2023-05-02,MIT,"Blog, Light",Whiteplain,Simple and functional theme for Hugo,https://github.com/taikii/whiteplain,https://whiteplain.pages.dev/,"WhiteplainThis is simple and functional Hugo theme.Installation $ git clone https://github.com/taikii/whiteplain.git themes/whiteplain
Or$ git submodule add https://github.com/taikii/whiteplain.git themes/whiteplain
More colors This theme automatically switches between light and dark styles depending on the OS color scheme. You can fix the light or dark style by adding the following theme.Dark Fix in dark style.Light Fix in light style.Usage Configration baseurl = ""https://example.com/""
title = ""Whiteplain""
theme = ""whiteplain""
languageCode = ""en""
# Disqus shortname
disqusShortname = ""Shortname""
# google analytics tracking id
googleAnalytics = ""Toracking ID""

# Copyright notice. This is displayer in the footer.
copyright = ""&copy; Copyright 2017 Your name""

[params]
  # whether to use CDN or local file for fontawesome
  #useCDN = false
  # whether to include external sharing scripts and icons for twitter, facebook and co.
  #showShareIcons = false
  # Date format
  #dateFormat = ""January 2, 2006""

# This is displayer in About page.
[params.author]
  name = ""Your name""
  # Gravatar or Abatar image
  gravatar = ""Gravatar email or MD5 Hash""
  #avatar = ""/path/to/avatar""

  twitter = ""Twitter username""
  facebook = ""Facebook username""
  googleplus = ""Googleplus username""
  instagram = ""Instagram username""
  tumblr = ""Tumblr username""
  flickr = ""Flickr username""
  reddit = ""Reddit username""
  linkedin = ""Linkedin username""
  slideshare = ""Slideshare username""
  github = ""Github username""
  gitlab = ""Gitlab username""
  bitbucket = ""Bitbucket username""
  stackoverflow = ""Stackoverflow username""
  jsfiddle = ""Jsfiddle username""
  codepen = ""Codepen username""
  deviantart = ""Deviantart username""
  behance = ""Behance username""
  dribbble = ""Dribbble username""
  wordpress = ""Wordpress username""
  medium = ""Medium username""
  foursquare = ""Foursquare username""
  xing = ""Xing username""
  quora = ""Quora username""
  youtube = ""Youtube username""
  vimeo = ""Vimeo username""
  whatsapp = ""Whatsapp username""
  skype = ""Skype username""
  snapchat = ""Snapchat username""
  pinterest = ""Pinterest username""
  telegram = ""Telegram username""
  vine = ""Vine username""
  email = ""Your email""

[taxonomies]
  category = ""categories""
  tag = ""tags""
  series = ""series""

# Header Menu
[[menu.main]]
  name = ""Categories""
  identifier = ""categories""
  url = ""/categories/""
  weight = 1
[[menu.main]]
  name = ""Tags""
  identifier = ""tags""
  url = ""/tags/""
  weight = 2
[[menu.main]]
  name = ""Archives""
  identifier = ""archives""
  url = ""/archives/""
  weight = 3
[[menu.main]]
  name = ""About""
  identifier = ""about""
  url = ""/about/""
  weight = 4

# Footer Menu
[[menu.footer]]
  name = ""About""
  weight = 1
  identifier = ""about""
  url = ""/about/""
Archives page The Archive page will be displayed, if you create content/archives/_index.html.
The file can be 0 bytes.Hugo site direcctory
└── content
    └── archives
        └── _index.md
About page The author information is displayed on the About page. You should create an About page in content/about/_index.md.Your site direcctory
└── content
    └── about
        └── _index.md
Customize Stylesheet and Javascript You can customize Stylesheet and Javascript. When you create static/css/custom.css static/js/custom.js, it will be loaded automatically.Default Syntax highlighter style is monokai. If you want to change the style, create static/css/syntax.css. See Hugo Syntax Highlighting about Syntax highlighting.Your site direcctory
└── static
    ├── css
    │   ├── custom.css
    │   └── syntax.css
    └── js
        └── custom.js
If you want to use libraries and frameworks, create layouts/partials/head_custom.html. Its contents are read into <head>...</head>.Your site direcctory
├── layouts
     └── partials
         └── head_custom.html
Customize Share Buttons Copy themes/whiteplain/layouts/partials/share.html to layouts/partials/share.html.Customize layouts/partials/share.html.Your site direcctory
├── layouts
│   └── partials
│       └── share.html
└── themes
    └── whiteplain
        └── layouts
            └── partials
                └── share.html
Customize Author SNS Icons Copy themes/whiteplain/layouts/partials/social.html to layouts/partials/social.html.Customize layouts/partials/social.html.Your site direcctory
├── layouts
│   └── partials
│       └── social.html
└── themes
    └── whiteplain
        └── layouts
            └── partials
                └── social.html
Icons This theme using Font Awesome.License MITSee AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Nico Kaiser,91,2023-11-22,MIT,"Dark, Gallery, Minimal, Responsive",Gallery,A very simple and opinionated photo gallery theme for Hugo built with Tailwind CSS,https://github.com/nicokaiser/hugo-theme-gallery,https://hugo-gallery-example.netlify.app/,"hugo-theme-galleryA very simple and opinionated photo gallery theme for Hugo built with Tailwind CSS.DemoExample site sourceFeatures Responsive designDark themePrivate albumsAutomatic (or manual) selection of feature imagesJustified album views with Flickr’s Justified GalleryLightbox with PhotoSwipeSEO with Open Graph tagsInstallation This theme requires Hugo >= 0.112.As a Hugo Module Requires the Go binary installed.$ hugo mod init github.com/<your_user>/<your_project>
Add the theme to your hugo.tomltheme = [""github.com/nicokaiser/hugo-theme-gallery""]
As Git Submodule $ git submodule add --depth=1 https://github.com/nicokaiser/hugo-theme-gallery.git themes/gallery
Usage Page bundles which contain at least one image are listed as album or gallery:contents
|-- _index.md
|-- about.md             <-- not listed in album list
|-- animals
|   |-- _index.md
|   |-- cats
|   |   |-- index.md
|   |   |-- cat1.jpg
|   |   `-- feature.jpg  <-- album thumbnail
|   |-- dogs
|   |   |-- index.md
|   |   |-- dog1.jpg     <-- album thumbnail
|   |   `-- dog2.jpg
|   `-- feature.jpg
|-- bridge.jpg           <-- site thumbnail (OpenGraph, etc.)
`-- nature
    |-- index.md         <-- contains `featured_image: images/tree.jpg`
    |-- images
    |   `-- tree.jpg     <-- album thumbnail, not shown in gallery
    |-- nature1.jpg
    `-- nature2.jpg
/about.md is not a Page Bundle and does not have image resources. It is not displayed in the album list./nature is a Leaf Bundle (has index.md and no children) => displayed as gallery (single layout)./animals is a Branch Bundle (has _index.md and has children) => displayed as album list (list layout).The image resource with *feature* in its name or the first image found is used as thumbnail image for album lists.Albums without an image are not shown.Images in a sub-directory are not shown (here: nature/images/tree.jpg). This can be used to provide an album thumbnail that is not shown in the album itself.Albums with images and sub-albums In some cases it might be desirable to show images and sub-albums on one page. To achive this, a local version of list.html needs to be added with something like this:  {{ define ""main"" }}
    {{- partial ""page_header.html"" . -}}
    {{- partial ""page_albums.html"" . -}}
+   {{- partial ""page_gallery.html"" . -}}
  {{ end }}
In this case, featured images for albums which only contain other albums need to be moved to a sub-directory to avoid being displayed.Folders with no images Albums with no images are hidden by default. This is a design decision to keep the structure as simple as possible and hides pages like about.md or imprint.md from the album list without the need of defining a layout/section for each gallery.@baekgaard made a Pull request about handling of empty albums, which allows to modify this behaviour (which, for simplicity reasons, is not merged).Author Nico KaiserSee AlsoAcademicPaigeTailBlissAnatoleAnubis",NA
wamo,105,2023-03-29,MIT,"Blog, Dark, Light, Minimal, Personal, Responsive",Blonde,"Blonde, A simple theme using Tailwind CSS",https://github.com/opera7133/Blonde,https://blonde.pages.dev,"BlondeBlonde, A simple theme using Tailwind CSS.The demo can be seen here: https://blonde.pages.devFeatures ResponsiveDark/Light modeGoogle AnalyticsGoogle AdSenseYandex.MetricaWidgetsPaginationSyntax HighlightRSS feedsSupport tags and categories and archivesDisqus100/100 Google Lighthouse speed scoreInstallation Method 1 Inside the folder of your Hugo site run:$ git clone https://github.com/opera7133/Blonde themes/Blonde
Updating theme:$ cd themes/Blonde
$ git pull
Method 2 Inside the folder of your Hugo site run:$ git submodule add https://github.com/opera7133/Blonde.git themes/Blonde
Updating theme:$ git submodule update --remote --merge
Install dependencies Copy at least the following files from themes/Blonde/exampleSite to the root folder of your site.package.jsontailwind.config.jspostcss.config.jsAfter that, run this command.$ npm install
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.Update config file Copy the config.toml in the exampleSite to the root of your Hugo site. Change strings as you like.Check your site In order to see your site in action, run Hugo’s built-in local server.$ npm run start
Now enter localhost:1313 in the address bar of your browser.Build your site $ npm run build
Contributing If you find a bug or have an idea for a feature, feel free to write an issue or make a PR.License This theme is released under the MIT license.See AlsoAcademicAnubisBlowfishColor Your WorldCompost",NA
NA,105,2023-03-02,MIT,NA,Hugo-Theme-Ladder,"A fast, clean Hugo theme",https://github.com/guangzhengli/hugo-theme-ladder,NA,"Hugo Theme Ladder | Demo🌈 Clean | ⏩ Fast | 📰 Focus on Reading | 🌐 Multi language | 🌙 Multi Dark Theme | 📱 Mobile supportEnglish README | 简体中文说明The Demo | ExampleSite includes a lot of documentation about Installation, Features with a few more stuff. Make sure you visit it, to get an awesome hands-on experience and get to know about the features &mldr;Demo is built up with exampleSite Source Code (https://github.com/guangzhengli/hugo-ladder-exampleSite) as source.Documentations docs See docs folder.Basic Usage Quick StartConfigurationsExtra Guides Multi LanguageComment SystemAnalyticsAnalytics UmamiQuick Start Just click Use this template to create your blog site in the exampleSite Repository.Create a new repository(GitHub Pages) from hugo-ladder-exampleSite to enter : username.github.io.replace the username by your GitHub accountThen configure the GitHub page setting following:🎉🎉🎉 Open the browser and enter: https://username.github.io 🎉🎉🎉Minimal Configuration Clone your repository.Build and run hugo server by hugo server -D and open in browser http://localhost:1313/.baseURL: 'https://hugo-ladder.pages.dev' # set https://username.github.io
homepage: 'https://hugo-ladder.pages.dev' # set https://username.github.io
defaultContentLanguage: 'en' #default language
params:
  brand: HOME # set the brand of your site
  avatarURL: /images/avatar.png # avatar, replace your avatar in the /static/images/
  author: Hugo Ladder # name
  authorDescription: # description
  info:  this is a info # information of your blog site
  favicon: /images/avatar.png # blog site icon，replace your avatar in the /static/images/
  options:
    showDarkMode: true # is show dark mode button
    enableMultiLang: true # is show multi language button
Modifying the default configuration. Then push it to your repository.ALL Configuration Following this article to cofiguration.Following this article to configure the umami analyticsSpecial Thanks Hugo Ladder is inspired by hugo-paperMod.",NA
Robert Kaussow,84,2023-12-02,MIT,"Blog, Responsive",Geekblog,Hugo theme made for blogs,https://github.com/thegeeklab/hugo-geekblog,https://hugo-geekblog.geekdocs.de/,"Geekblog



Geekblog is a simple Hugo theme for personal blogs. It is intentionally designed as a fast and lean theme and may not fit the requirements of complex projects. If a more feature-complete theme is required there are a lot of got alternatives out there. You can find a demo and the full documentation at https://hugo-geekblog.geekdocs.de.Build and release process This theme is subject to a CI driven build and release process common for software development. During the release build, all necessary assets are automatically built by webpack and bundled in a release tarball. You can download the latest release from the GitHub release page.Due to the fact that webpack and npm scripts are used as pre-processors, the theme cannot be used from the main branch by default. If you want to use the theme from a cloned branch instead of a release tarball you’ll need to install webpack locally and run the build script once to create all required assets.# install required packages from package.json
npm install

# run the build script to build required assets
npm run build

# build release tarball
npm run pack
See the Getting Started Guide for details about the different setup options.Contributors Special thanks to all contributors. If you would like to contribute, please see the instructions.License This project is licensed under the MIT License - see the LICENSE file for details.The used SVG icons and generated icon fonts are licensed under the license of the respective icon pack:Font Awesome: CC BY 4.0 LicenseIcoMoon Free Pack: GPL/CC BY 4.0Material Icons: Apache License 2.0See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Léo de Souza,84,2023-11-27,Apache-2.0,"Blog, Dark Mode, Minimal, Multilingual, Responsive",Hugo Flex,A lightweight Hugo theme leveraging CSS Flexbox.,https://github.com/ldeso/hugo-flex,https://ldeso.github.io/hugo-flex/,"Hugo FlexA lightweight Hugo theme leveraging CSS Flexbox.This theme is verified to work with Hugo versions v0.100–v0.110.Features Flexbox-based responsive layout100% speed score and accessibility score on PageSpeed InsightsNo frameworkNo javascriptFull posts in RSS feedRSS page looks like a normal pageMultilingual supportDark themeOptional features:Syntax highlightingShow summaries on homepageSchema.org, Open Graph and Twitter Cards metadataUtterances comments widgetCustom CSS and JS may be added site-wide, or dynamically with shortcodesBuilt-in shortcodes:Math rendering with KaTeXNetlify contact formPrivacy-friendly SoundCloud playerExample The demo site is built from the hugoBasicExample repository.A complete starter template specifically made for this theme is also available at scivision/hugo-flex-example.Installation Install Hugo.Create a Hugo site.Open a command prompt at the root of the site and download the theme:git init
git submodule add https://github.com/ldeso/hugo-flex.git themes/hugo-flex
Add the theme to the site configuration. If the site configuration is a file called hugo.yaml:echo 'theme: hugo-flex' >> hugo.yaml
Updating Open a command prompt at the site’s root directory and update the theme:git submodule update --remote --rebase
Configuration Any part of the default theme configuration can be copied to the site configuration to be modified. The default theme configuration is:params:
  color: teal           # Any color in CSS syntax
  width: 42rem          # Any length in CSS syntax / leave empty to span page
  divider: \a0          # Any string in CSS syntax / leave empty for no divider
  footer: >-            # HTML spaces (&#32;) are needed before HTML elements
    Except where otherwise noted, content on this site is licensed under a &#32;
    <a href=""http://creativecommons.org/licenses/by/4.0/"" rel=""license"">Creative
    Commons Attribution 4.0 International License</a>.
  rss: To subscribe to this RSS feed, copy its address and paste it into your
    favorite feed reader.
  noClasses: true       # Set to the same value as markup.highlight.noClasses
  headingoffset: 0      # Change heading levels when rendering markdown
  linkicons: false      # Set to hover or true to add a link icon to headings
  summaries: false      # Set to true to show summaries of posts on homepage
  schema: false         # Set to true to add Schema.org metadata
  opengraph: false      # Set to true to add Open Graph metadata
  twittercards: false   # Set to true to add Twitter Cards metadata
  utterances:
    repo:               # Set to Utterances repo URL to add Utterances comments
    issueterm:          # Leave empty for the default blog post to issue mapping
    theme:              # Leave empty to use the adaptive Utterances dark theme
  netlify:
    honeypot: false     # Set to true to add honeypot field in contact form
    recaptcha: false    # Set to true to add recaptcha challenge in contact form
  # css:                # Uncomment to add custom CSS from the assets directory
  #   - css/foo.css
  #   - bar.css
  # js:                 # Uncomment to add custom JS from the assets directory
  #   - js/foo.js
  #   - bar.js

menu:
  nav:
    - name: About
      url: about/
      weight: 1
    - name: Posts
      url: post/
      weight: 2
    - name: Tags
      url: tags/
      weight: 3
    - name: Categories
      url: categories/
      weight: 4
    - name: RSS
      url: index.xml
      weight: 5

mediaTypes:
  font/woff2:
    suffixes:
      - woff2
Built-In Shortcodes Math Rendering Mathematical formulas written in LaTeX notation can be rendered to HTML by surrounding them with the math shortcode:{{< math >}}
Inline formulas such as $y=ax+b$ are supported, displayed formulas as well:

$$e^{i\pi}+1=0$$
{{< math />}}
Using this shortcode bundles the KaTeX library with the website, to render math on the client side.
As of 2023, it is not yet possible to render math on the server side with Hugo.Netlify Contact Form A contact form that works with the Netlify Forms service can be inserted with the shortcode:{{< contact >}}
A custom URL for the success page may be given as a parameter:{{< contact ""/success"" >}}
SoundCloud Player A privacy-friendly SoundCloud player can be inserted with the shortcode:{{< soundcloud 123456789 >}}
The parameter is the track ID and can be extracted from the track’s embed code.
The player will only load after user input.Syntax Highlighting This theme makes it possible to automatically use an external stylesheet for syntax highlighting. By default, syntax highlighting in Hugo adds inline styles to the HTML code generated by the highlighter.
This can be problematic if the site has a strict Content Security Policy.To use an external style sheet instead of inline styles, switch the options markup.highlight.noClasses and params.noClasses to false in the site configuration.
The external style sheet is only included on the pages where syntax highlighting is used.The default syntax highlighting style is called monokai.
To use a different style, generate a style sheet with the hugo gen chromastyles command and place it into the site directory at assets/css/syntax.css.Custom CSS and JS This theme offers two ways to add custom CSS or JS assets, allowing minor modifications to be applied without needing to create a fork.Site-Wide Custom CSS and JS files can be loaded as part of the base asset linked by every page. To do so, their filenames have to be added to the site configuration:params:
  css:
    - css/foo.css
    - bar.css
  js:
    - js/foo.js
    - bar.js
The paths are relative to the asset directory.
In this example, the file paths relative to the site root would be: assets/css/foo.css, assets/bar.css, assets/js/foo.js, and assets/bar.js.Dynamically Embedded Sometimes, custom CSS or JS is needed only on specific pages. This theme offers a mechanism to load CSS or JS assets through shortcodes.
The assets are loaded only once per page, even if they are required by several shortcodes in the same page.To load a CSS or a JS resource on each page where a shortcode is used, the shortcode template has to add the resource to the css or the js key of the Scratch variable.
For instance, a shortcode template myshortcode.html containing the line{{ resources.Get ""myscript.js"" | fingerprint | .Page.Scratch.SetInMap ""js"" ""myscript"" }}
will cause myscript.js to be loaded on every page where myshortcode is used.As a real-life example, this is the template for the built-in SoundCloud shortcode:{{ resources.Get ""css/soundcloud.css"" | minify | fingerprint | .Page.Scratch.SetInMap ""css"" ""soundcloud"" }}
{{ resources.Get ""js/soundcloud.js"" | minify | fingerprint  | .Page.Scratch.SetInMap ""js"" ""soundcloud"" }}
<div class=""Soundcloud"" data-id=""{{ .Get 0 }}""></div>
License This theme is licensed under the Apache License 2.0.See AlsoHugoplateLightbiPaigeAcademicAnubis",NA
Bjørn Erik Pedersen,103,2023-09-20,MIT,"Gallery, Responsive",Gallery Deluxe,Fast gallery suitable for lots of images.,https://github.com/bep/gallerydeluxe,https://staticbattery.com/,"Note 1: See this Gallery Deluxe Starter for a fast route to get this up and running.Note 2: If you need multiple galleries, see Galleries Deluxe.ConfigurationCreditsA Hugo Module to show a photo gallery. It’s very fast/effective, especially if you have lots of images on display.This theme is what you see on staticbattery.com which, at the time of writing this, scores 100 at Google PageSpeed for both mobile and desktop.Configuration The recommended way to add this to your site is to include it as a Hugo Module. See Gallery Deluxe Starter for a starter template. Another example is staticbattery.com.Params [params]
    [params.gallerydeluxe]
        # Shuffle the images in the gallery to give the impression of a new gallery each time.
        shuffle = false

        # Reverse the order of the images in the gallery.
        reverse = false

         # Enable Exif data in the gallery.
         # See https://gohugo.io/content-management/image-processing/#exif-data for how to filter tags.
        enable_exif = false

          # Optional watermark file for the large images.
        [params.gallerydeluxe.watermark]
            image = ""images/gopher-hero8.png"" # relative to /assets
            posx  = ""left""                    # one of ""left"", ""center"", ""right""
            posy  = ""bottom""                  # one of ""top"", ""center"", ""bottom""
If you want full control over how your images gets created, create and adjust a copy of layouts/partials/gallerydeluxe/create-thumbs.html into your own project.Credits Credit to Dan Schlosser for the Pig JS library.See AlsoAcademicAutoPhugoBilberry Hugo ThemeBridgetDoors",NA
Yurizal Susanto,101,2023-02-28,MIT,"Blog, Light, Minimal, Personal",Manis,Sweet little theme for personal website or blog,https://github.com/yursan9/manis-hugo-theme,NA,"Manis Hugo ThemeIt’s a minimalist and responsive theme for Hugo Static Site Generator. It’s
name taken from Indonesian Language for Sweet.Table of Contents FeaturesGet StartedTheme OnlyConfigurationChange Latest SectionCustom CSSDisqus ConfigurationMaking Own Navigation BarOther LanguageDevelopmentLicenseFeatures Like I said, it’s really minimal. Its doesn’t even have grid or anything nice like that.Configurable color!Code Highlighting (HighlightJS).Print.css (for single post only)Responsive.Social Icon Links.No Grid no worry.Disqus Support.Utterances Support.Translatable.Dark Mode Support.Get Started If this is your first time using Hugo, and you want to use this theme. Follow the instruction below:mkdir name_of_web
cd name_of_web
git clone https://github.com/yursan9/manis-hugo-theme themes/manis
cp themes/manis/exampleSite/config.toml config.toml
hugo new blog/hello.md
Edit the config.toml according to your preference. Then edit content/blog/hello.md to
start writing your first post. (Look at the exampleSite/content for example.)Theme Only To only install Manis, you can clone this repository. The following command will clone Manis in your site’s base directory.cd path/to/site/dir
git clone https://github.com/yursan9/manis-hugo-theme themes/manis
Ensure you have blog and work sections to make this theme works.content/
├── blog
│   └── _index.md
└── work
    └── _index.md
Configuration For configuration example you can look at the exampleSite/config.toml (and copy that too!). I put some commentary to, hopefully, guide you at using this theme.Change Latest Section You can edit which sections show up as latest posts and latest works by editing mainSections and workSections. workSections is optional.# Configure which sections for Latest Posts
mainSections = [""blog"", ""post""]
# Configure which sections for Latest Works
workSections = [""work""]
Custom CSS If you want to make a change for this theme, other than forking, you can also supplied custom CSS. Maybe you want to change the font or size of image or icon, then custom CSS is your pal.First, edit your config.toml, add the custom CSS filenames to custom CSS. You can supplied more than one custom CSS. Just be aware of the CSS load order.[params]
    customCSS = [""/css/icon.css""]
Then, make a new static/css/icon.css file. After that you can write your custom CSS to that file:.icon-social {
    width: 2rem;
    height: 2rem;
} 
If you follow the above instruction, you will change the size of icon on footer without forking the theme.Disqus Configuration To add Disqus support, edit your site config.toml. Add your discus’ shortname to disqusShortname and add list of sections that you want to support disqus to params.disqusSections:disqusShortname = ""your-disqus-shortname""

[params]
    disqusSections = [""blog""]
Making Own Navigation Bar Top navigation bar in Manis is made by configuring the navigation bar in config.toml with the following code:[menu]
    [[menu.main]]
        name = ""Blog""
        url = ""/post/""

    [[menu.main]]
        name = ""About""
        url = ""/about""
Other Language Manis already translated to Bahasa Indonesia. But, if you want to translate this theme to your own language, look for the example in i18n/en.yaml and i18n/in.yaml.And then you edit the site’s config.toml like this.defaultContentLanguage = ""en""
[languages.{Your Language Code}]
    lang = ""{Your Language Code}""
    languageName = ""{Your Language Name. example; Bahasa Indonesia or Japanese}""
    weight = 1
Development If you found bug, or anything that itch you. Tell me! or maybe make PR.License Manis is licensed under the MIT License. Check the LICENSE file for details.“Moon Icon” and “Sun Icon” by Font Awesome are licensed under CC BY 4.0.See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
kdevo,79,2023-11-27,Apache License 2.0,"Blog, Landing, Minimal, Personal, Portfolio, Responsive",Osprey Delight,Blazingly fast and modular theme perfectly suited for showing your work.,https://github.com/kdevo/osprey-delight,https://hugo-mods.github.io/,"



Overview Osprey Delight is the free-minded artist’s choice for a clutter-free and blazingly fast single-page portfolio.It’s perfectly suited to show off your awesome work!It tastes a bit different than the great Osprey theme and adds awesome modular functionality to your delight.Showcase Check out how Osprey Delight performs in the real-world:Hugo Mods - This theme is built around the Hugo Mods presented on the site. This site also has the complete source code available.Protonaut Music - Musician and top contributor whose highly recognizable site got kickstarted by the theme.KDEVO - It wouldn’t be me if I would not run this theme personally to ensure that everything runs smoothly.Features Modular and made out of extensible section building blocks:About: Introduce yourselfGallery: Show your work using a grid-based gallery with interactive modal boxesBlog: Lightweight blog featuresContact: Contact form with Basin support and built-in spambot protectionUse your high-quality images assets:Lazy image loading plus completely automatic resizing using lazyimg moduleBlur-up technique using automatic low-quality image placeholders (LQIP)Modern WebP support with fallback for older browsersSEO:Score 100 at PageSpeed Insights. Every bit is fine-tuned with performance in mind!Auto-generated structured ensures that everyone finds youDelightful UX:Choose between different themesAwesome social icons in footer via icons moduleSmooth scrolling plus scroll-spyAutomatically fetches GitHub repo dataSane fallbacks for No-Script/No-JS usersHeavily customizable - no need to maintain a fork!In general, many open issues of the original theme have been resolved and code has been rewritten.Contribute and show your support There are multiple ways to show your support if you like this project:❤️ Become a sponsor⭐ Give the project a star to ensure everyone finds itStart contributingQuickstart Please make sure to have Hugo’s extended version and Go installed.
If you’re new to Hugo, visit the docs for more info and general site setup.Initialize your repo as a module (replace <username> and <projectname>):hugo mod init github.com/<username>/<projectname>
Download the documented config file, e.g. via curl:curl https://raw.githubusercontent.com/kdevo/osprey-delight/master/exampleSite/config.yaml -O
Continue reading for configuration options.Upgrade Receive the latest features of the theme:hugo mod get -u
It is good practice to check the release notes before upgrading.Configuration and Usage  It’s best if you simply check out the fully commented config file.
This theme follows a learning-by-doing approach.Images This theme is asset-driven! It “knows” how to handle your precious assets, and there usually is no need for manual resizing.
For that to work, provide all of the following images in the assets directory (do not use the static directory).The following table shows recommendations regarding the required assets:Image TypeConfig KeyMinimum WidthNoteLogologoBig (config.yaml)200pxTransparent, minimum margin top/bottomNavbar-LogologoSmall (config.yaml)96pxTransparent, small margin top/bottom, prefer square formatGalleryimage (content/gallery/*)400pxTransparent, medium margin top/bottom/left/right, prefer square or landscape formatBackgroundbackground (config.yaml)1920pxOptional, use a high-quality JPGContent files About section To create an about section that renders on the home page, run:hugo new about.md
Gallery item To create a new gallery item, run:hugo new gallery/my-item.md
You will get a fully documented file, which describes each config option separately.Contact form Basin is a free AJAX contact form service that is used by this theme.To set it up:Sign up for a free account and create a form.Copy and paste your form’s URL endpoint to the ajaxBasin config.yaml parameter.Select the Submit this form via AJAX option on your Basin dashboard.Enable spambot protection Under “Setup” → “Set a Custom Honeypot Field”, input _anti_spam_honeypot.
Basin will ignore all messages that contain this specific field. This should work since there is a hidden field that users normally do not use, but spambots will blindly input their data.Please do not make a tick in the “reCAPTCHA” checkbox, this service is not supported and also typically not necessary.Learn more Customize it  Want to have full control over appearance? Check out how to customize the theme more granularly.Need help? This theme has a GitHub-powered community forum!
Feel free to ask questions in the Q&A (please make sure to completely read the docs and existing discussions/questions).Help wanted This README probably needs some documentation improvements for the latest features.
Any PR regarding this is welcome. Please also check out how to contribute!See AlsoAcademicPaigePikohugo-theme-consoleAdritian Free Hugo Theme",NA
Mark Dumay,77,2023-11-24,MIT,"Blog, Bootstrap, Docs, Minimal",Hinode,A clean documentation and blog theme for your Hugo site based on Bootstrap 5.,https://github.com/gethinode/hinode,https://demo.gethinode.com,"Hugo Theme HinodeA clean documentation and blog theme for your Hugo site based on Bootstrap 5







About •
Prerequisites •
Installation •
Configuration •
Contributing •
Donate •
LicenseAbout Online DemoPageSpeed InsightsMozilla ObservatoryHinode is a clean documentation and blog theme for Hugo, an open-source static site generator. Based on the Bootstrap 5 framework, the rendered site is fast, secure, and responsive. Hinode uses FlexSearch to enable full text search across your site. Finally, the theme supports Node Package Manager (npm) to automate the build process and to keep track of dependencies.Detailed information about Hinode is available on the official website.Prerequisites Hinode is a Hugo theme that uses modules to install and maintain various components. It can be installed using either Hugo or npm. If you would like to take advantage of automation, the npm approach is recommended. Refer to the Hinode template for installation instructions with npm.The installation instructions in this readme install Hinode as a regular Hugo theme. Hinode requires the following software to be installed on your local machine.Go binaryHugo (extended version)Git is recommended, but is not a strict requirement.Installation Start a new Hinode project in three steps:Create a new sitehugo new site my-hinode-site && cd my-hinode-site
Initialize the module systemhugo mod init example.com/my-hinode-site
echo ""[[module.imports]]\npath = 'github.com/gethinode/hinode'"" >> hugo.toml
Start a development serverhugo server
Configuration See the official documentation on how to configure your site.Contributing See the official documentation on how to contribute to the open-source development of Hinode.Credits Hinode is inspired by the following themes:Blist - a clean and fast blog theme for your Hugo site using Tailwind CSS.Doks - a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.Donate License The hinode, docs, and template codebase is released under the MIT license. The documentation of Hinode is licensed under the Creative Commons (CC BY-NC 4.0) license. This includes all files within the repository’s /content and /exampleSite/content folders and their children, as well as the “README” in the repository root. This applies to all public repositories maintained by gethinode on GitHub, including the gethinode/hinode, gethinode/template, and gethinode/docs repositories, unless specified otherwise.See AlsoDoksAcademicAce documentationBeautiful HugoBootstrap Theme for Personal Blog and Documentations",NA
Vantage Design,96,2023-05-30,MIT,"Bootstrap, Docs, Light, Minimal, Responsive",Ace documentation,"A documentation theme featuring a clean design, code highlighting and useful shortcodes for writing your project documentation.",https://github.com/vantagedesign/ace-documentation,NA,"Ace documentationCreate beautiful documentation for your projects with Ace for Hugo. Powered by Bootstrap and SASS, featuring must-have features such as syntax highlighting, copy-able code blocks, full search, a responsive layout and the power of Markdown to create your content.Writing documentation has never been so easy.Rich in features Ace offers a variety of custom components and features which are a must-have for building project documentation. Code blocks are enriched with syntax highlighting and a copy button, allowing for your users to easily read your code and copy it into their project. Furthermore, a special version of the code block renders the HTML content in both the code block and on the page, giving your users a preview of what the code looks like.Other shortcodes allow you to use Bootstrap components in your content, such as alerts, buttons, panels, collapse elements and more.Full search allows your users to quickly find the content they require, and a responsive design makes your documentation available on both desktop and mobile devices.Beautiful minimalist design With a minimal design, the attention of users is focused on that which matters: your content.Demo & documentation The documentation for Ace was, of course, built with Ace. Therefore, the documentation for Ace also serves as a demo.Ace demo & documentationInstallation Download from GitHubClone the repo git clone https://github.com/vantagedesign/ace-documentation.gitNote: this theme only works with Hugo’s extended version, due to the SCSS compile functionality.Resources DemoDocumentationIssuesLicenseReporting Issues We use GitHub Issues as the official bug tracker for the Ace documentation. When reporting an issue, please follow the following guidelines:Make sure that you are using the latest version of Ace documentation.Provide us with reproducible steps for recreating the issue, in order for us to find the issue and fix is as soon as possible.Specify your browser and version of Ace.Contributing to Ace Contributions are highly appreciated and may be done by reporting issues with new feature suggestions or bug fixes, or by making pull requests. We’ll try our best to get those sorted as soon as possible.Please make pull requests to the dev branch. Make sure you’re always running the latest version of Ace and that you are not committing breaking changes.Licensing Copyright 2020 [Vantage Design]Licensed under MIT (https://github.com/vantagedesign/ace-documentation/blob/master/LICENSE.md)Social Media Facebook: https://www.facebook.com/vantagedesignofficialInstagram: https://www.instagram.com/vantagedesignofficialThis project is tested with BrowserStack.See AlsoAcademicAdritian Free Hugo ThemeBeautiful HugoBootstrap Theme for Personal Blog and DocumentationsBootstrap-BP",NA
FarseaSH,74,2023-11-13,MIT,"Blog, Gallery, Responsive",Moments,A Hugo theme for micro-blogging,https://github.com/FarseaSH/hugo-theme-moments,NA,"Hugo 主题 Moments | DemoMoments是一款专门为短博文设计的Hugo主题。开发初衷是在微信朋友圈之外做一个纯粹写给自己的，独立的短文/动态空间，去记录生活点滴，个人思绪，发现与想法。后面发现Moments的使用对象不仅仅可以是自己，还可以是一群人，你可以为是朋友、团队，亦或情侣搭建一个专有的Moments空间。Moments is a hugo theme designed for micro-blogging. The original intention is to create a personal space for sharing daily life, thoughts, discoveries & ideas, outside Wechat. Later on, it came to my mind that Moments can be a sharing space not only for a single individual, but also for friends, teams or even couples.Screenshot 特点 Feature 第一款专门支持短博文的Hugo主题响应式设计，桌面端&手机端精心适配拥有和社交平台一致的图片浏览体验简洁的设计，纯净的体验，摆脱社交平台广告支持在Moments中分享主流互联网平台的信息（朋友圈文章，知乎， 哔哩哔哩， 网易云音乐，等等）多用户，和不同的人一起搭建不同的Moments空间(To be expected)RSS接入，第一时间了解朋友的分享快速入门 实例：各种类型的Moment安装与部署实例：各种类型的Moment 包含图片集的Moment ---
name: 赛肯德
avatar: https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg11.360buyimg.com%2Fn1%2Fjfs%2Ft22180%2F273%2F1048905858%2F16927%2Fc863f2d8%2F5b1ee306Nc3fa41e8.jpg&refer=http%3A%2F%2Fimg11.360buyimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630730078&t=818b15beaf41cabfa800ddea79f89445

date: 2021-08-04T11:57:49+08:00

tags:
 - 图片集
 - 美食

pictures:
 - https://p8.itc.cn/images01/20210119/628400a0528c4dc696efdac8749b176d.jpeg
 - https://img.uooyoo.com/img2017/5/9/2017050941664829.jpg
 - https://cdn.pixabay.com/photo/2016/10/13/11/44/chocolates-1737503_1280.jpg
 - https://cdn.pixabay.com/photo/2016/01/11/07/18/cupcakes-1133146_1280.jpg

note: 这是附带图片集的moment
---

你也可以为每条moment附带更多的图片，做成图片集。

比如最近打卡的美食们：
单一图片的Moment ---
name: 福斯特
avatar: https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn17%2F0%2Fw400h400%2F20181111%2F89f9-hnstwwq6307162.jpg&refer=http%3A%2F%2Fn.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630729931&t=e8c4135ba966d5fbfd5d30adf96551c0

date: 2021-08-04T23:57:46+08:00

tags:
 - 图片
 - 最新moment

pictures: 
 - https://cdn.pixabay.com/photo/2016/03/09/11/57/grand-canyon-1246248_1280.jpg

note: 这是加入图片的moment
---

你可以为每条moment附带图片。

比如说，好看的风景：
附带网页链接的Moment ---
name: 瑟德
avatar: https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimage.biaobaiju.com%2Fuploads%2F20190822%2F14%2F1566456820-UokjFbWpuN.jpg&refer=http%3A%2F%2Fimage.biaobaiju.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1630729842&t=560fc243f983753c1f4541a1d9c0d365

date: 2021-08-03T11:57:40+08:00

tags:
 - 链接
 - Github
 - 不知道贴什么标签

link: https://www.github.com
link_logo:
link_text: GitHub - Where the world builds software · GitHub

note: 这是加入链接的Moment
---
你也可以像这样附带网络链接。

GitHub是通过Git进行版本控制的软件源代码托管服务平台，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、P. J. Hyett和汤姆·普雷斯顿·沃纳使用Ruby on Rails编写而成。（引用自Wikipedia）
纯文字Moment ---
name:
avatar:

date: 2021-08-01T11:33:28+08:00

tags:
 - default
 -

note: 这是纯文字的moment
---
当然，你也可以什么都不附带，只发送纯文字moment。
安装与部署 安装 $ hugo new site my_moments_name
$ cd my_moments_name
$ git clone https://github.com/FarseaSH/hugo-theme-moments themes/moments
第一次配置 将以下设置覆盖到config.toml文件中baseURL = ""https://farseash.github.io/demo-hugo-theme-moments/""
languageCode = ""zh-Hans""
theme = ""moments""
paginate = 10
paginatePath = '.'

[params]
    title = ""Moments Demo""
    signature = ""人生如逆旅，我亦是行人。""
    cover = ""https://cdn.pixabay.com/photo/2018/03/13/22/53/puzzle-3223941_1280.jpg""

    name = ""Default User""
    avatar = ""/img/default_avatar.png""
创建新的Moment hugo new moments/your_moments_name.md
再进入content/moments文件夹打开相应的markdown文件进行编辑。将自己的Moments发布到网上 请参考Hugo文档deploy部分Hugo Deploy | Hugo更多的设置 修改配置文件 config.toml 修改对应配置文件config.toml中的参数，以满足你的要求。对于下面没有提及的参数，请不要修改。baseURL: 你所部署发布的网站地址。如果你的主页url是在域名子路径下（如 http://site.com/subpath/），请务必设定此项。paginate: 单一页面上，显示的Moment的数量title: 页面顶端的标题signature: 页面顶端的签名cover: 页面顶端的封面图name: Moment默认发布人avatar: Moment默认发布人的头像未来功能开发&愿景  RSS订阅 将Moments打印，作为实体手帐 Moments评论功能 更多平台，更多媒体类型的外链支持最后一段是我发布Moments demo时候写下的愿景，希望自己不忘初心，与Moments一起成长。Moments是一款Hugo主题，它为你提供了一个兼具社交性与私密性的记录分享空间。它可以是你的朋友圈，并利用RSS把你的moment推送给那些你想告诉的人它可以是你的私人手帐，将你的moment打印出来放进日记本的夹层里面它也可以是你的社交账号，附在博客旁，贴上那些短小精干的moment它还可以是你们的团队平台，和朋友、队友们一起创建属于你们的momentsSee AlsoAcademicAutoPhugoBilberry Hugo ThemeHB Starter Theme TemplateHugo Split Gallery",NA
Nixentric,70,2023-12-02,MIT,"Blog, Light, Minimal, Personal, Responsive",Lowkey,Lowkey Hugo theme is a simple and modern theme that is inspired by Adam Wathan's Blog.,https://github.com/nixentric/Lowkey-Hugo-Theme,https://lowkey-demo.pages.dev,"Lowkey Hugo ThemeLowkey Hugo theme is a simple and modern theme that is inspired by Adam Wathan’s Blog. It is built using Tailwind CSS, which allows for easy customization. The theme features a minimalistic and streamlined layout, with a focus on readability and ease of use. With its lightweight code and fast loading times, Lowkey Hugo theme is a great choice for those looking to create a personal blog and user-friendly blog.Special Contributors First, I am very grateful to the first Contributor who has made a significant contribution to this project.Special Metion:🥇 @diegopaiva1 - entusiasta.devAnd also to the other contributors 💌:Demo Click HereInstallation Open a Terminal and navigate to the root directory of your Hugo site. Then, run the following command to add the theme as a submodule to your site’s git repository:git init
git submodule add https://github.com/nixentric/Lowkey-Hugo-Theme.git themes/lowkey
Delete config.toml / hugo.tomlCopy all of the ExampleSite’s files and directories into the root directory of your Hugo site, overwriting any existing files with the same names.Install packagesnpm install
Technology TailwindCSS with PostCSS (Hugo Pipes)Spesification HUGO_VERSION 0.110.0See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
Zachary Betz,88,2023-01-03,MIT,"Blog, Bootstrap, Minimal",Minimal Bootstrap Hugo Theme,A minimal hugo theme made with bootstrap that focuses on content readability,https://github.com/zwbetz-gh/minimal-bootstrap-hugo-theme,NA,"⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️WARNING: This repo is no longer maintained. It’s archived and read-only.⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️Minimal Bootstrap Hugo ThemeA minimal hugo theme made with bootstrap that focuses on content readability.Table of contents DemoMinimum Hugo versionInstallationUpdatingRun example siteConfigurationFaviconsOverrideHomepage exampleConfigure cookie consentSyntax highlightingShortcodesblockquoteimgAbsimgRelimgProcmastodonfileRelGetting helpDemo https://minimal-bootstrap-hugo-theme.netlify.com/Minimum Hugo version Hugo version 0.60.1 or higher is required. View the Hugo releases and download the binary for your OS.Installation From the root of your site:git submodule add https://github.com/zwbetz-gh/minimal-bootstrap-hugo-theme.git themes/minimal-bootstrap-hugo-theme
Updating From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/minimal-bootstrap-hugo-theme/exampleSite:hugo server --themesDir ../..
Configuration Copy the config.toml from the exampleSite, then edit as desired.Favicons Upload your image to RealFaviconGenerator then copy-paste the generated favicon files under static.Override Homepage example As an example, let’s say you didn’t like the default homepage, and wanted to design one of your own. To do this, you would:Copy file YOUR_SITE/themes/minimal-bootstrap-hugo-theme/layouts/index.htmlPaste that file to YOUR_SITE/layouts/index.htmlEdit index.html as desiredConfigure cookie consent You can change the position, layout, color palette, “Learn more” link, compliance type, and custom text of the cookie consent popup. To do this, you would:Copy file YOUR_SITE/themes/minimal-bootstrap-hugo-theme/layouts/partials/cookie-consent.htmlPaste that file to YOUR_SITE/layouts/partials/cookie-consent.htmlComplete the cookie consent wizardPaste the generated code from the wizard into cookie-consent.htmlSyntax highlighting Hugo has built-in syntax highlighting, provided by Chroma. It is currently enabled in the config.toml file from the exampleSite.Checkout the Chroma style gallery and choose the style you like.Shortcodes blockquote This will format your blockquotes nicely. To use it, put the quote within the shortcode. The author argument is optional.{{< blockquote author=""Laura Ingalls"" >}}
I am beginning to learn that it is the sweet, **simple** things of life which are the real ones after all.  
{{< /blockquote >}}
imgAbs This will insert an image into your content by absolute path. To use it, pass the pathURL of your image.These arguments are optional: alt, class, style.{{< imgAbs 
pathURL=""img/some-img.png"" 
alt=""Some description"" 
class=""some-class"" 
style=""some-style"" >}}
imgRel This will insert an image into your content by relative path. To use it, pass the pathURL of your image.These arguments are optional: alt, class, style.{{< imgRel 
pathURL=""img/some-img.png"" 
alt=""Some description"" 
class=""some-class"" 
style=""some-style"" >}}
imgProc This will process an image from a page bundle, then provide a link to the original image. To use it, pass the image name, command, and command options.The command argument will be one of: Resize, Fit, Fill. For a deeper dive see the hugo docs for image processing.These arguments are optional: alt, class, style.The below example resizes an image to 800px width, while keeping the aspect ratio.{{< imgProc 
img=""some-img.png"" 
command=""Resize"" 
options=""800x"" 
alt=""Some description"" 
class=""some-class"" 
style=""some-style"" >}}
mastodon This will embed a toot in an iframe.These arguments are optional: width, height.{{% mastodon
status=""https://mastodon.social/@kevingimbel/100700713283716694""
width=""1000"" height=""500"" %}}
fileRel This will insert a link to a file by relative path into your content.
To use it, pass the pathURL of your file.The arguments class and style are optional.{{< fileRel 
  pathURL=""files/file.pdf""
  name=""filename"" 
  class=""someclass"" 
  style=""somestyle"" >}},
Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines.See AlsoBeautiful HugoBootstrap-BPDoksHinodeHugo Bootstrap Theme",NA
Austin Gebauer,86,2023-05-01,MIT,"Blog, Minimal, Personal",devise,"A fast, minimal, responsive Hugo theme for blogs.",https://github.com/austingebauer/devise,NA,"DeviseA fast, minimal, responsive Hugo theme for blogs.For a live demo of the theme, see at:themes.gohugo.io/deviseaustingebauer.devFeatures All of Hugo’s builtin Content ManagementEasy installation of Google Analytics via Hugo configuration fileFast loading with a 95-100 score on Google PageSpeedAbility to use Bootstrap 4 CSS classes via HTML/CSS in MarkdownAbility to use Font Awesome iconsAbility to customize the theme styles via SassAbility to customize the following items via Hugo configuration fileMeta descriptionTitleSubtitleImageImage border colorNavigation menuSocial iconsLast ’n’ recent postsBackground colorFont familyFont colorUsage This following guides installation, configuration, and updating of the Devise Hugo theme.Installation Before installing this theme, be sure to install Hugo
and create a new site.To install the theme, run the following from the root directory of your Hugo site:$ git submodule add https://github.com/austingebauer/devise.git themes/devise
Configuration Next, open the config.toml file in the root of your Hugo site and set the theme:theme = ""devise""
Example config.toml file with all configuration features filled out:baseURL = ""https://example.com""
title = ""Your Website Title""
languageCode = ""en-us""
theme = ""devise""
relativeURLs = true
enableEmoji = true
googleAnalytics = """"
enableRobotsTXT = true
copyright = ""&copy; Copyright Year, Your Name""

# Main menu items
[menu]
  [[menu.main]]
    identifier = ""about""
    name = ""About""
    title = ""About""
    url = ""/about/""
    weight = -110
  [[menu.main]]
    identifier = ""posts""
    name = ""Posts""
    title = ""Posts""
    url = ""/post/""
    weight = -100
  [[menu.main]]
    identifier = ""categories""
    name = ""Categories""
    title = ""Categories""
    url = ""/categories/""
    weight = -90

# Configuration Features
[params]
  description = ""Your meta description""      # Your meta description of the site
  header_title = ""Your Name""                 # Your header title
  header_subtitle = ""Your Creative Subtitle"" # Your header subtitle
  home_image = ""/images/avatar.png""          # Path to header image starting from the static directory (optional)
  recent_posts = 5                           # Max amount of recent posts to show
  mainSections = [""posts"", ""post"", ""blog""]   # Main sections to include in recent posts
  [params.style]                             # CSS style overrides
    backgroundColor = ""#f8f9fa""
    homeImageBorderColor = ""#ffffff""
    fontFamilyBase = ""Helvetica Neue""        # First-choice font
    fontColor = ""#212529""
  [[params.social]]
    fa_icon = ""fab fa-github fa-1x""          # Font Awesome icon class
    href = ""http://github.com/youruser""      # Link to associate with icon (http://, https://, mailto:)
  [[params.social]]
    fa_icon = ""fab fa-linkedin-in fa-1x""
    href = """"
  [[params.social]]
    fa_icon = ""fab fa-twitter fa-1x""
    href = """"
  [[params.social]]
    fa_icon = ""fas fa-at fa-1x""
    href = """"
Updating To get updates to the theme, run the following from the root directory of your Hugo site:$ git submodule update --remote themes/devise
Adding Custom Styles Adding custom styles to the devise theme is simple. There are two options
available for doing so.Option 1: In the config.toml file of your website, you can set the following custom style
parameters:[params.style]
  backgroundColor = ""#f8f9fa""
  homeImageBorderColor = ""#ffffff""
  fontFamilyBase = ""Helvetica Neue""
  fontColor = ""#212529""
If you’d like to see other custom styles available as config parameters, please open an issue.Option 2: To add custom Sass styles to the devise theme, you’ll
need to add the following file to the assets
directory of your site:assets/sass/custom.scssIn the file, you can use Sass syntax to declare
your custom styles. After doing so, you should see custom styling added to
your devise based Hugo site.Demo To run a live demo of the theme on your laptop, run the following from the exampleSite directory of the
devise theme:hugo server --themesDir ../.. --watch --verbose --cleanDestinationDir --disableFastRender
For a live demo of the theme, see at:themes.gohugo.io/deviseaustingebauer.devContributing If you have an idea for a new feature or found a bug, please feel free to use Github
issues to let me know.License MITSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Jack Liu,85,2023-08-02,MIT,Blog,Virgo,Just for fun.,https://github.com/loveminimal/hugo-theme-virgo,https://loveminimal.github.io,"🎨 hugo-theme-virgo🧪 Demo / 演示简介 一个简单纯净的主题，欢迎使用。🎉🎉🎉‘她’包含：两种模式：纯净、酷爽，内置但不限于精美的本地字体，高亮的层级目录，以及简单强大的本地文章实时搜索功能等。更新日志 - 2023-03-23 14:58 增加 utterances 评论插件
- 2023-03-22 16:08 更新主页快捷联系选项，增加知乎和简书
- 2023-03-21 17:58 更新导航页面文件结构 - `nav.md` 或 `nav/index.md`
- 2023-03-19 00:05 优化导航页面快速跳转
快速开始 首先，下载该主题。cd YOUR_SITE_DIR	# 本地站点目录
git clone https://github.com/loveminimal/hugo-theme-virgo.git themes/virgo
# OR
cd YOUR_SITE_DIR
git submodule add https://github.com/loveminimal/hugo-theme-virgo.git themes/virgo
💡 使用哪种方式呢？如果你有这个疑问，那么就选择第一种。然后，更新你站点的 config.toml 内容，如下（后续可按需修改）：baseURL = 'https://walkssi.com/'
languageCode = 'zh-cn'
title = 'Walkssi'

# 启用主题
theme = 'virgo'

hasCJKLanguage = true
summaryLength = 80
paginate = 11
enableGitInfo = true

[params]
    author = 'Jack'
    slogan = 'Life should be interesting.' # 'Life is just a joker.'

    # 页面语言，默认中文
    en = false
    # 英文首页标题，默认 'Virgo'
    homeTitleEn = 'Walkssi'
    # 中文首页标题，默认 ‘一晌贪欢’
    homeTitleZh = '遛达西'

    # 激活暗色模式，
    # 由于静态页面的限制，我们使用浏览器本地存储来记忆该状态，
    # 如果设置为 `true` 后，默认不是暗色模式，清除浏览器缓存后刷新页面即可
    dark = false

    # 文章列表页单列显示
    isSingleColumnOfPostList = true

    # 是否显示相邻页链接
    isShowPrevNextLink = true

    # 激活页面加载时的过渡动画
    hasActiveAnimate = true

    # 激活 cool 模式，酷爽但是消耗资源也更多，
    # 如果想更换页面背景，只需要将图片命名为 `default.jpg` 后，置于 `/static/imgs/bg` 文件夹中即可，
    # 浏览器有缓存，更换后强制页面刷新（快捷键为 Ctrl+Shift+R）一下即可
    hasActiveCool = false

    # 展开/折叠代码块，默认不折叠，
    # 设置为 `true` ，则默认折叠所有代码块，
    # 提示，在移动设备中，系统设置为永久折叠代码块
    # (该项设置不重要，完全是个人喜好)
    hasFoldAllCodeBlocks = false

    # 如下导航链接，你应该创建对应的 `.md` 文件，以生成对应的页面
    # -----------------------------------
    # Nav - nav.md or nav/index.md 
    # Search - search.md or search/index.md
    # Archive - archive.md or archive/index.md
    # Wiki - posts/wiki.md or wiki/index.md
    # About - about.md or about/index.md
    # -----------------------------------
    # 菜单选项定制，使用 `00、01、23` 等进行选项顺序调整
    # 🐶🎉👀💡👓🐌
    [params.menu]
        [params.menu.00]
            active = true
            path = '/nav'
            en = 'Nav'
            zh = '导航'
            icon = '🎯'
        [params.menu.11]
            active = true
            path = '/search'
            en = 'Search'
            zh = '搜索'
            icon = '🔎'
        [params.menu.22]
            active = true
            path = '/posts'
            en = 'Posts'
            zh = '文章'
            icon = '📜'
        [params.menu.33]
            active = true
            path = '/archive'
            en = 'Archive'
            zh = '归档'
            icon = '🎉'
        [params.menu.44]
            active = true
            path = '/notes'
            en = 'Notes'
            zh = '草稿'
            icon = '⚗️'
        [params.menu.55]
            active = true
            path = '/about'
            en = 'About'
            zh = '关于'
            icon = '🐌' 
    
    # 首页图片/文字
    [params.img]
        # 如果你不想显示图片，想显示一段话，只需要
        # 设置 `noImgButWords` 为 true 即可
        notImgButWords = false
        # 内置了 `girl.jpg, wukong.jpg, and tux.jpg, cat.svg ……`，当然你可以
        # 把自己喜欢图片放在 `static/imgs/` 目录中，并在 `src` 引用它,
        # 你还可以通过 `width` 调整引入图片的显示大小，
        # 如果，将 `width` 设置为 '' 或 0 ，
        # 将默认使用图片自身分辨率尺寸
        src = 'cat.svg'
        width = 0
        # words = ""Stay hungry, Stay foolish. <br>Your time is limited, so don't waste it living someone else's life. <br>Have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary. <br>-- Steve Jobs.""
        # words = ""多少事，从来急；<br>天地转，光阴迫。<br>一万年太久，只争朝夕。<br>-- 教员""
        words = ""“照顾好自己的身体和情绪，<br>这场人生，<br>你就赢了一大半，<br>其余的其余，<br>人生自有安排。”""

    [params.contact]
        icp = '豫ICP备2022002918号-1'             # 备案号，如果你不想显示，设置为 '' 空即可
        icplink = '//beian.miit.gov.cn'           # 备案链接
        weibo = '6867589681'                     # e.g. https://weibo.com/u/6867589681
        wechat = 'imgs/bg/wechat.jpg'           # 微信二维码地址
        # zhihu = 'loveminimal'                   # e.g. https://www.zhihu.com/people/loveminimal
        # jianshu = 'eebcc2974936'                # e.g. https://www.jianshu.com/u/eebcc2974936
        email = 'loveminimal@outlook.com'
        github = 'loveminimal'                  # e.g. https://github.com/loveminimal
        bilibili = '11608450'                   # e.g. https://space.bilibili.com/11608450
        # twitter = 'loveminimal163'                 # e.g. https://twitter.com/loveminimal163
        # facebook = 'loveminimal'              # e.g. https://facebook.com/loveminimal
        # instagram = 'loveminimal163'          # e.g. https://www.instagram.com/loveminimal163
        # youtube = 'UCkWIBwe3rZTDAmBs0GJngkA' # e.g. https://www.youtube.com/channel/UCkWIBwe3rZTDAmBs0GJngkA
        # telegram = 'loveminimal'                # e.g. https://web.telegram.org/k/#@loveminimal
        color = '#696969'                        # 图标颜色，默认为浅灰色
        slogan = 'Find me via : )'               # 联系标语，不想显示，可以置空

    # 在开发环境下（http://localhost:1313/），不再启用评论插件，
    # 如果想在开发环境下启用它，修改服务端口即可，如下
    # hugo server -p=1314
    [params.utterances]
        active = true                             # 是否启用评论插件
        repo = ""loveminimal/comment""               # 输入你的仓库名称
        issueTerm = ""pathname""
        theme = ""github-light""
        crossorigin = ""anonymous""

# 以下为 Markdown 解析擎的一些设置，
# 建议保持不变
[markup]
    [markup.asciidocExt]
        preserveTOC = true
    [markup.highlight]
        # 代码块显示风格、行号显示
        style = ""github""
        lineNos = false
    [markup.tableOfContents]
        endLevel = 3
        ordered = false
        startLevel = 2
    [markup.goldmark]
        [markup.goldmark.renderer]
            unsafe = true
现在，你就可以运行 hugo server -D 开始你的折腾之旅了。导航页 如果，你想使用导航页并正确显示，那么就应该严格按照下面这种格式搭建你的 nav.md 文件结构：---
title: ""Nav""
draft: false
---

<div class=""nav"">

## 🌞 *分类 ONE*
- [mineitem one](/)
- [mineitem two](/archive)
- [mineitem three](https://nav-item-three.com)
 
## 🔨 *分类 TWO*
- [toolitem three](https://nav-item-three.com)

## 📑 *分类 THREE*
- [docitem one](/)
- [docitem two](/archive)
- [docitem three](https://nav-item-three.com)

</div>

## 🔖 *标签 BOOKMARKs*

<div class=""bookmark"">

- bookmark item one https://bookmark-item-one.com
- bookmark item two https://bookmark-item-two.com
- bookmark item three https://bookmark-item-three.com

</div>
为什么要做格式方面的限制呢？众所周知，Markdown 对 Table 的支持很一般，鉴于导航页的内容主要是外链和书签，使用列表管理是最方便的。另外，我们会使用 JS 进行内容项的统计，所以就需要使用者遵守格式，不然可能页面显示可能会不正常。标记语法增强 > 使用 JS 对 markdown 做出的一些增强性修改不止一次吐槽过 markdown 虽然是纯文本性质的，但是其某些标记语法真的是让人不敢恭维，直观性和表现力都是一般。不过，从另一个方面来说，本来就是轻量级的标记语言，不可能承载太多。本来想直接修改 markdown 引擎来实现，研究了一下，还要颇费一番工夫。鉴于仅满足于个人使用，用一些曲线方式使用 js 来实现反而更加简单些。此处就记录一下针对 hugo-theme-virgo 做的一些魔改。行内格式 Markdown 中的行内格式有以下几种：语法效果转译 html 标签**加粗**加粗<strong>加粗</strong>*斜体*斜体<em>斜体</em>~~删除线~~删除线<del>删除线</del>` 行内代码行内代码<code>行内代码</code>—下划线<u>下划线</u>是的，markdown 中没有下划线的标记语法。本来想用行内代码的标记格式做魔改，鉴于博文中出现行内的代码的概率较高，遍历起来相对更耗性能（虽然并没有多少），故决定选择 *斜体* 语法标记，其使用频率不多，且其对应的 Org Mode 中可以直接显为粗体显示。新增语法效果*_下划线*_下划线*=高亮*=高亮| *-高亮* | -高亮 | ❌| *=吐槽系* | =吐槽系 | ❌如此，我们便增加了 _下划线 和 =高亮 两种语法标识了。另外，在文章中，尤其是一些摘录和转载的文章中，我们需要做一些随笔，之前我们是使用 <div class=""oh-essay"">...</div> 这种标签插入，如上表，我们也对其做了语法标识。如上，所示，更改了一些语法标记，因为有的 Markdown 引擎中使用 ==高亮== 来高亮文本，我们这里就用 *=高亮* 来表示，以做到在观感上统一。另外，我们不再使用 *=吐槽系* 来表示个人在摘录或编辑中的个人想法展示，主要是由于在不支持当前语法标记的主题中，它只能以斜体展示，不容易和正文内容作区分。我们使用 >:: 吐槽系 或 > :: 吐槽系 来表示，如此在不支持的情况下，可以解析为引用样式，便于区分。之前我们做了一些 snippet 进行 html 标签的插入，以实现以上效果，但是这就限定在了某些编辑器中，些许背离了纯文本输入的理念，以上小小的增强，使得我们可以任何文本编辑器中进行方便的文本输入。>:: 好吧，尽管它们只能在 `hugo-theme-virgo` 中才有效果 😅
> ::好吧，尽管它们只能在 `hugo-theme-virgo` 中才有效果 😅
> :: 好吧，尽管它们只能在 `hugo-theme-virgo` 中才有效果 😅
上述语法标记是等价的，会被解析为如下样式：🗨️ | 好吧，尽管它们只能在 hugo-theme-virgo 中才有效果 😅
代码块折叠 在 Markdown 中，包裹代码块很方便。但有时候在博文中，我们可能引入较多的代码片段，这会导致正文内容的间断，所以，允许其进行折叠，可以在 config.tom 中，使用 hasFoldAllCodeBlocks: true 进行初始化。既然已经可以折叠了，这里我们不妨用它再做一个更通用的折叠板（默认折叠），原理也很简单，利用 lang 判别。如果其为 _lang 这种格式，则表示轻量级代码折叠 - 不换行；如果使用 __lang 则折叠板中内容会自动换行。Wiki 链接及图片语法渲染 最近使用 Obsidian ，其使用的链接及图片格式为 Wiki 语法，如下：名称描述链接[[link]]链接（带描述）[[link | desc]]图片![[path/to/img]]图片（带尺寸）![[path/to/img | 200]]Hugo 默认的 Markdown 引擎是不支持渲染这种语法的，我们这里做了一下增强，现在你可以畅快地使用 Obsidian 来编辑你的博客了。= 图片和链接，好像 Wiki 的这种语法写起来更加简洁。其实，还是使用 <img> 标签的通用性更好些，不过许多软件的即时渲染又不支持，就很伤。结语 制作主题，对 ‘强迫症’ 来说，真的是 ……See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Yihui Xie,84,2023-08-15,MIT,"Blog, Magazine, Minimal, Responsive",XMag,A minimal magazine theme for Hugo,https://github.com/yihui/hugo-xmag,NA,"HUGO XMAGXMag is designed based on the Hugo theme XMin, and similarly, features minimalism but with a magazine style on the homepage inspired by The Signpost on Wikipedia.This theme includes a few cool features:Responsive article summary blocks on homepageThumbnails in summary blocksMagazine title in Blackletter (𝔅𝔏𝔄ℭ𝔎 𝔏𝔈𝔗𝔗𝔈ℜ)Github edit linksAuthor info and site info at the bottom of an articleMathJax for LaTeX math expressionsIt also supports features that are probably not even worth mentioning:Google Analyticshighlight.js for syntax highlighting of code blocksDisplay categories and tags on single pagesTable of contents for single pagesMost features can be configured through config.toml, and a few can be enabled by custom layouts. Please see the detailed documentation on the About page of the theme website. The source code is available on Github (MIT license).Quickstart guide If you are an R user, the easiest way to get started with this theme is to install the blogdown package, and use blogdown::new_site() to create a new site:install.packages('blogdown')
blogdown::new_site(theme = 'yihui/hugo-xmag')
If you do not use R, please read on.Watch out The standard Quickstart Guide fails. In Step 3 do not proceed past git init.Then, to install this theme in your Hugo siteDownload this repo and unzip itChange directory to the site rootCopy the downloaded theme into themes/: cp -r ~/Downloads/hugo-mag-master themes/hugo-magCopy the example site into your site root: cp -r themes/hugo-mag/exampleSite .Now resume the Quickstart Guide at Step 5.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
kaisugi,82,2022-11-06,MIT,"Blog, Dark, Light, Minimal",HugoTeX,LaTeX style hugo theme,https://github.com/kaisugi/HugoTeX,https://hugotex.vercel.app/,"HugoTeXA hugo theme which looks like a LaTeX document.Live Demo: https://hugotex.vercel.app/This theme is heavily inspired by latex-css.Quick Start git clone https://github.com/kaisugi/HugoTeX
cd HugoTeX/exampleSite
hugo server -t ../..
# open http://localhost:1313/
Hugo (>= 0.92.0) is required.Config settings examplebaseURL = ""https://hugotex.vercel.app/""
title = ""HugoTeX""
paginate = 3
languageCode = ""en""
DefaultContentLanguage = ""en""
enableInlineShortcodes = true
footnoteReturnLinkContents = ""^""

[author]
  name = ""Kaito Sugimoto""
  abstract = ""I'm a software engineer and a coffee enthusiast in Japan. My primary interest lies in the area of natural language processing.""

[taxonomies]
  category = ""categories""
  tag = ""tags""
  series = ""series""

[markup]
  [markup.goldmark]
    [markup.goldmark.renderer]
      unsafe = true
  [markup.highlight]
    style = ""paraiso-dark"" # syntax highlighting style

[Params]
  darkmode = true # set true if you prefer dark mode
Social media If you want to enable the generation of Twitter Card or Opengraph meta tags so you get nice embeds on Twitter, Facebook and other social media sites, add the following:[Params]
  twittercard = true
  opengraph = true
See the Internal Templates in Hugo for how to configure this behaviour further.Shortcodes Sidenotes LaTeX.css, which HugoTeX is using, defines syntax for sidenotes. However, as it is a little verbose to write, we provide a Hugo shortcode for that:A sentence deserving a sidenote.{{% sidenote %}}The note itself.{{% /sidenote %}}.
The note will be displayed on the right margin on larger screens. On smaller screns the note will be hidden by default and will open when clicking on the superscript number marking the existence of the note.For contributors Any issues or pull requests are welcome.LICENSE MITSimilar Projects queensferryme / hugo-theme-texifySee AlsoCalligraphyAcademicAnubisBlondeBlowfish",NA
Miguel Simoni,81,2023-06-19,MIT,"Blog, Bootstrap, Landing, Light, Personal, Portfolio, Responsive",Hugo Initio,NA,https://github.com/miguelsimoni/hugo-initio,NA,"Initio theme for HugoHugo-Initio is ported from the Initio template by GetTemplate.com for Hugo.Original Template Info Licensing: Creative Commons (for more options, go to the original template site)Released: Feb 21, 2014Last Updated: Feb 21, 2014Version: 1.0Bootstrap: 3.3.4 or higherLibraries: jQueryDesigner: Sergey PozhilovInstallation $ cd /<your-hugo-site-directory>
$ git submodule add https://github.com/miguelsimoni/hugo-initio.git themes/hugo-initio
More info: hugo setup guideConfiguration Live DemoExample Siteconfig.tomlSections You can show or hide each home page section from the config.toml:showSubheader = true
showServices = true
showRecentWorks = true
showDownloads = true
showClients = true
Footer You can show or hide each footer widget from the config.toml:showFooterContact = true
showfooterFollowMe = true
showFooterTextWidget = true
showFooterFormWidget = true
Social Networks You can add as many social networks as you want in the params.social array following this template:[[params.social]]
  title = ""facebook""
  url = ""https://www.facebook.com/nickname""
  icon = ""fa-facebook-square""
  footer = true
  sharethis = true
  network = ""facebook""
See the whole configuration in the config.toml file.Comments Powered by Disqus[params.disqus]
    site = ""your-disqus-short-name""
Disable the comments system by leaving the params.disqus.site empty.Google Analytics [params.google.analytics]
    trackerID = ""GA-000000000-0""
Disable the Google Analytics by leaving params.google.analytics.trackerID empty.Almost there&mldr; In order to see your site in action, you can run Hugo’s built-in local server.$ cd exampleSite
$ hugo server -t ../..
Now enter http://localhost:1313/ in the address bar of your browser.Deployment Hosting on GitHubMore hosting and deployment optionsContributing Found a bug?Got an idea for a new feature?Let me know it using the issue tracker.
Or make it directly: pull request.License This port is released under the MIT License. Check the original theme license for additional licensing information.Thanks Thanks to Steve Francia for creating Hugo and the awesome community around the project. And also thanks to Sergey Pozhilov for creating this awesome theme.See AlsoPaigeUp Business ThemeAcademicAdritian Free Hugo ThemeLightbi",NA
NA,81,2023-04-10,CCA 3.0 Unported,"Blog, Dark, Gallery, Responsive",AutoPhugo,Image gallery/Photoblog Theme for Hugo.,https://github.com/kc0bfv/autophugo,NA,"AutoPhugoAutoPhugo [ˌɔtoʊˈfjuːgəʊ] is a gallery/photoblog theme for Hugo that’s a little more automatic than Phugo. It is a port of HTML5 UP Multiverse template. Phugo was originally created by Aerohub, Pavel Kanyshev.Preview at https://kc0bfv.github.io/autophugoFeatures Fully ResponsiveHTML5 + CSS3FontAwesome IconsMulti-level Albums SupportGoogle AnalyticsBasic BreadcrumbsContact FormAutomated Image ScalingRecent Change PLEASE NOTEOn 10 Jul 2021 clicking an image now updates the location bar hash (fragment id). That way, the URL represents the open image too&mldr; This required some javascript changes. If these cause a problem for you, please let me know so I can make changes to this functionality.On 23 Jan 2020 subalbum and noalbum support no longer requires specifying a type in the metadata. Furthermore, images and subalbums can be mixed within albums - including on the homepage (although mixing can be confusing for users). Simply build an assets directory structure by placing images and directories wherever you want, then mirror the directory structure in content.On 19 Dec 2020 albumthumb file paths work differently. You must specify the path relative to the assets directory. So - where before the fish/_index.md example content specified fish_02.jpg as the albumthumb, now it specifies fish/fish_02.jpg. I apologize for the breaking change, but it really should’ve worked this way from the start. It brings things in-line with the resources src, and the subalbum path specifications.Installation Follow Hugo’s standard instructions for adding a theme to your site.Configuration The exampleSite demonstrates the features unique to this theme. In your site config params section the following extra parameters are supported:favicon - the favicon URL, relative to your site (placed in header meta tag)description - the description for the header meta tag. This will be interpreted as markdown, and some markdown will require the string to be enclosed in quotes.msvalidate - MS validation taggooglesiteverification - Google site verification tagthumb_width - thumbnail width after resizing (default 480 pixels)thumb_quality - thumbnail encoding quality percentage after resizing (default 50%)full_width - display-sized image width after resizing (default 960 pixels)full_quality - display-sized image encoding quality after resizing (default 90%)column_count - the number of columns in which to display images (default 2)breadcrumb_use_title - if true, breadcrumbs (the path-like display at the bottom) will use page titles instead of pathsfilename_as_phototitle - if true, a humanized form of the filename will be used as the phototitle (default false)images_downloadable - if true, images have a download button (default true)images_downloadable_use_orig - if true, the download button will download the original image instead of the full size image - this will likely greatly increase the size of your site (default false)taxonomies_links - if true, links to the taxonomy pages will be present in the footer and on the tagged items (default false)Additionally, Author.name and Author.email in the site config will display as the author and webmaster email.Header and footer customization is possible with the following site parameters. These are a little more complex to implement in TOML - check out the exampleSite configuration for a demonstration and comments:header.links - a list of maps with keys name, url, and icon, describing links that will be visible in the navigation barfooter.paragraph - a map with keys headline and text specifying the content to display in the footer popout (labeled “About” on the example site)footer.social - a map with keys headline (text) and links (list of maps). links entries can have label, url, and icon for each. These are intended to be social media links with a “Follow Me”-ish headline.footer.contact - a map with keys hide, realEmail, headline, buttonText, and resetText, name, email, and message,specifying the properties of the contact form (or hiding it). See the exampleSite config for details about how to set this up.footer.copyright - copyright info for your siteThe exampleSiteNoAlbum directory demonstrates a no-album layout, where all photos show up on the front page.Album Construction Inside your project create the directory assets/NAME-OF-YOUR-ALBUM. Place all of one album’s photos inside that directory.Please Note! If you have not previously, make sure hugo uses the theme’s archetype file by deleting the default site one. The archetype file is responsible for the hugo new hook.rm archetypes/default.md
Now, inside your project run:hugo new NAME-OF-YOUR-ALBUM/_index.md
It will create an index file for your first album. Open content/NAME-OF-YOUR-ALBUM/_index.md with your text editor. You’ll see something like this:---
title: ""NAME-OF-YOUR-ALBUM""
date: ""2020-03-15T00:00:00+00:00""
albumthumb: ""NAME-OF-YOUR-ALBUM/photo00.jpg""
draft: false
resources:
- src: ""NAME-OF-YOUR-ALBUM/photo00.jpg""
- src: ""NAME-OF-YOUR-ALBUM/photo01.jpg""
- src: ""NAME-OF-YOUR-ALBUM/photo02.jpg""
---
Change the title of your album if you wish, and set the filename of album’s cover thumbnail. The filename is relative to the assets folder, so if your album is named dogs and one of your images there is named dog_01.jpg you can put dogs/dog_01.jpg in albumthumb to select it.In addition to those frontmatter options, you can also specify metadata for some or all of your images. Do that by modifying the resources array with map elements. The maps specify the image they apply to with the src key, as src: ""album/image.jpg"". You can then specify some or all of the following items: alt, phototitle, and description. Demonstration of this is in the exampleSite directory albums.Sub-Albums If you’d like to create an album that contains other albums - you can do that! The following command creates an album called “dogs”, for instance:hugo new dogs/_index.md
The resulting content/dogs/_index.md file looks like:---
title: ""Dogs""
date: 2020-03-15T14:00:00-06:00
albumthumb: ""dogs/subalbum/photo_00.jpg""
---
Make sure to specify an albumthumb!Now you could create albums inside that “dogs” album just like before&mldr;hugo new dogs/pensive-dogs/_index.md
Your assets directory layout should mirror the directory layout in content.See the exampleSite and the dogs folder and subfolders specifically. The dogs album actually contains images and subalbums mixed together as a demonstration.Image and Subalbum Mixing You can place images and subalbums together - the assets directory would contain images and directories in that case. You’d create content directories that mirror that layout. The dogs album is an example of this.Watch out! This is likely to be confusing to users though. There’s no default delineation when these mixed albums are displayed. Subalbums display towards the top, and images lower - but otherwise a user will have no clear idea what will happen when they click an image. Will it display full-sized, or will it open a subalbum?Using Custom Weights Default sorting for subalbums and images sorts by weight. For subalbums with the same weight it sorts by date, and for images with the same weight it sorts by filename. If you don’t specify a weight for an item, the default is 0. Therefore - if you don’t set any weights you’ll sort by date&mldr; Lower weights come first so negative weights get sorted before unspecified weights and positive ones.Tagging and Categorizing (taxonomies) You can tag and categorize your images and subalbums, and you can create other taxonomies and use those too! There are a couple site configurations to understand&mldr;disableKinds = [""taxonomy"", ""term""]If you want tags or categories do not have this line in your site config. If you specify these values for disableKinds in your site config you will disable all taxonomy pages. Term pages are not generated as part of this theme - the terms all appear on their taxonomy page. Regardless, if you want to have tags or categories, do not have the above line.You can use the [taxonomies] site config section to create new taxonomies or remove the defaults. More information is in the Hugo documentation.The taxonomies_links parameter defaults to false, disabling links to the taxonomies pages even if they get generated&mldr; Set it to true in your site config and links will show up in the page footers and on tagged items.Building the Site Run hugo to build your site. Output will be placed in the public directory. The original images will not be included - only the resized versions.When building your site, hugo must build thumbnails and distribution-sized images. This process can take some time, especially if you have many pictures&mldr; It stores versions of the images in the resources directory, so it doesn’t have to redo the process every build.Therefore - after adding an album your next build may take minutes. Future ones will be quicker.Development Notes If you try multiple sizes or quality settings for your images, you’ll start to amass large numbers of images in your resources directory. Once you settle on a quality and size you like you should consider deleting the resources and rebuilding to eliminate the unused images.Regardless of the number of resources you have, Hugo will only deploy the ones actually used in a build. Unused image resources will not be deployed.Advanced Features Image resizing: normally you specify thumb_width and full_width in your configuration, and the qualities, to modify how Autophugo scales your images. Autophugo uses these values to build a string for Hugo’s Resize function. You can specify that string directly though&mldr; Set thumb_size or full_size directly in your config to bypass the other ones. The format of the string is documented here. You can specify full_size and thumb_size for the entire site, or in the _index.md for a specific subalbum.You can also change the method Hugo uses to resize your full-sized images (the option is not available for thumbnails). Hugo has both Resize and Fit methods that are appropriate for resizing the full-sized images. By default Autophugo uses Resize. By setting full_resize_method to Fit, Resize, or None, you can change that. You must also specify a full_size if you change to the Fit method. That’s because both the height and width must be specified, and with Resize you only need one or the other. Again, the format of the full_size string is documented here. Here are some examples:Scale an image down, keeping aspect ratio, to a max height of 960px and a max width of 960px, with a 90% quality: full_resize_method = ""fit"", full_size = ""960x960 q90""Scale an image to a width of 960px, allowing whatever height is required for the original aspect ratio, with a 90% quality: full_resize_method = ""resize"", full_size = ""960x q90""Do no scaling or quality change of the full-sized version of the image: full_resize_method = ""none""Comparison to Phugo Unfortunately the original Phugo hasn’t been updated in a while, and was dropped from common theme lists. AutoPhugo implements the pull requests over on Phugo, causing it to work error-free on modern Hugo. Further, it sets standardized column layout, automatically builds albums based on files alone (Phugo required entering each filename as a shortcode), and automatically resizes photos for display and thumbnail. Plus, subalbums.Acknowledgements Subgallery support - tfl0pz, Ognyan NikolovMagnific Popup lightbox - Dmitry SemenovLicense The original template is released under the Creative Commons Attribution 3.0 License. Please keep the original attribution link when using for your own project.The Magnific Popup lightbox is available under the MIT license, more info at their website linked above.See AlsoAcademicHB Starter Theme TemplatePaigeTailBlissAnatole","Karl Sickendick, Pavel Kanyshev"
He Yeshuang,80,2023-08-22,MIT,"Blog, Minimal, Responsive",Tokiwa,A minimal blog theme inspired by the color tokiwa-iro (常磐色).,https://github.com/heyeshuang/hugo-theme-tokiwa,NA,"Theme TokiwaTheme Tokiwa is a minimalistic blog theme. Tokiwa-iro is the main color tone and the name of this theme.Built on the top of Jim Frenette’s Hugo Starter Theme and Tailwind CSS. Inspired by Tailwind Toolbox - Minimalist-Blog.This theme is especially optimized for Chinese characters, while works well with other languages.Screenshot A live demo is at https://heysh.xyz/hugo-theme-tokiwa/.Install Git submodule Inside the folder of your Hugo site run:$ git submodule add https://github.com/heyeshuang/hugo-theme-tokiwa.git themes/hugo-theme-tokiwa
Hugo module Inside the folder of your Hugo site run:$ hugo mod init https://github.com/<YOUR_NAME>/<THEME_NAME>
$ hugo mod get https://github.com/heyeshuang/hugo-theme-tokiwa
Then add to your hugo.toml:[module]
[[module.imports]]
  path = ""github.com/heyeshuang/hugo-theme-tokiwa""
available config params disqusShortname = ""YOURSHORTNAME""
googleAnalytics = ""UA-1234567890"" # or ""G-xxxxxxxx"" in Google Analytics v4, in hugo v0.82+

[params]
description = """"""
Tokiwa-iro is the theme color of this site.
""""""
math = true # for introducing $KaTEX$
env = ""production"" # for Google Analytics and DISQUS.
useChineseFonts = true # for font Noto Serif etc.
bannerFont = ""fonts/exampleFont"" # custom your own font for the title.
postDateFormat = ""2006-1-2"" # override custom date format posts.

[menu]
# Shown in the side menu.
  [[menu.main]]
    name = ""Posts""
    weight = 1
    identifier = ""post""
    url = ""/post/""
  [[menu.main]]
    name = ""Tags""
    url = ""/tags/""
    weight = 2

[social]
instagram=""http://example.com/""
bilibili=""http://example.com/""
weibo=""http://example.com/""
zhihu=""http://example.com/""
twitter=""http://twitter.com/""
gitlab=""http://gitlab.com/""
youtube=""http://youtube.com/""
github=""http://github.com/""
A complete config.toml example is in the exampleSite folder.Dev this theme Install node modulescd blog/themes/hugo-theme-tokiwa

npm i
Unminified development build with sourcemapscd blog/themes/hugo-theme-tokiwa
    
npm run dev
Build for production with npm run build. CSS and JavaScript files will be output into the starter themes dist folder. e.g.,cd blog/themes/hugo-theme-tokiwa
    
npm run build
Credit hugoBasicExample is used to mock data.Tailwind CSSHugo Static Site Generator Blank Starter ThemeTailwind Toolbox - Minimalist-BlogFonts. 杨任东竹石体 was used for the banner in the beginning. This font is okay for commercial usage. However, I wonder if it is compatible with GPL MIT, so I replaced it with an exampleFont in the exampleSite. See config.toml.And the open, warm-hearted Noto Serif CN. Always a good choice for Chinese words. Under OFL 1.1.Beautiful icons made by Remix-Design. Under Apache 2.0.fuse.js for fuzzy search, and a blog post (in Chinese) about how to use it.Thanks.LICENSE MITSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Jan Raasch,58,2023-12-05,Creative Commons Attribution 4.0 International Public License (CC BY 4.0),"Company, Contact, Landing, Newsletter, Personal, Responsive",Hugo Product Launch,"A Hugo theme for young start-ups, product launches, and »coming soon«-websites. Includes contact form & newsletter sign up via Netlify. Deploy with one click!",https://github.com/janraasch/hugo-product-launch,https://hugo-product-launch.netlify.app,"Hugo Product Launch 🚀 A Hugo-theme for young start-ups, product launches, and »coming soon«-websites. Includes ready-to-go contact form & newsletter sign up via Netlify Forms.Demo For a current & working demo of this theme, please check out https://hugo-product-launch.netlify.app/ 🎯.🔑 Key Features Pretty, quick & straightforward single-page design 🌻Contact form 📇Newsletter sign-up 📫Responsive 📲One-click deploy 🚀 to netlifyNo!-code Content Management via Forestry 💼tailwindcss with PostCSS and PurgeCSS => super tiny CSS file 🏎No! JavaScript 🥳One-click Deploy / Installation Deploy 🚀 Hugo Product Launch to netlify by clicking this button:Alternatively, you may also clone the kickstart-repo, and skip right to the usage instructionsManual Installation If you already have a Hugo site on your machine, you can simply add this theme viagit submodule add https://github.com/janraasch/hugo-product-launch.git themes/hugo-product-launch
Then, adjust the config.toml as detailed below.For more information, read the official setup guide of Hugo.Example Content Simply copy over the contents of the exampleSite-directory included in this theme to your source directory. That should give you a good idea about how things work, and then you can go on from there to make the site your own.NodeJS Dependencies You need to have NodeJS installed. Then, copy the package.json- & package-lock.json-files from the root of this theme to your site’s root. Run npm install & npm install postcss-cli postcss -g to set up your PostCSS-Pipe.Take over main.css & tailwind.config.js Simply copy over the assets/css/main.css-file from this repo into your local assets/css-folder. Also, copy the tailwind.config.js-file from the root of this repository to your site’s root. You may then add any CSS you like into your own assets/css/main.css-file and even overwrite the tailwind configuration in tailwind.config.js-file. See tailwindcss > docs > configuration for more details.Optional: Take over postcss.config.js Take full control of the PostCSS-setup by copying the postcss.config.js-file from this repo into the root directory of your site.Usage If you would like to have a nice & clean no!-code User Interface 🧁 for Content Management, simply connect your repository with Forestry. We included the necessary batteries 🔋 (i.e. settings) on the exampleSite/.forestry-folder so you are ready to go right out of the gate.Base configuration: config.toml Please check out the config.toml-file included in the exampleSite of this theme.Adding Content: content/_index.md Start with the contents provided in the _index.md-file in the exampleSite/content-directory. That should give you a good idea about how things work, and then you can go on from there to make the site your own.This markdown cheat-sheet might come in handy 🙌🏻.Adding your branding / colors / css: assets/css/main.css Check out the main.css-file from the assets/css-directory to get started and to find more detailed instructions.Issues / Feedback / Contributing Please use GitHub issues and Pull Requests.If you do not have a GitHub-account, feel free to hit me up via email (see janraasch.com).Special Thanks 🎁 Go to favicon.io, for supplying a quick & easy way to create the favicon used on the exampleSite.Go to Pexels, for supplying those wonderful free stock photos on the exampleSite.License Hugo Product Launch by Jan Raasch is licensed under CC BY 4.0Attribution Please keep the original attribution link when using this theme for your project.More Permissions If you would like to use this theme without attribution, permissions beyond this license’s scope are available at MORE_PERMISSIONS.md.See AlsoAcademicPikoW3.CSS BasicAdritian Free Hugo ThemeHugo Scroll",NA
HB Framework Authors,57,2023-11-27,MIT,"Archive, Blog, Bootstrap, Dark, Dark Mode, Docs, Gallery, Landing, Multilingual, Personal, Responsive",HB Starter Theme Template,The starter theme template of HB (Hugo Bootstrap) Framework,https://github.com/hbstack/theme,https://theme.hbstack.dev/,"HB Theme TemplateThe starter theme template of HB Framework, live demo: https://theme.hbstack.dev/.Documentations English简体中文Prerequisites先决条件Installation安裝Configuration配置Content内容Deployment部署Modules模块Features Fast and SEO friendly: PageSpeed Insight scored perfect :100: in all four metrics on mobile and desktop.Multi-purpose: blog, project documentations, digital garden, gallery, landing pages and so on.Responsive: mobile first, built on top of Bootstrap v5.3.:ice_cube: Modular and flexible: extend features via various modules.:first_quarter_moon: Dark mode: light, dark or auto (follow system).:mag: Search: powerful client side fuzzy search that allows filtering and sorting of results, as well as searching from all multilingual sites.PurgeCSS: remove unused CSS.:rocket: PWA:Installable: add site to home screen.Offline available: offline page and offline image.Allow precaching resources, such as CSS, JS and fonts.Advanced:Custom SCSS variables and style.Custom JavaScript.Custom HTML markup:Before the end of <head>Before the end of <body>Custom sidebar widget:framed_picture: Images Processing: process images via URL query string and fragment, such as alignment, resizing, cropping and so on, friendly to Markdown.:computer: Code block panel: expand toggle, code copy button, line number toggle and wrap toggle.Menus: supports header menus and footer menus.Related posts slide.:framed_picture: Image viewer: zoom in/out image.:card_index_dividers: Archives: group by year and month.:memo: Multiple authors: articles can be co-authored.:globe_with_meridians: Multilingual.:arrow_left: RTL: supports Right-to-Left languages.:arrow_up: Back/Return to top button.Social links: supports header and footer social links.Content: supports KaTex (math), Mermaid (diagrams) and Bootstrap shortcodes.&mldr;Screenshot See AlsoBootstrap Theme for Personal Blog and DocumentationsPaigeAcademicHugoplateLightbi",NA
fncnt,57,2023-11-16,MIT,"Dark Mode, Landing, Minimal, Personal, Responsive",vncnt-hugo,A simple theme for your personal landing page.,https://github.com/fncnt/vncnt-hugo,NA,"vncnt-hugoThis is a simple theme for hugo which can serve as a template for personal landing pages.Installation Clone this repo into your themes directory of your hugo website:git clone https://github.com/fncnt/vncnt-hugo themes/vncnt-hugo
Or even better, add this repository as a submodule of your hugo website, if you are using git for it:git submodule add https://github.com/fncnt/vncnt-hugo themes/vncnt-hugo
Configuration Copy the config.toml file of the theme into the main directory of your hugo website.
You may want to adjust the value of baseURL as well as the parameters in the [params] section.If you set email in [params], the link to your email will appear in front of all keys set in [params.contact].Changing Contact Links To add a link to a preferred service of your choice simply add a suitable key to [params.contact], e.g.linkedin = ""https://www.linkedin.com/in/jdoe""
Please note that the key must correspond to a fontawesome brands icon.
Also, regardless of the key order in your config.toml file, the links will be ordered lexicographically due to the usage of range.However, you may specify contact links more verbosely, as documented in config.toml.
This allows to use other fontawesome styles and manually sort contact links.rel=""me"" This theme now allows to set the rel=""me"" value manually.
Previously, this was always set but now is done on an opt-in basis to give more control over link verification.
Services like Github or Mastodon make use of this.
An example is given in the provided config.toml file.Third-party Components The spine (I’m so sorry) of this theme is made of Barebones.
Both normalize.css and barebones.css are licensed unter the MIT License.This theme relies on fontawesome. The included files in static/webfonts are used under the SIL Open Font License 1.1 as described in static/css/all.min.css. The latter file is licensed under the MIT License.The Raleway font files in static/fonts are licensed under the SIL Open Font License 1.1 (see static/fonts/OFL.txt)Tracking The theme supports Google Analytics using Hugo’s internal templates. To enable
tracking, set the googleAnalytics
and (optionally) privacy configuration values.Dark Mode On supported browsers, this theme applies a dark mode if the user’s OS itself is set to dark.Roadmap add support for blog-like contentSee AlsoHugoplatePaigePikoAcademicAdritian Free Hugo Theme",NA
Zachary Betz,77,2023-01-03,MIT,Blog,PaperCSS,"A Hugo theme made with PaperCSS, the less formal CSS framework.",https://github.com/zwbetz-gh/papercss-hugo-theme,NA,"⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️WARNING: This repo is no longer maintained. It’s archived and read-only.⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️PaperCSSA Hugo theme made with PaperCSS, the less formal CSS framework.Table of contents DemoMinimum Hugo versionInstallationUpdatingRun example siteConfigurationFaviconsShortcodesDisable toc for a blog postDisable summary for a blog postGetting helpCreditsDemo https://papercss-hugo-theme.netlify.com/Minimum Hugo version Hugo version 0.81.0 or higher is required. View the Hugo releases and download the binary for your OS.Installation From the root of your site:git submodule add https://github.com/zwbetz-gh/papercss-hugo-theme.git themes/papercss-hugo-theme
Updating From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/papercss-hugo-theme/exampleSite:hugo server --themesDir ../..
Configuration Copy config.yaml from the exampleSite, then edit as desired.Favicons Upload your image to RealFaviconGenerator then copy-paste the generated favicon files under static.Shortcodes See the full list of supported shortcodes.Disable toc for a blog post Blog posts that have two or more subheadings (<h2>s) automatically get a table of contents. To disable this set toc to false. For example:---
title: ""My page with a few headings""
toc: false
---
Disable summary for a blog post The homepage blog post listing shows a summary for each post. To disable this for an individual post set show_summary to false. For example:---
title: ""My page with some stellar content""
show_summary: false
---
Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines.Credits Thank you to Rhyne Vlaservich for creating PaperCSS, and all the contributors.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Matúš Námešný,55,2023-11-22,MIT,"Blog, Dark, Minimal, Multilingual",Nightfall,Minimal dark theme for Hugo,https://github.com/LordMathis/hugo-theme-nightfall,NA,"NightfallNightfall is a minimal dark theme for HugoGet the theme Import as hugo module in config.toml:[module]
[[module.imports]]
  path = 'github.com/LordMathis/hugo-theme-nightfall'
ORImport manually:git clone https://github.com/LordMathis/hugo-theme-nightfall themes/nightfallAdd theme = ""nightfall"" in your config.toml:Configuration For full example chech exampleSite/config.tomlAdd these params to you config.toml[params]
user = ""hello""
hostname = ""gohugo.io""

  [params.author]
    name = ""Mr Hugo""
    email = ""hugo@example.com
Social links You can also add social links. To use icons for social links, you also need to add the link to icon font to custom-head.html[[params.social]]
key = 0
name = ""github""
url = ""https://github.com/gohugoio""
icon = ""fa-brands fa-github""  # Add link to your icon font to `layouts/partials/custom-head.html`

[[params.social]]
key = 1
name = ""twitter""
url = ""https://www.example.com""

[[params.social]]
key = 2
name = ""mastodon""
url = ""https://www.example.com""
rel = ""me""  # You can also add rel to social link

[[params.social]]
key = 3
name = ""email""
url = ""mailto:email@example.com""
Post metadata Post metadata such as tags, published date and reading time are rendered on post pages. You can turn off showing published date and reading time globally in [params] section of your config[params]
published = false
readingTime = false
You can also disable metadata on a specific page by adding showMetadata = false to front matter.Menu To add a menu item add [[menu.header]] item to config.toml. For example:[menu]
  [[menu.header]]
    name = ""posts""
    weight = 0
    url = ""/posts""
Custom Head To use custom icons, css, js or other resources create layouts/partials/custom-head.html and add your links there.Custom footer You can customize the text displayed in footer with footerHtml in [[params]] section. The value will be rendered inside <span> tag. For example:[params]
footerHtml = 'CC-0, Built with <a href=""https://gohugo.io"" class=""footerLink"">Hugo</a> and <a href=""https://github.com/LordMathis/hugo-theme-nightfall"" class=""footerLink"">Nightfall</a> theme'
See AlsoAcademicAnubisBear CubBootstrap-BPColor Your World",NA
Christian Olsen,2,2023-12-05,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Responsive",Qubt,Minimal blog Hugo theme,https://github.com/chrede88/qubt,https://chrede88.github.io/qubt,"Qubt - Simple Personal Blog Hugo ThemeQubt is a simple personal blog theme for Hugo. The theme is designed mobile-first, with a very intuitive interface. Get your Qubt blog up and running quickly by using the Qubt template.Screen Dumps –Features Simple personal blog theme, designed for mobile-first.Automatic dark mode (based on system setttings).Emoji support for a fun design.Healthcheck endpoint (/healthcheck.json).Installation Make sure you have Hugo and Go installed on your local machine. Read the instructions here.Follow this link to the theme template.Follow the installation instructions in the template repo. They are listed below for reference.Template installation instructions (Only for reference) Use this template by pressing Use this template.Clone your version of the template to your local computer:git clone https://github.com/<username>/<reponame>
Change the module name to match your github repo in go.mod.Modify config/_default/hugo.yaml, config/_default/params.yaml and config/_default/menus.yaml according to the configuration below.Add your blog posts to content/blog/. See example posts for reference.Modify content/about.md so it matches your preferences.All images are stored in the assets/ folder. You can group in subfolders if you like.In a terminal/commandline window, move to the newly created folder using cd.Build a local version of your site by executing hugo server. You can see the site by navigating to localhost:1313 (actual URL will be outputted in the CLI) in a browser.Add a new icon.png file to update the favicon. The png file should be 512px by 512px in size.Configuration All configuration is done in the four configuration files under config/_default/. The URL and site title can be set in hugo.yaml. The navbar settings are set in menus.yaml. All other parameters are set in params.yaml.hugo.yaml:baseURL: 'https://username.github.io/qubt'
title: 'Qubt Theme'
menus.yaml:main:
- name: Home
  url: /
  weight: 10
- name: Blog
  url: /blog/
  weight: 20
- name: About
  url: /about/
  weight: 30
params.yaml:############################
## Author
############################

author:
  name: ""Qubt""
  image: author.jpeg
  greeting: ""A personal blog theme for Hugo :evergreen_tree:""
  icon: "":wave:""

############################
## Links
############################

links:
  - github: https://github.com/username
  - facebook: https://facebook.com/me
 

###############################
## OpenGraph & Twitter Cards
###############################

title: ""Qubt Theme""
description: ""Demo site build with Qubt & Hugo""
images:
  - thumbnail.jpeg
Links are defined by the name (i.e. “github” or “facebook”). The names must match one of the supported link icons, see list below.Supported Social Icons Supported IconsSupported IconsSupported IconsSupported Iconsamazonapplebandcampbitbucketblueskycheck-markcodependevdiscorddribbbleemailetsyfacebookflickrfoursquaregithubgitlabgoogleinstagramkeybasekickstarterlinklinkedinmastodonmediumorcidpatreonpaypalredditsignalskypeslacksnapchatsoundcloudspotifystack-exchangestack-overflowstravatelegramtiktoktumblrtwitchuntappdwebsitewhatsappwindowsx-twitteryoutubeCustom Social Icons Users can provide their own icons by placing a .svg image in ./assets/icons/ in their own repo. Creating folders when necessary. The image should be as circular as possible for the best result. Don’t use spaces in the filename! Find all current icons here.Update the Theme Version This guide is left here for reference. Please check the template repo for the most up-to-date documentation.The theme version used to build the site is defined in go.mod file.The best practice is to update to released and tested versions. To update to a specific version execute the following command in a terminal/commandline (at the root path of your site repo):  hugo mod get github.com/Chrede88/qubt@vX.Y.Z
Replace X,Y & Z with the corresponding version numbers. You can find the releases here. Please check if any breaking changes are listed under the release you want to update to, before proceeding.See AlsoBlowfishCompostHugoplateLightbiPaige",NA
Will J. Holmes,72,2023-09-04,MIT,"Blog, Contact, Dark, Light, Minimal, Personal, Portfolio, Responsive",Hugo Liftoff,Minimal blog/portfolio theme with a focus on content creation and SEO best practices. An ideal choice for technical users jump-starting a personal brand.,https://github.com/wjh18/hugo-liftoff,https://hugo-liftoff.netlify.app,"Hugo LiftoffWarning: I no longer have time to work on this theme for various reasons. It’s unlikely I’ll get to your issue and no additional features are planned, although the theme will remain available to the public. Feel free to fork it if you need to make extensive changes. I will consider merging simple bugfix pull requests. Apologies for any inconvenience this may cause. Please see v3.4.3 release notes for further details.About Hugo Liftoff is a minimal blog/portfolio theme with a focus on content creation and SEO best practices. It’s an ideal choice for technical users jump-starting a personal brand.Documentation The full documentation is hosted on this repo’s Github Wiki.Please open an issue if you find any mistakes in the docs or have suggestions for improvement.Demo Site A working demo of the theme is available to the public for evaluation.The exampleSite content included with the theme, which you’re free to copy into your own project, mirrors the content used in the demo. The idea behind this is to help you get started quickly and replicate any features you saw in the demo that you think could be useful in your own project.Notable Features Content subsections with the ability to filter recent posts on homepage by subsectionSeries posts taxonomy with single posts that list all posts in the current seriesNext/prev links at the end of single posts for subsections or series posts (if enabled)Light/dark mode toggle using CSS custom propertiesMobile-responsive, collapsible JS menu with automatic submenu support based on menu configCustomizable newsletter with Netlify Forms support and conditional visibility controlAnd much more&mldr;Overview of Features Below are the current features of this theme. Features labeled optional or frontmatter can be enabled/disabled in config or frontmatter, respectively.Netlify Custom headers / redirects with Netlify (optional)Netlify forms support for newsletter opt-in and contact page (optional)Sample netlify.toml file for streamlined deployment3rd Party Google Analytics v4Google Tag Manager as an alternative to GA (optional)Disqus comments (optional)Disable comments on a per-page basis (optional) (frontmatter)Newsletter Newsletter opt-in with Netlify Forms support (optional) (frontmatter)Global display of newsletter opt-in (optional)Customizable newsletter header, description and CTA text (optional)Override global newsletter on a per-page basis (optional) (frontmatter)Enable or disable newsletter on a per-page basis (frontmatter)Social Native Twitter, Mastodon, Github, Stack Overflow, LinkedIn and email social links with SVG (optional)Enable or disable social links in footer, homepage hero, and about page (optional)Enable or disable individual social links (optional)Facebook, LinkedIn, Twitter, Reddit and email social share icons with SVG for posts (optional)Enable or disable individual social share icons (optional)SEO / RSS Enhanced Open Graph, Twitter Cards, and Schema.org templatesRSS feed that excludes any pages outside of the posts sectionCustomizable title and SEO title tags or use title for both (frontmatter)Customizable summary and meta description or use description for both (frontmatter)Custom author meta tag (optional) (frontmatter)Custom title tags and meta descriptions for every page (optional) (frontmatter)robots.txt and sitemap.xmlDisable search engine crawling (optional)Series / Subsections Content subsections with the ability to filter recent posts on homepage by subsection (optional)Series posts taxonomy with single posts that list all posts in the current series (optional)Next/prev links at the end of single posts for subsections or series posts (if enabled)Subsection support for posts with custom permalinks for clean SEO URLs (optional)Mobile-responsive, collapsible JS menu with automatic submenu support based on menu configHomepage Customize hero title and subtitle on homepage (frontmatter)Customize posts and projects section headings on homepage (frontmatter)Posts & Projects Toggle-able sticky table of contents for posts (frontmatter)Related posts (frontmatter)Social share icons for posts (frontmatter)Reading time and word count for postsLast modified dates for posts (optional)Customizable live URL, source URL and tech stack details for projects (frontmatter)Tag and category taxonomiesProject type taxonomy for categorizing projectsRecent posts and projects on homepageCode snippets Syntax highlightingOne-click copy button and language indicator for code snippetsCSS / JS Light/dark mode toggle using CSS custom propertiesAdd custom CSS / JS in assetsCSS and JS minificationFrontend build pipeline with ESBuild and ToCSSPostCSS processing for autoprefixing (optional)npm completely optional unless using PostCSS / AutoprefixerFluid typography scale with CSS clamp()Sourcemaps for SCSS and JS in developmentImages Image processing with Hugo resourcesFeature images for posts and projects from assets or page bundle (frontmatter)Custom homepage hero avatar image (optional)Disable grayscale avatar filter (optional)Enable/disable favicons (optional)Archetypes Archetype templates for posts and projectsPage bundle support for archetype templatesMarkdown Hooks Markdown render hooks for codeblocks, images, headings and linksLanguage indicator for codeblocksAdd custom CSS class to markdown images via URL fragmentsHeading anchor link SVG iconOther Content Create generic single pages quickly with the default single template (optional)Additional markdown footer text (optional)Add a label to drafts in development (optional)Responsive support for common markdown styles like tablesAbout page with social links (optional)Contact page with Netlify Forms support (optional)Customize fallback text for empty content (optional)Hugo Defaults Example hugo.toml with the majority of Hugo config defaults included for easy customizationOverride config settings based on Hugo environmentBuilt-in shortcodesAnd much more&mldr;Hugo has a lot to offer!Planned Features The following features are planned for a future release.Real-time site searchImage galleries for projectsi18n supportAdditional advanced Google structured data schemasCustom shortcodes for things like project listsGetting Help To submit a bug report, feature request, or usage questions, please open an issue on Github using one of the issue templates.Contributing If you’d like to contribute to the project, fork it and submit a pull request with your changes using the pull request template. Please see the Contribution Guidelines for more details.See AlsoAcademicPaigePikoxtermColor Your World",NA
Seb,1,2023-12-04,MIT,NA,Am Writing,Theme description,https://github.com/Wivik/am-writing-hugo-theme,https://wivik.github.io/am-writing-hugo-theme/,"Am Writing - A Hugo Theme for a writer’s websiteAm Writing is a theme made for Hugo for writers who desire to create an easy website.Features Am Writing supports :Several different color themesMultilingual (French and English by default)Mastodon Feed integrationLink to your Patreon, Mastodon, Ko-fi profileVarious book metadata for a standard display pageFully customizableSearch by book genreInstallation In your hugo website root folder, add the theme :git clone https://github.com/Wivik/am-writing-hugo-theme themes/am-writing
Or as a sub-module :git submodule add https://github.com/Wivik/am-writing-hugo-theme themes/am-writing
Then, proceed to configuration.Configuration Enable the theme Change in hugo.yaml (or toml) the theme :theme: am-writing
Add the following taxonomies for the books list :taxonomies:
  genres: genres
Add the default content language and indicate it’s in a subdir.defaultContentLanguage: fr
defaultContentLanguageInSubdir: true
Then, add the two langues settings :Do not change mainSections: ['books']languages:
  fr:
    contentDir: content/fr
    disabled: false
    languageCode: fr-FR
    languageName: Français
    title: Demo Author
    params:
      subtitle: Auteur d'un Site Demo
      mainSections: ['books']
    weight: 1
    menu:
      main:
        - identifier: home
          name: 'Accueil'
          url: /fr/
          weight: 10
        - identifier: books
          name: 'Livres'
          url: /fr/books/
          weight: 20
        - identifier: tags
          name: 'Genres'
          url: /fr/genres/
          weight: 30
        - identifier: legal
          name: 'Mentions légales'
          url: /fr/legal/
          weight: 40
  en:
    contentDir: content/en
    languageCode: en-GB
    languageName: English
    title: Demo Author
    disabled: false
    params:
      subtitle: Writer of a Demo Website
      mainSections: ['books']
    weight: 2
    menu:
      main:
        - identifier: home
          name: 'Home'
          url: /en/
          weight: 10
        - identifier: books
          name: 'Books'
          url: /en/books/
          weight: 20
        - identifier: tags
          name: 'Genres'
          url: /en/genres/
          weight: 30
        - identifier: legal
          name: 'Legal Notice'
          url: /en/legal/
          weight: 40
Adapt it with you choices.Specific settings The theme supports the following settings :SettingRequiredDefault valueDescriptionparams.authorNononeYour author name, your should set it.params.avatarNononeA picture expected to be in the /static folder.params.commissionNofalseDisplay a button showing you’re open for commissions. Possible values : true (commissions opened), false (commissions closed)params.commissionLinkNononeThe link to your commission platform.params.contentLicenseNononeDisplay the license used for the website in the footer. Ex : CC BY-SA 4.0params.kofiNononeYour Ko-fi profile URLparams.mastodonNononeThe URL of your Mastodon profile.params.mastodonMaxItemsNo5How much posts you want to display in your feed.params.patreonNononeYour Patreon profile URLparams.themeNonordUse one of the built-in themes :- nord- catpuccin-latte- catpuccin-frappeparams.themeFontNoserifUse the Serif or Sans Serif font. Available options :- serif- sans-serifThemes showcase Nord (defaut)Catpuccin LatteCatpuccin FrappeDarkOverride default profile The short bio available on the left is configured in the translation files. To override it, create a translation file <hugo site root dir>/i18n named according to the language (ex : English : en.yaml).Inside, you can override the builtin translations :genres:
  short-story: ""Short Story""
  science-fiction: ""Science Fiction""

about:
  author: |
    Insert here your author's bio    

  legal-notice: |
    The stories and characters in <YOUR NAME HERE>'s books are purely fictional. Any resemblance to existing or former persons is purely coincidental.    
Books management Books page content All the books pages are managed by metadata, no actual content inside the markdown file.Please refer to the archetype/book.md file for comprehensive reference.Variables documentation :NameRequiredDefault valueDescriptiontitleYes{{ replace .File.ContentBaseName ""-"" "" "" | title }}The Book’s titledateYes{{ .Date }}The book’s publication date. This is defined by Hugo as page creation, so modify it to reflect the actual release date.draftNofalseSet true if you don’t want to publish this entry yet.coverNo but recommended{{ printf ""%s.jpg"" .File.ContentBaseName }}The name of the cover file. This file is expected to be in the /static folder.authorYes{{ .Site.Params.author }}Author’s name, in case it would be a different person.descriptionNo but recommendednoneThe book’s description. Could be the synopsis or whatever else you want. Markdown is supported.isbnNo1234567891237Your book’s ISBNlanguageYesENThe book’s language. Required if multilingual and the book has a translation.pagesNo70How much pages the book contains. You can use a tool I’ve made for this information.wordsNo18kHow much words the book contains. You can use a tool I’ve made for this information.linkNononeThe link of your main selling place. Book2Read for example.If missing, the page will display “Unavailable”.amazonNononeThe link to Amazon KDP entry. If you publish only on Amazon, ignore this field and put the link in link.patreonNononeThe link to Patreon if you publish there.kindYesbookDo not remove or change, it’s used by the template.freepreviewNofalseIf you have a free preview for your book, put here the name of the .epub file. The file is expected to be in the /static/books-preview/ folder.freeNofalseIf you publish your book for free, will change the value of the main link button to “Free book”.epubNofalseYou can directly propose an epub file, put in this field the epub filename (ex : something.epub). It must be placed in the /static/free-books folder.genresNononeA list of your book’s genres. Use the technical name available in the i18n files to have the labels translated.authorsnoteNononeIf you want to add a personal comment about your book.Create a new book Use hugo with the right kind.hugo new content books/my-book.md --kind book
Then, edit the new file accordingly.Concerns about translated books The book file (ex : my-book.md) must have the same name for eveyr languages. Change the title inside the file. So Hugo will be able to match the various languages for your content.Ex :en/books/my-book.md => title: My Bookfr/books/my-book.md => title: Mon LivreLicense Am Writing is licensed under MIT. See LICENSE.Third party content license Droid Serif is licensed under Apache 2.0Droid Sans is licensed under Apache 2.0Using Remix Icons licensed under Apache 2.0Uses Catpuccin color scheme licensed under MIT licenseUses Nord Theme color scheme licensed under MIT license",NA
Zachary Betz,70,2023-01-03,MIT,"Blog, Bootstrap, Minimal",Vanilla Bootstrap,A vanilla Bootstrap theme for Hugo,https://github.com/zwbetz-gh/vanilla-bootstrap-hugo-theme,NA,"⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️WARNING: This repo is no longer maintained. It’s archived and read-only.⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️Vanilla BootstrapA vanilla Bootstrap theme for Hugo.Table of Contents DemoMinimum Hugo versionInstallationUpdatingRun example siteConfigurationHomepage contentShortcodesbootstrap-blockquotebootstrap-tablebootstrap-cardGetting helpCreditsDemo https://vanilla-bootstrap-hugo-theme.netlify.com/Minimum Hugo version Hugo version 0.81.0 or higher is required. View the Hugo releases and download the binary for your OS.Installation From the root of your site:git submodule add https://github.com/zwbetz-gh/vanilla-bootstrap-hugo-theme.git themes/vanilla-bootstrap-hugo-theme
Updating From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/vanilla-bootstrap-hugo-theme/exampleSite:hugo server --themesDir ../..
Configuration Copy config.yaml from the exampleSite, then edit as desired.Homepage content By default, the homepage uses the config file’s homeText param for content.If you wish to provide content from a file, then create content/_index.md and it will be used instead. For example:---
title: Home
---

Homepage content goes here.
Shortcodes bootstrap-blockquote Uses Bootstrap blockquotes to format your blockquotes nicely. Pass the quote inside the shortcode. The author argument is optional.Here’s an actual usage, and here’s an example usage:{{< bootstrap-blockquote author=""Carl Jung"" >}}
Knowing your own darkness is the best method for dealing with the darknesses of other people.
{{< /bootstrap-blockquote >}}
bootstrap-table Uses Bootstrap tables to format your tables nicely. Pass the markdown table inside the shortcode, then pass the classes as an argument.Here’s an actual usage, and here’s an example usage:{{< bootstrap-table ""table table-dark table-striped table-bordered"" >}}
| Animal  | Sounds |
|---------|--------|
| Cat     | Meow   |
| Dog     | Woof   |
| Cricket | Chirp  |
{{< /bootstrap-table >}}
bootstrap-card Uses Bootstrap cards and Hugo image processing to display your page bundle images nicely. Only the img, command, and options arguments are required.Here’s an actual usage, and here’s an example usage:{{< bootstrap-card
img=""sun.jpg""
command=""Resize""
options=""700x""
title=""The Sun""
text=""The Sun is the star at the center of the Solar System.""
alt=""sun""
class=""mb-3""
style="""" >}}
Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines.Credits In addition to Bootstrap and Hugo, thank you to:Feather for iconsNetlify for deploysgh-md-toc for toc generationvscode for text editingFedora, Xfce, and VirtualBox for development environmentbefunky for screenshot editingFreepik and Flaticon for faviconSee AlsoBeautiful HugoBootstrap-BPDoksHinodeHugo Bootstrap Theme",NA
wamo,68,2023-11-10,MIT,"Blog, Company, Light, Responsive",Tella,"Simple, Light, Responsive",https://github.com/opera7133/tella,https://tella.pages.dev,"TellaTella, A Hugo theme for Companies.The demo can be seen here: https://tella.pages.devFeatures ResponsiveCarouselGoogle AnalyticsPaginationSyntax HighlightSupport categoriesDisqusInstallation Method 1 Inside the folder of your Hugo site run:$ git clone https://github.com/opera7133/tella themes/tella
Updating theme:$ cd themes/tella
$ git pull
Method 2 Inside the folder of your Hugo site run:$ git submodule add https://github.com/opera7133/tella.git themes/tella
Updating theme:$ git submodule update --remote --merge
Install dependencies Copy at least the following files from themes/tella/exampleSite to the root folder of your site.package.jsontailwind.config.jspostcss.config.jsAfter that, run this command.$ npm install
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.Update config file Copy the config.toml in the exampleSite to the root of your Hugo site. Change strings as you like.Check your site In order to see your site in action, run Hugo’s built-in local server.$ npm run start
Now enter localhost:1313 in the address bar of your browser.Update the theme Inside the folder of your Hugo site run:$ git submodule update --remote --merge
Build your site $ npm run build
Contributing If you find a bug or have an idea for a feature, feel free to write an issue or make a PR.License This theme is released under the MIT license.See AlsoAcademicBeautiful HugoDot-OrgLightbiPiko",NA
Sam Robbins,68,2023-04-21,MIT,"Portfolio, Responsive",Developer Portfolio,A Portfolio website designed for developers,https://github.com/samrobbins85/hugo-developer-portfolio,NA,"Developer PortfolioFeatures Responsive DesignBlog SectionPortfolio SectionHomepage to show off skillsInstallation Integrating into your site To install this theme, first create a themes folder in your site withmkdir themes
Then move into this directory withcd themes
The repository can then be added either by cloning or adding as a submodule# Cloning
git clone https://github.com/samrobbins85/hugo-developer-portfolio hugo-developer-portfolio
# Submodule
git submodule add https://github.com/samrobbins85/hugo-developer-portfolio hugo-developer-portfolio
In the config.toml file in your site directory addtheme=""hugo-developer-portfolio""
Creating a new site The exampleSite folder is almost set up to work as a site, if you copy it out of the Git Repo and remove the lines in config.toml under “Remove this when using normally” and uncomment the lines starting at “[module]” it should work. You need to have golang installed as it uses hugo modules.Configuration This is a highly configurable site, and as such, it will be unlikely that it will work with your existing site.Config.toml Config.toml provides the basic structure of the site, it contains a range of sectionsBase information In the example site, the base information looks as followsbaseURL = ""http://example.com"" # The URL of your site
languageCode = ""en-gb"" # The language you want to display the site in
title = ""Sam Robbins"" # The title you want to appear in the address bar
theme = ""hugo-developer-portfolio"" # The theme, don't change this
Plugins These are the essential plugins required to run the site, but you can add more if you need[params.plugins]
  # CSS Plugins
  [[params.plugins.css]]
  URL = ""https://cdn.jsdelivr.net/npm/uikit@3.2.6/dist/css/uikit.min.css""
  # JS Plugins
  [[params.plugins.js]]
  URL = ""https://cdn.jsdelivr.net/npm/uikit@3.2.6/dist/js/uikit.min.js""
  [[params.plugins.js]]
  URL = ""https://cdn.jsdelivr.net/npm/uikit@3.2.6/dist/js/uikit-icons.min.js""
Navigation This specifies the titles for the entries in the taskbar. name can be changed to show a different name. URL should not be changed in most situations as the pages will exist at the old URLs rather than the new ones, so this will result in dead links.# navigation
[menu]
  [[menu.main]]
  name = ""About""
  URL = ""about""
  [[menu.main]]
  name = ""Blog""
  URL = ""blog""
  [[menu.main]]
  name = ""Portfolio""
  URL = ""portfolio""
  [[menu.main]]
  name = ""Contact""
  URL = ""contact""
Params This contains the other configuration information[params]
home = ""Home"" # What you want the homepage to show up as in the menu bar
# Meta data
description = ""The website of Sam Robbins, 2nd Year Computer Science Student at Durham University""
author = ""Sam Robbins""


  [params.contact]
  formAction = ""https://formspree.io/<Insert code>"" # Add your formspree URL here to get emails

  # This contains the contact information for the footer
  [params.footer]
  email = ""samrobbinsgb@gmail.com""
  address = ""Durham, UK""
  googlemaps = ""https://www.google.com/maps/embed/v1/place?q=place_id:ChIJwbHYJaUqfEgRK0Ui9dVGimc&key=AIzaSyAE_4rVAKux_DSPcb_OdSRDaovtPOSk_3U""
homepage.yml This file is stored in data/homepage.yml. It determines the content of the homepage and contains many sectionsbanner This is the text in the hero section, change it to whatever you wantbanner:
  title: Hi! I’m Sam
social Put all of your social links here and they will appear in the social sectionsocial:
  twitter: """"
  linkedin: sam-robbins-gb
  bitbucket: """"
  github: samrobbins85
  gitlab: """"
  facebook: """"
  instagram: """"
  gmail: samrobbinsgb
  hotmail: """"
  telegram: """"
  whatsapp: """"
about enable can be used to hide this sectioncontent determines what text is shown herebtnText changes the text on the buttonURL changes the URL the button directs toabout:
  enable: true
  content: 2nd Year Durham Computer Science Student
  button:
    btnText: Find out more
    URL: ""/about""
skill enable can be used to hide this sectiontitle determines the text both under the image and in the modallogo determines the image that shows updescription is the text that appears inside the modalskill:
  enable: true
  item:
    - title: JavaScript
      logo: https://res.cloudinary.com/samrobbins/image/upload/v1591793272/logos/logos_javascript_adj1dx.svg
      description: Details coming soon, contact me if you want to know more
portfolio This is used to highlight specific portfolio projects you want to showenable can be used to hide this sectiontitle is the text at the top each itemimage is the image for each itemdescription goes underneath the image for each itemlink directs to the main portfolio pagetools indicates what technologies you used, it uses the icons from https://simpleicons.org/portfolio:
  enable: true
  item:
    - title: Easy DMARC
      image: https://res.cloudinary.com/samrobbins/image/upload/v1597159067/Easy_DMARC_hkcgif.webp
      description: A website to make it easy to add DMARC to a Vercel website
      link: ""/portfolio/easy-dmarc""
      tools:
        - next-dot-js
        - tailwindcss
        - vercel
        - react
experience enable can be used to hide this sectionlogo determines the image that shows uptitle is the main text that appears in the cardcompany is the secondary text in the cardduration is the tertiary text in the cardexperience:
  enable: true
  item:
    - logo: https://res.cloudinary.com/samrobbins/image/upload/f_auto,q_auto/v1591793271/logos/logos_google_id6v9a.svg
      title: init.g
      company: Google
      duration: November 2019
hackathons By placing none in the URL field, the image will be rendered without any linkshackathons:
  enable: true
  item:
    - title: Hack Cambridge 2019
      description: Climate change simulator
      image: https://res.cloudinary.com/samrobbins/image/upload/f_auto,q_auto/v1591793405/stickers/Hack_Cambridge_101_ozoq5d.png
      url: none
certifications This allows you to list your certifications in the following formatcertifications:
  enable: true
  item:
    - title: Microsoft Azure Fundamentals
      image: https://res.cloudinary.com/samrobbins/image/upload/v1592501459/microsoft-certified-fundamentals-badge_cpcgyn.svg
      url: https://www.youracclaim.com/badges/b4cf7a86-eb83-478e-bfd0-9f427c3474a0/public_url
Awards and Achievements This allows you to list your awards and achievements in the following formatawards:
  enable: true
  item:
    - title: Phase 1 Winner
      event: GNOME Community Engagement Challenge
      image: https://res.cloudinary.com/samrobbins/image/upload/v1595701167/CEChallenge-P1Winner2_iyjvyu.png
education This section allows you to showcase your education history, the fields are self explanatory.education:
  enable: true
  item:
    - title: BSc Computer Science
      year: 2018 - Present
      academy: Durham University
      image: https://res.cloudinary.com/samrobbins/image/upload/f_auto,q_auto/v1591793268/logos/logos_Durham_fc2sae.svg
publications This section allows you to showcase your publications history, the fields are self explanatory.publications:
  enable: true
  item:
    - image: /path/to/img
      title: Title of the publication
      description: details about the publication
      code_link: link/to/the/repository
      pdf_link: link/to/the/pdf
about.yml This file configures the about page, and follows the format below:leadership:
  enable: true
  item:
    - logo: https://res.cloudinary.com/samrobbins/image/upload/f_auto,q_auto/v1591793280/logos/logos_yl_qozav6.webp
      title: Young Leader
      company: The Scout Association
      duration: September 2014 - July 2018
porfolio.yml This file configures the portfolio page, allowing you to specify the filters you want to use.filter:
  - label: Web Dev
    value: web-dev
Blogs When submitting a blog, you can supply the following fields in the front mattertitle: ""Making a new Website""
date: 2019-12-31T12:14:34+06:00
description: ""My first blog, introducing my new website""
author: ""Sam Robbins""
Portfolio pages The portfolio page and blog page use the same configuration, so you can use these new fields if you want, but they are more suited to portfolio pagescategories = [""hackathon"", ""web-dev""]
coders = [""samrobbins85"", ""karina-talibzhanova""]
date = 2020-05-30T23:00:00Z
description = ""A Firefox Browser Extension""
github = [""https://github.com/karina-talibzhanova/oxfordhack2020""]
image = ""https://res.cloudinary.com/samrobbins/image/upload/q_auto/v1593352345/twoo-home_k7molq.png""
title = ""Oxford Digithon""
[[tech]]
logo = ""https://res.cloudinary.com/samrobbins/image/upload/q_auto/v1591793272/logos/logos_javascript_adj1dx.svg""
name = ""JavaScript""
url = ""https://www.ecma-international.org/memento/tc39.htm""
[[tech]]
logo = ""https://res.cloudinary.com/samrobbins/image/upload/q_auto/v1593368547/firefox-ar21_cps6me.svg""
name = ""Firefox WebExtensions""
url = ""https://www.mozilla.org/en-GB/firefox/""
The [[tech]] item can be repeated as many times as you desire.See AlsoAcademicAdritian Free Hugo ThemeBeautiful HugoBridgetDoors",NA
Fabian Tamp,47,2023-12-03,MIT,"Blog, Light, Minimal, Personal, Responsive",Paperesque,A lightweight theme for personal websites.,https://github.com/capnfabs/paperesque,NA,"PaperesqueA lightweight Hugo theme with a couple of neat tricks.You can see it in action on capnfabs.net, or on the Hugo Themes Example Site.Here’s what makes it special:Has a shortcode for resizing images to fit the page, and tools for removing originals from the outputVisual differentiation for draftsFootnotes turn into margin notes when there’s enough space.Install git subtree (easiest!) Copy the files into your repo using git subtree (this is way easier to use than submodules; here’s an explainer):git subtree add --prefix themes/paperesque https://github.com/capnfabs/paperesque mainline --squash
This will add a commit to your repo with everything ready to go. You’ll probably want to modify parts of this theme for your own usage! Subtree makes that easy, because you’ve just copied the code into your repo ✨git submodules If you’re sure you want to use git submodules:git submodule add -b mainline https://github.com/capnfabs/paperesque themes/paperesque
Select the theme in your config.toml Add / Modify the theme field in your config.toml for your hugo site:theme = ""paperesque""
Using Features Homepage You’ve got a bunch of options for the homepage:1. A custom list of links. This was the only thing supported until recently (Dec 2022-ish).Add something like this to your site’s config.toml:[[params.menu]]
  name = ""blog""
  url = ""posts/""

[[params.menu]]
  name = ""tags""
  url = ""tags/""

[[params.menu]]
  name = ""about""
  url = ""about/""

[[params.menu]]
  name = ""contact""
  url = ""contact/""
2. Markdown content You can create a /content/_index.md and the content of that page will render as the homepage.3. A section You can create a /content/_index.md and in the frontmatter add a display_section key. The name of that section will be used to render a list of content.4. A section + custom content in a sidebar. Do the same as for option 3 (‘a section’), but also include markdown content in that file. The markdown content will render on the left as a sidebar, and the list of section items will render in the main panel.Links in the top-right corner These are config driven! Add this to your config.toml (for example):[[params.topmenu]]
  name = ""about""
  url = ""about/""

[[params.topmenu]]
  name = ""contact""
  url = ""contact/""

[[params.topmenu]]
  name = ""rss""
  url = ""posts/index.xml""
Removing original images after resizing The fitfigure shortcode is exactly the same as the figure shortcode, but it automatically resizes your images to fit the container, and provides different resolutions for different DPIs (1x, 2x).Whenever you use this shortcode, the theme makes a mental note of the resource you specified.Now, you need to do some configuration if you want the originals to be removed from the output.First, add this to your site’s config.toml:[outputs]
page = [""HTML"", ""droplist""]
Now, as part of your build process, run:./themes/paperesque/buildscripts/drop-resources.py [hugo-output-directory]
(the Hugo output directory is usually ./public).That’s it! Resized resources will be removed.This is off by default because it peppers your build output with .droplist files, and if you’re not expecting them, it’s going to be an unpleasant surprise.Visual differentiation for drafts This one’s on, and can’t be switched off. Drafts have an orange stripey background everywhere. You can’t miss them.Footnotes turn into margin notes This is on by default.You can switch it off site-wide by adding disableMarginNotes = true to your params in your config.toml, i.e.[params]
disableMarginNotes = true
Alternatively, you can turn it off per-page by adding the disableMarginNotes = true to your front-matter for the page.Testing against the example site You can build the example site with this theme with:cd exampleSite
hugo serve --themesDir=../..
Hacking / Modifying the JS The javascript in use (static/js/main.js) is built from the ./js/ directory. Here are instructions for how to modify the JS:Set up First, you need to install the yarn package manager.Then, run:yarn install
to install the required dependencies.Dev builds Run:yarn run parcel watch
Simple as that!Production builds (i.e. before you commit code / deploy code) yarn run parcel build --no-source-maps
Experimental Scope Hoisting inlines Parcel’s module loader. It shaves off like 2kB Gzipped. Laugh all you want, but that’s half a second at dial-up speeds 😉Other resources The explanation for how a lot of this works is in this blog post, so take a look there if you get stuck or want to borrow some of the ideas without grabbing all of them.You can see who else is using this theme by searching Github for paperesque filename:config.toml (requires login).See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
Tom Forbes,67,2023-04-01,MIT,"Blog, Light, Minimal, Responsive",Bare,"A speed-focused, minimalist Hugo blog theme based on Bulma.io",https://github.com/orf/bare-hugo-theme,NA,"BarePreview: https://hugo-bare-theme.netlify.com/A speed-focused, minimalist Hugo blog theme based on Bulma.io. Looks
great on mobile and loads in a flash.HomepagePostMobileHow to use: Install the theme:git submodule add https://github.com/orf/bare-hugo-theme.git themes/bare
# This is required:
git submodule update --init --recursive
If using Netlify, add the following to your netlify.toml file:[build]
command = ""git submodule update --init --recursive --depth=1 && hugo --minify --ignoreCache""

[context.deploy-preview]
command = ""git submodule update --init --recursive --depth=1 && hugo -b $DEPLOY_PRIME_URL --minify --ignoreCache""
Configuring the theme Example configuration:[params]
mainSections = [""posts""]
author = ""Tom Forbes""
email = ""tom@tomforb.es""
description = 'Python developer living and working in Lisbon'
postcss = true
# Include the author name in the <title> of articles
includeAuthorInTitle = true
# Can be any colour here: https://bulma.io/documentation/layout/hero/#colors
# e.g ""warning"" or ""danger"" for yellow or red.
hero_colour = ""info""
The theme will pull posts from the content sections you define in mainSections. In the example above
all posts from content/posts will be included in the homepage.PostCSS You can use postcss to strip out all the unused Bulma CSS rules. This brings the CSS bundle down
from 180kb to 10kb.To enable this set params.postcss to true in your config.toml. Then, copy the package.json and the
postcss.config.js into your repository and run npm install.Social buttons Social buttons can be configured by adding a params.social array. Icons come from
https://materialdesignicons.com/:[[params.social]]
icon = ""github-circle""
url = ""https://github.com/my-github-user/""

[[params.social]]
icon = ""linkedin""
url = ""https://linkedin.com/in/my-username""
Hiding the theme link I get it, you might not want to have a link to this repo on the footer of your blog. Add disableAttribution to your
site parameters and it will be hidden.See AlsoAcademicAnubisBeautiful HugoBlondeBlowfish",NA
peaceiris,65,2023-08-02,MIT,"Blog, Dark, Multilingual, Personal, Portfolio, Responsive",Iris,Hugo Iris Theme - Portfolio and Blog,https://github.com/peaceiris/hugo-theme-iris,https://hugothemeiris.peaceiris.com/,"Hugo IRIS Theme




Go to the demo site.Table of Contents OverviewFeaturesRoadmapGetting StartedInstall HugoInstall GoInstall Node.js and npmInitialize New Hugo ProjectCreate a Post PageCreate a Slide PageCustomize Themeconfigcontentassetsdatai18nstaticHostingNetlifyGitHub Pages using ActionsShortcodescirclebuttonmermaidrepogithub-sponsors-listtablemathHow to Update the ThemeSpecial ThanksChangelogMaintainerContributingLicenseDevelopmentOverview This repository includes a Hugo theme.Features Dark ThemeResponsiveSupport MultilingualPaginationSEOGoogle AnalyticsOpen Graph ProtocolJSON-LDCanonical URL on headerPerformancePageSpeed Insights Scores: GoodLighthouse Scores: GoodContentsBreadcrumb ListSyntax HighlightingTable of ContentsRandom Post ListMathJax: Beautiful math in all browsers.mermaid: Generation of diagram and flowchart from text in a similar manner as markdown.reveal.js: Writing slides using Markdown.ImageResponsiveEye-catching ImageOGP ImageWebP: requiring a Hugo extended versionDisqus Comment SystemKeyboard Shortcut: Press ? (Shift+/) to show help modal.Roadmap Share ButtonsNetlify, Netlify CMSCategories, Tags, AuthorsFont AwesomeRelated posts, next and previous postBack to TOC ☝️Getting Started Install Hugo You can find the minimum supported Hugo version in theme.toml min_version. Using Hugo extended version is desirable.Install Go This theme depends on Hugo Modules.Download and install - The Go Programming LanguageInstall Node.js and npm This theme depends on node and npm.cf. Installing Node.js via package manager | Node.jsInitialize New Hugo Project Here is the setup script.mkdir homepage
wget https://raw.githubusercontent.com/peaceiris/hugo-theme-iris/main/scripts/setup.sh
bash ./setup.sh homepage ""your_github_id""
cd homepage
npm ci
hugo server
http://localhost:1313/Customize your site! ʕ◔ϖ◔ʔCreate a Post Page hugo new posts/new.md
Create a Slide Page hugo new --kind slide posts/new-slide.md
Back to TOC ☝️Customize Theme TBW.config content assets data i18n static Back to TOC ☝️Hosting Netlify GitHub Pages using Actions The following actions are useful to deploy your site to GitHub Pages using GitHub Actions.peaceiris/actions-hugo: GitHub Actions for Hugopeaceiris/actions-gh-pages: GitHub Actions for GitHub PagesBack to TOC ☝️Shortcodes circle If your logo image is located at assets/images/logo.jpg.{{< circle src=""images/logo.jpg"" alt=""hugo-theme-iris logo"" >}}
button <div class=""buttons"">
  {{< button href=""https://gohugo.io/"" txt=""Hugo Homepage"" >}}
  {{< button href=""https://github.com/gohugoio/"" txt=""Hugo GitHub"" >}}
  {{< button href=""https://discourse.gohugo.io/"" txt=""Hugo Forum"" >}}
  {{< button href=""https://twitter.com/GoHugoIO"" txt=""Hugo Twitter"" >}}
</div>
mermaid {{< mermaid >}}
sequenceDiagram
  participant Alice
  participant Bob
  Alice->>John: Hello John, how are you?
  loop Healthcheck
    John->>John: Fight against hypochondria
  end
  Note right of John: Rational thoughts <br/>prevail!
  John-->>Alice: Great!
  John->>Bob: How about you?
  Bob-->>John: Jolly good!
{{< /mermaid >}}
repo Run the following script to get the latest repository data.
The script requires the gh command.For more details: scripts/fetch_data.shbrew install gh
gh auth login
cd ./your_hugo_project
export GH_USER_ID=""peaceiris""
bash ./scripts/fetch_data.sh ""${GH_USER_ID}"" > ""./data/github/${GH_USER_ID}.json""
We can show a repository card like as follows.{{< repo id=""peaceiris"" name=""actions-gh-pages"" >}}

{{< repo id=""peaceiris"" name=""actions-hugo"" >}}
github-sponsors-list Please follow the instruction as the same as the repo shortcode.{{< github-sponsors-list id=""peaceiris"" >}}
table {{< table >}}
| Key | Value |
|---|---|
| Static Site Generator | Hugo |
| Language | Go |
{{< /table >}}
Mouse outMouse overmath See also the example page.When you use the ampersand sign &, you need to use the following math shortcode.{{< math >}}
\begin{vmatrix}a & b\\
c & d
\end{vmatrix}
{{< /math >}}
Back to TOC ☝️How to Update the Theme cd your_hugo_project
hugo mod get -u hugo mod get -u github.com/peaceiris/hugo-theme-iris
hugo mod tidy && hugo mod verify
git add go.mod go.sum
git commit -m ""deps: bump hugo-theme-iris""
Back to TOC ☝️Special Thanks HugoBulmareveal.jsMathJaxmermaidjaywcjlove/hotkeysBack to TOC ☝️Changelog hugo-theme-iris/CHANGELOG.mdMaintainer peaceiris homepageContributing To contribute to this Hugo theme.You can find more detail in our Contributing Guide.License MIT License - peaceiris/hugo-theme-irisDevelopment {{ partial ""console-log"" $hoge }}
Back to TOC ☝️See AlsoAcademicLightbiPaigeAnubisBear Cub",NA
Daniel Saunders,64,2023-11-03,Creative Commons Attribution 3.0,"Church, Podcast",Alpha Church,A hugo port of html5up Alpha theme. Customised for church use.,https://github.com/funkydan2/alpha-church,NA,"Alpha-Church by Daniel SaundersThis theme is based on Alpha by HTML5 UP @ajlkn. Free for personal and commercial use under the CCA 3.0 license.A clean, super minimal responsive template geared towards churches though it could be adapted for other community groups. This theme includes a landing page, open street maps, blog posts and a sermon podcast.You can see this theme ‘in the wild’ at https://gympiepresbyterian.org.au.Demo images courtesy of freelyphotos, totally free high-quality stock photography available under the fantastic CC0 (public domain) license.Feedback, bug reports, and comments are not only welcome but encouraged :)Settings If you need some help setting up your website, instructions are available here. Hugo also has a friendly and informative forum where you’ll find answers to many common questions.Credits: Design based on Alpha by HTML5 UP @ajlknDemo Images: FreelyPhotos:Banner Image (Church Building)Old BibleRunning ChildGroup of PeopleMicrophone (podcast cover)Unsplash:Old Phones by Pavan TrikutamIcons: Font AwesomeOther: jQueryhtml5shiv.js (@afarkas @jdalton @jon_neal @rem)CSS3 Piebackground-size polyfillRespond.jsSkelPlyrSee AlsoZen",NA
Daniel Saunders,64,2023-07-12,MIT,"Blog, Minimal, Responsive",Kiera,Hugo Theme for creative and technical writing,https://github.com/funkydan2/hugo-kiera,NA,"Kiera Theme for HugoKiera is the theme specialized in presenting writing layout like long essay or technical writing.It was originally developed by b. avianto and now maintained by funkydan2Kiera Theme for HugoMain FeaturesDemoInstallationUpdate the themegit submodule methodindependent directory methodConfigurationMenusCategories & TagsImagesCode highlightFont Awesome iconsMathematicsCommentingSupport and Pull RequestsMain Features Simple, ’no-nonsense’ styling.4 image placements with figure support using shortcodes.(Optional) Feature images for posts and twiter cards.Excellent code highlight support thanks to Hugo Chroma.Use Font Awesome for icons.Utilize normalize.css for consistent styling (Cloudflare CDN).Use Google Fonts: Ruda (serif) and Roboto Slab (sans-serif).Disqus or Utterances comments loaded on demand.Supports downloading extra Google Fonts.Demo Live demo: https://hugo-kiera.netlify.app/Installation Change into Hugo directory then:$ cd themes
$ git clone https://github.com/funkydan2/hugo-kiera.git hugo-kiera
More detailed instruction at Hugo Docs.Using git submodule is recommended instead of git clone as per recommendation from Netlify.$ cd /path/to/the/root/of/your/project/themes
$ git submodule add https://github.com/funkydan2/hugo-kiera.git
Update the theme git submodule method Use git to merge latest commits into your project by running:$ cd /path/to/the/root/of/your/project/
$ git submodule update --rebase --remote
independent directory method Delete the directory corresponding to the theme and download the latest version of the theme by cloning the repo:$ cd /path/to/the/root/of/your/project/
$ rm -rf themes/hugo-kiera/
$ git clone https://github.com/funkydan2/hugo-kiera.git themes/hugo-kiera/
Configuration For reference look inside folder exampleSite for content example and config.toml.Important: don’t delete or move archetypes folder from root unless it is necessary. Current Hugo priority lookup will look into this folder first before any other archetypes folder and could cause problem.Recommended optional config.toml:pygmentsCodeFences = true

disqusShortname = """" #Disqus shortname
googleAnalytics = """" #Google Analytics ID

[author]
    name = """"           #Author name
    github = """"         #Github username
    gitlab = """"         #Gitlab username
    linkedin = """"       #LinkedIn username
    facebook = """"       #Facebook username
    twitter = """"        #Twitter username
    instagram = """"      #Instagram username
    stackoverflow = """"  #StackOverflow username
    devto = """"          #Dev.to username 

[params]
    tagline = ""the tagline for this website""
    customCSS = []  #Optional Customised CSS
    disableDarkModeCSS = false # disables css style for users using dark-mode
Menus To add non-posts related page (eq. About page) to the main menu, adding these lines to the page front matter:TOML:menu = ""main""
meta = ""false""
YAML:menu: ""main""
meta: ""false""
meta refers to time, categories, tags and reading time which are not necessary for this kind of page.For posts listing page, add _index.md file inside content\posts folder with these front matter:TOML:title = ""Posts""
menu = ""main""
weight = ""10""
YAML:title : ""Posts""
menu : ""main""
weight : ""10""
Following menus are available:main, displayed in the navigation bar at the top of the pagefooter, displayed on the lower right, in the footerCategories & Tags Pages can include both, either, or neither Categories or Tags.
To link to tags use the url /tags/ (e.g. https://example.com/tags/) and /categories/ for categories.Images Site header A side header can be added in config.toml.site_logo = ""/link/to/image""
It is possible to use full width image as well, using either /link/to/image#full (which will affect only this image and
not the featured images for posts which may override the site header image) or site_logo_classes = ""full-image"" in config.toml (which
will affect all header images, even if a featured image of a post overrides the site logo).Featured images for posts A featured image for a post which will be shown in list overviews and at the top of the post page can be added in the frontmatter.images: [""/link/to/image""]
Here, too, it is possible to display the image in full width appending #full or #float to the URL (see below).Featured images can override the site logo on the post page, using replace_site_logo: false in the frontmatter.Images in text Kiera supports adding image as img tag with standard Markdown:![Image Title](link/to/image)to wrap it with figure use:{{< figure src=""/link/to/image"" >}}The basic placement is 100% width within content and scaled accordingly in smaller screen. Recommended width for image is 600 pixels minimum.Kiera supports different placement by adding:For img, use ![Image Title](link/to/image#placement)For figure, use {{< figure src=""/link/to/image"" class=""placement"" >}}There are 4 configured placements#full or class=""full"" for full width.
#mid or class=""mid"" for middle:
#float or class=""float"" for float left:
#float-right or class=""float-right"" for float right:
Code highlight Using fenced code with Chroma support.Font Awesome icons For usage, refer to Font Awesome.Mathematics Set Params.mathjax to true to enable support of mathematics display using MathJax. Math should be, by default, surrounded by dollar signs and produced using LaTeX syntax. Options may be overriden using static/js/mathjax-config.js.Static Commenting Disqus comments are loaded on demand, by clicking the View Comments button. Disqus comments can be automatically loaded and displayed by setting CommentAutoload = true in config.toml.Utterances, a Git based comment system, is also available. Utterance comments are loaded and displayed by default.Comments can be disabled for a single page by setting disableComments = true in the page frontmatter.Last Modified Date If the lastmod option is set on a page/post, either manually or because enableGitInfo is set to true, a line including the page’s last modification will be shown after the post date.Support and Pull Requests Please use GitHub issues to file bugs. If you can help fixing bugs, optimize the theme or adding features, please do pull requests, I really love to see what others can come up with.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
4s3ti,64,2023-02-20,MIT,Personal,TerminalCV,Terminal CV/Resume For geeks and sysadmins,https://github.com/4s3ti/terminalcv,NA,"terminalCVGeneral InformationAn easy to setup and (almost) fully customizable command line style CV themeLive example at: https://cv.4s3ti.netFeaturesCustom GreetingMulti line text is respectedCustomizable promptCustom prompt textCustom prompt text ColorCustom symbolsCustom symbols colorMultiple sections with individual commands:Whois: General information about the individualsocial: shows social networksAny social network is supported, even the ones that don’t exist! just provide a name and a URLThe social network name can be hidden and show only the URLwork: shows work experience informationTitle can have custom coloreducation: shows education informationTitle can have custom colorsklls: Shows skills informationSkill name can have custom colorsoftskills: shows softskills informationSkill name can have custom colorlanguages: Shows languages skills informationLanguage name can have custom colorprojects: Shows projects informationProject title can have custom colormisc: Free textmisc command can be overriden and given another nameTitle can have custom colorContent can have custom colorExtra commands:startx: Shows “loading&mldr;” progress bar and redirects to another websiteDisabled by defaultonly enabled if provided a location to send toexit: Shows “terminating&mldr;” progress bar and redirects to another websiteDisabled by defaultonly enabled if provided a location to send tosource: Shows the glider and the theme github repo URLEnabled by defaultCan be disabledCommand auto completionprogression bars can be interrupted by pressing ctrl+dFaviconsHow to startYou can download the theme manually by going to https://github.com/4s3ti/terminalcv.git and pasting it to themes/terminalcv in your root directory.You can also clone it directly to your Hugo folder:$ git clone https://github.com/4s3ti/terminalcv.git themes/terminalcv
If you don’t want to make any radical changes, it’s the best option, because you can get new updates when they are available. To do so, include it as a git submodule:$ git submodule add https://github.com/4s3ti/terminalcv.git themes/terminalcv
How to configureAll the content and configuration is done through the config.yml.you can just copy the existing example file and change it to your liking.Faviconss RealFaviconGenerator and put the generated files into the static your folderContributionsImprovements and suggestions are always welcome, feel free to open an Issue or Pull RequestIf you like this theme and want to support / contribute in a different way you can always:jcubic/Jquery.TerminalterminalCV makes use jcubic/jquery.terminalUsing this theme?Let me know and feel free to open a Pull Request and add it to this list:linkDescriptionhttps://cv.4s3ti.netSimple CVSee AlsoAcademicAdritian Free Hugo ThemeAnatoleAnubisArchie",NA
Christian Mendoza / Felix Börner,64,2022-09-22,Creative Commons Attribution 3.0 Unported,"Landing, Minimal, Personal, Responsive",Split,Split is a centrally-divided layout for a professional online presence with a big image or video left with alongside content.,https://github.com/escalate/hugo-split-theme,NA,"SplitSplit is a single page, centrally-divided layout for a professional online presense with a big image or video left with alongside content. It is a port of Split by One Page Love.This Hugo theme features an image or video visual section as well as a content section for your name, tagline, bio, and links.Installation Inside the folder of your Hugo site run:$ cd themes
$ git clone https://github.com/escalate/hugo-split-theme.git
For more information read the official setup guide of Hugo.Getting started After installing the Split theme successfully it requires a just a few more steps to get your site finally running.The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.toml. To use it, copy the config.toml in the root folder of your Hugo site. Feel free to customize this theme as you like.Add content Homepage Add a file named _index.md inside content directory to create your homepage. Use TOML configuration elements to set title and tagline of your page. Simple write your content in markdown style.$ hugo new content/_index.md
+++
title = ""Jenny Jones""
tagline = ""Designer. Stylist. Nomad.""
+++

Donec at libero id lectus porta dapibus eu in nibh. Cras id mauris sapien. Fusce viverra [luctus urna]({{< ref ""luctus-urna.md"" >}}) ac rutrum. Duis semper elit eu mi facilisis eleifend. Donec semper, [ipsum in]({{< ref ""ipsum-in.md"" >}}) malesuada congue, [purus sem]({{< ref ""purus-sem.md"" >}}) ullamcorper massa, sit amet lacinia nibh enim sed massa.
Additional pages You can create additional pages as usual inside content directory.$ hugo new content/luctus-urna.md
+++
title = ""luctus urna""
+++

Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis. Nullam sagittis. Suspendisse pulvinar, augue ac venenatis condimentum, sem libero volutpat nibh, nec pellentesque velit pede quis nunc.
Use an image Set enable to true. Add your image to the static folder and change file to the location of your image accordingly. By default the image position is centered, however you can specify your own by supplying position with a valid CSS position.[[params.visual.image]]
  enable = true
  file = ""images/background.jpg""
  position = ""center center""
Use a video First, disable the image by setting enable to false in [params.visual.image].Second, enable the video by setting enable to true in [params.visual.video].You can either use a video that you host or one that is on YouTube.Use your own videoAdd your video to the static folder and change file to the location of your video accordingly. Make sure you delete youtubeId or comment it out.[[params.visual.image]]
  enable = false
  ...
[params.visual.video]
  enable = true
  mute = true
  file = ""videos/background.mp4""
  # youtubeId = ""dk9uNWPP7EA""
Use a YouTube videoGet the ID of the YouTube video and add it to youtubeId. Make sure you delete file or comment it out.[[params.visual.image]]
  enable = false
  ...
[params.visual.video]
  enable = true
  mute = true
  # file = ""videos/background.mp4""
  youtubeId = ""dk9uNWPP7EA""
Add Custom CSSPut custom css styles in static/css/style.css and enable this css in the config:[params.custom.css]
  enable = true
Additional settingsSet mute to true if you want the video to play muted and false if you want the sound. The video is coded to autoplay and loop. If you want to change that the code can be found in layouts/partials/video.html.Add links You can have up to 3 column lists in the links section. heading is the list heading text. For the text links text is the link text and url is the link url. Follow the same snippet structure to add more links to a list. If you only want 1 or 2 lists, just remove the link list snippet you don’t want.This is what generates one link list:# Links List #1
[[params.links]]
  [params.links.list1]
    heading = ""Connect""

    [[params.links.list1.link]]
      text = ""Blog""
      url = ""#""
      new_tab = true # new tab

    [[params.links.list1.link]]
      text = ""Email""
      url = ""#""
      new_tab = false # Default, open at same tab

    [[params.links.list1.link]]
      text = ""Newsletter""
      url = ""#""
Add metadata author and description metadata helps search engines with how to display your site in search results. shareImage and twitterHandle help improves how your content is displayed when your site is shared across social media sites.author = ""Jenny Jones""
description = ""Split is a centrally-divided layout for a professional online presence with a big image or video left with alongside content.""
shareImage = ""images/social.jpg""
twitterHandle = ""onepagelove""
Add favicon Replace static/favicon.ico with your favicon. If you don’t want just delete favicon.ico and the line below.favicon = ""favicon.ico""
Add copyright Set copyright with the text you want for your copyright.copyright = ""&copy;2021 Your Name""
Add Google Analytics Enable Google Analytics by adding your tracking id to googleAnalytics. Leave empty or remove if you don’t want.googleAnalytics = ""UA-XXXXXXXX-1""
Nearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing Did you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License The original template is released under the Creative Commons Attribution 3.0 License. Please keep the original attribution link when using for your own project. If you’d like to use the template without the attribution, you can check out the license option via the template author’s website.Annotations Original Split Template by One Page LoveGirl Image by Joe GardnerClouds Over Mountain Video by John GuinnVideo integration CSS ninja skills by my bud ManuAlso thanks to Steve Francia for creating Hugo and the awesome community around the project.See AlsoAcademicAdritian Free Hugo ThemeHugoplateOsprey DelightPaige",NA
Paul Martins,62,2023-09-05,MIT,"Dark, Light, Personal",Digital Garden,Theme inspire by Maggie Appleton's digital garden.,https://github.com/paulmartins/hugo-digital-garden-theme,https://hugo-digital-garden-demo.netlify.app/,"


Digital Garden Theme for HugoA simple Hugo theme for your digital garden, inspired by Maggie Appleton websiteDEMOThis theme includes:a digital garden / bloga projects portfoliolibrary notesGetting started Install hugo and create a new website: https://gohugo.io/getting-started/quick-start/Add the theme to your websiteYou can either use git submodule or clone the repo in your theme foldergit submodule add https://github.com/paulmartins/hugo-digital-garden-theme.git themes/hugo-digital-garden-theme
cd themes
git clone https://github.com/paulmartins/hugo-digital-garden-theme.git
Customize your site in your config.toml. An example is given in the theme folder: themes/digital-garden/exampleSite/config.tomlRun the server and check your localhost:1313hugo server
Extra tips You will write the content for your website in a content folder, for example in content/garden/evergreen_example.md. If you want to have your content folder in your root directory, you can copy that from the exampleSite folder to your root directory. In the root directory’s config.toml you will need to change the themesdir to have themesdir = ""./themes"". You now run hugo server in the root directory of your project, and Hugo will start your website locally on an available port.If you want to compare the website from this to the example site, you can start hugo server in the exampleSite directory too. Hugo will use different ports for each server, so you can compare the rendered pages with each other.To create custom styling, you can create ./static/css/my_style.css. The CSS styling in here will override the theme’s default styling. Here is an example custom CSS file from a user’s blog, and here is one of their published pages looks. You can see the custom table formatting: custom header row colour, alternating row backgrounds, custom fonts, etc.Update to the latest version of the theme If you used git submodule to add the theme (see Getting started) dogit submodule update --remote --rebase
If you clone the theme, just go in the theme folder and pullcd themes/hugo-digital-garden-theme
git pull
See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
Kaushik Gopal,41,2023-12-05,NA,"Blog, Multilingual, Responsive",Henry Hugo Theme,Henry is a gorgeous Hugo theme optimmized for a good reading experience and packed with features,https://github.com/kaushikgopal/henry-hugo,NA,"HenryHenry is a Hugo theme with a gorgeous reading experience, chock-full of features. To find out more about all the features check out this blog post.Getting StartedThe easiest way to get up and running with a Hugo blog using Henry is as follows:# 1. Install Hugo
#    https://gohugo.io/getting-started/installing/
brew install hugo

hugo new site blog-henry
cd blog-henry

# 2. clone Henry
git clone git@github.com:kaushikgopal/henry-hugo.git themes/henry

# 3. configure blog
## add these lines to your hugo.toml config file
theme = ""henry""
[params]
    ExternalLinkIndicator = ""»""

[outputs]
    page = [""HTML""]
    home = [""HTML"", ""RSS"", ""JSON""]
    section = [""HTML"",""RSS""]
    taxonomy = [""HTML"",""RSS""]

[outputFormats]
[outputFormats.RSS]
    mediatype = ""application/rss""
    baseName = ""feed""

# 4. run Hugo!
hugo server -D
open http://localhost:1313/

# sample posts are in henry's content folder : themes/henry/content
# if you want to see some samples, just mark them from draft true → false
You’re good to go. Happy blogging!ContributingBug reports and pull requests are welcome on GitHub. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct.Henry in the WildHere are a couple of blogs that use Henry:Karthick Gopal’s blogKaushik Gopal’s blogLicenseThe theme is available as open source under the terms of the MIT License.See AlsoAcademicAnanke Gohugo ThemeAnubisBear CubBeautiful Hugo",NA
Gökmen Görgen,61,2023-06-27,MIT,"Dark, Light, Responsive",alaGeek,A Cocoa Enhanced based theme. It's rewritten with Bootstrap 5.,https://github.com/gkmngrgn/hugo-alageek-theme,NA,"HUGO ALAGEEK THEMEalaGeek is an enhanced version of the
Cocoa theme featuring a customizable
homepage with different sections including the latest posts, syntax highlighting and
MathJax support and much more. It’s rewritten with Bootstrap 5.Websites that are using Hugo with alaGeek theme:https://alageek.comhttps://gokmengorgen.net~Feel free to open a pull-request to add your website here, I’ll check this list every new version. You don’t need to use the latest version of the theme.~NEW UPDATE: I don’t use Hugo anymore. Please fork and develop if you still need this theme.FEATURES Social media links on the footer:500pxFacebookFlattrGitHubGitLabLinkedinMastodonTwitterHomepage with latest and best posts.Single pages, sections with a header and a list of articlesSyntax highlighting with highlightjsProgressive imagesTwitter cards supportLaTeX support with MathJaxPossibility to add extra scripts with footer_extra.htmlDisqus supportDark-mode supportHigh accessibility scorePagination support in blog postsGeneral and post-specific Table of Contents support.DEPENDENCY VERSIONS bootstrap: 5.2.1highlightjs: 11.6.0mathjax: ^3.0.0progressively: latest stable versionTYPOGRAPHY You can customize the fonts copying and editing style_main.html file. The defaults
are:Title: Merriweather SansContent: MerriweatherCode: Fira CodeSUPPORTED LANGUAGES CatalanEnglish (Default)RomanianRussianSpanishTurkishBACKWARD-INCOMPATIBLE CHANGES V3.0.0: REGENERATE PROJECT FROM SCRATCH icon_back.html has been renamed icon_prev.html.header_extra.html has been renamed head_extra.html.HEAD tags have been moved to head.html.All script lines have been moved to footer_extra.html.highlight.css has been removed and a new partial template style_highlight.html has
been created.V2.0.0: NEW MARKDOWN PARSERS If you prefer to use Goldmark instead of Blackfriday for Markdown parser, you need to
set xhtml: true for activating progressively extension. Also, you need to set
unsafe: true if you use Bootstrap HTML components in Markdown files. Please take a
look at this document for
more information.V2.0.0: BOOTSTRAP V5 MIGRATION If you have a Bootstrap v4 specific customization on your theme, please take a look at
this document or keep your theme in the
old version v1.5.0.HOW DARK MODE WORKS It automatically reads your system or browser color scheme and activates the dark or
light mode. If you want to use dark mode in all cases, copy and move the main.css into
your static folder keeping the path, remove light-mode specific colors.LICENSE Licensed under the MIT License. See the LICENSE.md file for more details.See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
roninro,60,2022-11-28,Apache,"Blog, Light, Responsive",Puppet,a simple and clean theme for Hugo,https://github.com/roninro/hugo-theme-puppet,https://hugo-theme-puppet.netlify.app/,"Hugo Theme PuppetPorted Theme of Hux Blog, Thank Huxpro for designing such a flawless theme.DemoScreenshot Features  Responsive SEO Table of Contents Image Zoom Syntax Highlighting Search Comments Google Analytics Custom CSS and JS Custom 404 Page Custom Favicon Custom Social IconsInstallation $ git clone https://github.com/roninro/hugo-theme-puppet.git themes/puppet
Configuration Take a look inside the exampleSite folder of this theme. You’ll find a file called config.toml.
To use it, copy the config.toml in the root directory of your website. Overwrite the existing config file if necessary.Content Archive Page add archive/_index.md to your content folder. This file will be used as the archive page.About Page like the archive page, add about/_index.md to your content folder.Social Icons The default data of social links is located in social.tomlYou can directly set your id to get a default social link icon[params.social]
mastodon = ""@xxxxx""
Or You can set more options through a dict:[params.social.mastodon]
weight = 56
icon = ""fab fa-mastodon""
format = ""https://mastodon.social/%v""
id = ""johndoe""
url = """"
License ApacheSee AlsoCalligraphyEdHugo ReFreshTatBanTheme2.0Vno",NA
Sebastian Pech,59,2023-07-09,MIT,"Bootstrap, Landing, Light, Minimal, Responsive",Bootstrap-BP-Startpage,Bootstrap based Hugo startpage theme which provides out of the box best practices.,https://github.com/spech66/bootstrap-bp-hugo-startpage,NA,"Bootstrap-BP hugo startpageBootstrap based Hugo startpage theme which provides out of the box best practices.
This theme is a combination of my Bootstrap-BP hugo theme and my startpage.
Instead of rendering the items on-the-fly as in the startpage theme the Bootstrap-BP hugo startpage will generate a complete single page site.Other themes by Sebastian Pech: Bootstrap-BP, Materialize-BP,
Bootstrap-BP hugo startpage.Install the theme With Git installed, run the following commands inside the Hugo site folder. If Hugo has not yet been installed, read the setup guide here.mkdir themes
cd themes
git clone https://github.com/spech66/bootstrap-bp-hugo-startpage.git
You can get a zip of the latest version of the theme from the home page and extract it to the themes folder.Theme settings Most settings should be done with hugo specific variables. There are only a few (optional) additional [params].welcomeText = ""Startpage!"" is the text above the search boxstartPageColumns = true will show the start page in grouped listsActivate the search engine you want to use (or add a new one).[[params.searchEngines]]
  name = ""Google""
  activated = true
  url = ""https://www.google.com/search""

[[params.searchEngines]]
  name = ""DuckDuckGo""
  activated = true
  url = ""https://duckduckgo.com/""

[[params.searchEngines]]
  name = ""Bing""
  activated = true
  url = ""https://www.bing.com/search""

[[params.searchEngines]]
  name = ""Baidu""
  activated = true
  url = ""https://baidu.com/""
  searchkey = ""kw""
Define the links in a file in data/links.yml. This needs to be structured like this.---
- group: Social media
  items:
    - title: reddit
      url: https://www.reddit.com
      icon: fab fa-reddit
    - title: Facebook
      url: https://www.facebook.com
      icon: fab fa-facebook
- group: Utilities
  items:
    - title: GitHub
      url: https://www.github.com
      icon: fab fa-github
Icons are taken from Font Awesome.Sources Background image by Mikael GustafssonInspired by:Reddit - r/startpagesGithub - 0-Tikaro - Minimum Viable Startpage, Searchbox codeGithub - ViktorKare - startpageSee AlsoAdritian Free Hugo ThemePaigeAcademicAce documentationBeautiful Hugo",NA
Ben Cuan,59,2023-06-08,MIT,"Docs, Multilingual, Responsive",Amethyst,Obsidian-compatible Hugo theme for personal notes,https://github.com/64bitpandas/amethyst,https://amethyst.bencuan.me,"Amethyst Hugo Theme
Why Amethyst? I write most of my notes in Obsidian. When trying to find a suitable open-source alternative for Obsidian Publish, I couldn’t find exactly what I was looking for: a simple, customizable theme with sidebar navigation that supported Obsidian features (like backlinks or LaTeX) in such a way that didn’t require me to reformat my notes.Amethyst is an attempt to deliver this by combining the navigational features of hugo-book with the Obsidian integrations of quartz to provide a hassle-free place to store and host personal notes or documentation.Features Amethyst preserves most of the features of quartz and hugo-book, including:Navigation sidebars on left and right of contentObsidian-style calloutsInteractive graph viewMermaidJS chartsUser-togglable dark modeSearch barMulti-language supportMobile supportObsidian-style back/forward links and page previewsSome new features that were added on top:Custom formatting of tabs, sections, and expands specifically for Q&A-style interactionEasy customization of theme colors and fontsLaTeX enabled out of the box with no additional configSupport for both absolute and relative links, Obsidian-styleDocumentation If you just want to use Amethyst for your own notes hosting, go to amethyst.bencuan.me for a demo and documentation on how to use it.Keep reading if you want to help develop Amethyst, or make changes to the code base for your own needs.Requirements Go 1.16 or higher: installation instructionsHugo 0.93 or higher: installation instructionsIf installing on Ubuntu/Debian-based systems, this is a higher version than is available in apt at the time of writing. Install the extended version from the releases page instead.Hugo-obsidian: Run go install github.com/jackyzha0/hugo-obsidian@latest.If you’re getting a command not found error, ensure that your PATH is configured properly so that binaries in the GOPATH can be executed.Live Server Start the live server using make serve. Content will be served to localhost:1313 by default.The server will need to be restarted to preview changes to navigation (internal links and sidebar menu).Configuration Site Configuration Most configuration can be done by creating a config.yaml file in the root directory and editing the parameters. You can start by copying the example here.Graph-specific configuration can be added to data/graphConfig.yaml. (Example here)Multi-Language Support Theme supports Hugo’s multilingual mode, just follow configuration guide there. You can also tweak search indexing configuration per language in i18n folder.Page Configuration You can specify additional params in the front matter of individual pages:# Set type to 'docs' if you want to render page outside of configured section or if you render section other than 'docs'
type = 'docs'

# Set page weight to re-arrange items in file-tree menu (if BookMenuBundle not set)
weight = 10

# (Optional) Set to 'true' to mark page as flat section in file-tree menu (if BookMenuBundle not set)
bookFlatSection = false

# (Optional) Set to hide nested sections or pages at that level. Works only with file-tree menu mode
bookCollapseSection = true

# (Optional) Set true to hide page or section from side menu (if BookMenuBundle not set)
bookHidden = false

# (Optional) Set 'false' to hide ToC from page
bookToC = true

# (Optional) If you have enabled BookComments for the site, you can disable it for specific pages.
bookComments = true

# (Optional) Set to 'false' to exclude page from search index.
bookSearchExclude = true

# (Optional) Set explicit href attribute for this page in a menu (if BookMenuBundle not set)
bookHref = ''
Partials There are layout partials available for you to easily override components of the theme in layouts/partials/.In addition to this, there are several empty partials you can override to easily add/inject code.Empty PartialPlacementlayouts/partials/docs/inject/head.htmlBefore closing <head> taglayouts/partials/docs/inject/body.htmlBefore closing <body> taglayouts/partials/docs/inject/footer.htmlAfter page footer contentlayouts/partials/docs/inject/menu-before.htmlAt the beginning of <nav> menu blocklayouts/partials/docs/inject/menu-after.htmlAt the end of <nav> menu blocklayouts/partials/docs/inject/content-before.htmlBefore page contentlayouts/partials/docs/inject/content-after.htmlAfter page contentlayouts/partials/docs/inject/toc-before.htmlAt the beginning of table of contents blocklayouts/partials/docs/inject/toc-after.htmlAt the end of table of contents blockExtra Customisation FileDescriptionstatic/favicon.pngOverride default faviconassets/_custom.scssCustomise or override scss stylesassets/_variables.scssOverride default SCSS variablesassets/_fonts.scssReplace default font with custom fonts (e.g. local files or remote like google fonts)assets/_colors.scssChange the default color schemesassets/mermaid.jsonReplace Mermaid initialization configPlugins There are a few features implemented as plugable scss styles. Usually these are features that don’t make it to the core but can still be useful.PluginDescriptionassets/plugins/_numbered.scssMakes headings in markdown numbered, e.g. 1.1, 1.2assets/plugins/_scrollbars.scssOverrides scrollbar styles to look similar across platformsTo enable plugins, add @import ""plugins/{name}""; to assets/_custom.scss in your website root.Hugo Internal Templates There are a few hugo templates inserted in <head>Google AnalyticsOpen GraphTo disable Open Graph inclusion you can create your own empty file \layouts\_internal\opengraph.html.
In fact almost empty not quite empty because an empty file looks like absent for HUGO. For example:<!-- -->
Versioning This theme follows a simple incremental versioning. e.g. v1, v2 and so on. There might be breaking changes between versions.If you want lower maintenance, use one of the released versions. If you want to live on the bleeding edge of changes, you can use the main branch and update your website when needed.Contributing Contributions are welcome! Please make an issue or pull request if there are any changes you’d like to see.Credits A large portion of Amethyst’s code base can be derived from the following two projects. Original attribution goes to the creators of these projects; I just put them together, squashed all the bugs, and customized the styles to fit my needs for Amethyst.Hugo BookQuartzSee AlsoAcademicBookBootstrap Theme for Personal Blog and DocumentationsDark Theme EditorDocsy",NA
xioyito,37,2023-11-26,MIT,"Blog, Responsive",NewBee,"NewBee is a elegance, clean Hugo Theme with high interaction for blogger",https://github.com/xioyito/NewBee,NA,"English | 简体中文Preview Example Site You can see this theme in action on my site.Features Functionslocal search without any configurationmulti-languageSyntax HighlightCustom HeaderCustom footernight modeA sidebar can be open or close at all timesExtended ShortcodesValine commentMusic player based on Aplayer and MetingJSCount of Visitor and viewsComponentsArchive(posts) pageCategories taxonomyTags taxonomyseries taxonomyAuthor cardPre and Next buttonsponsor cardOtherResponsiveLight-Neumorphism styleHigh interactionSmooth transitionsQuick Start For more information, please go to: https://gohugo.io/getting-started/quick-start/Install Hugo(extended version) The following is For macOS system, other systems see: https://gohugo.io/getting-started/installing/Homebrew ~ % brew install hugo
MacPorts ~ % port install hugo
install NewBee First, you need to create a new site(e.g. my-blog) by Hugo:~ % hugo new site my-blog
You have 2 methods to install NewBee after creating a new site:Method 1 download the theme manually by going to https://github.com/xioyito/NewBee and pasting it to themes in your root directory.Method 2 clone it directly to themes:~ % cd my-blog
my-blog % git clone https://github.com/xioyito/NewBee.git themes/NewBee
Configuration That’s simple, just copy the file NewBee/config-example/hugo.toml to your Hugo root directory.First post create a new post:my-blog % hugo new ""posts/first-post.md""
create about page:my-blog % hugo new ""about/_index.md""
Now:my-blog % hugo server -D
go to http://localhost:1313/ in your browser. From now your browser will refresh automatically when the files in your site changes , so you don’t need to refresh your browser every time.Customize NewBee if you want to override some of the styles, just create a file my-blog/static/css/custom.css and add your own styles into this file.Help NewBee be better Found a bug? If you find any bugs, welcome to use Issue or create a new Pull Request to fix the issue.A NewBee theme user? I’d appreciate your support, if you want to share your site, please make a contribution and add your site to the list.Sponsoring If you like the theme and support my work, just do:AlipayWechatThank you.License Copyright © 2022 xioyitoNewBee theme is released under the MIT License, see more: https://github.com/xioyito/NewBee/blob/master/LICENSESee AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Caio Lente,56,2023-10-27,MIT,"Blog, Dark, Minimal, Multilingual, Personal, Responsive",Bear Cub,"A lightweight Hugo theme based on Bear Blog and Hugo Bear Blog. It is free, multilingual, optimized for search engines, no-nonsense, responsive, light, and fast. Really fast.",https://github.com/clente/hugo-bearcub,https://clente.github.io/hugo-bearcub,"ᕦʕ •ᴥ•ʔᕤ Bear Cub
Overview 🐻 A lightweight Hugo theme based on Bear
Blog and Hugo Bear
Blog.Bear Cub takes care of speed and optimization, so you can focus on writing
good content. It is free, multilingual, optimized for search engines,
no-nonsense, responsive, light, and fast. Really fast.Installation Follow Hugo’s quick start to
create an empty website and then clone Bear Cub into the themes directory as
a Git submodule:git submodule add https://github.com/clente/hugo-bearcub themes/hugo-bearcub
To finish off, append a line to the site configuration file:echo 'theme = ""hugo-bearcub""' >> config.toml
Features Like Bear Blog, this theme:Is free and open sourceLooks great on any deviceMakes tiny (~5kb), optimized, and awesome pagesHas no trackers, ads, or scriptsAutomatically generates an RSS feedBut that’s not all! Bear Cub is also&mldr;Accessible Bear Cub has a few accessibility upgrades when compared to its predecessors.
The color palette has been overhauled to make sure everything is
readable for users with low
vision impairments or color deficiencies, and some interactive elements were
made bigger to facilitate clicking
for users with a motor impairment.These small changes mean that Bear Cub passes Google’s PageSpeed
test
with flying colors.Secure Bear Cub’s demo is hosted on GitHub
and therefore I’m not in control of its Content Security
Policy.
However, the theme itself was made with security in mind: there are no inline
styles and it uses no JavaScript at all.If you want to improve your Mozilla
Observatory score even further, you should be
able to simply add a few headers to your hosting service’s configuration (e.g.
Netlify or Cloudflare
Pages) and never
have to think about it again. My _headers file, for example, looks like this:/*
  X-Content-Type-Options: nosniff
  Strict-Transport-Security: ""max-age=31536000; includeSubDomains; preload"" env=HTTPS
  Cache-Control: max-age=31536000, public
  X-Frame-Options: deny
  Referrer-Policy: no-referrer
  Feature-Policy: microphone 'none'; payment 'none'; geolocation 'none'; midi 'none'; sync-xhr 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'
  Content-Security-Policy: default-src 'none'; manifest-src 'self'; font-src 'self'; img-src 'self'; style-src 'self'; form-action 'none'; frame-ancestors 'none'; base-uri 'none'
  X-XSS-Protection: 1; mode=block
Multilingual If you need to write a blog that supports more than one language, Bear Cub
has you covered! Check out the demo’s config.toml
file
for a sample of how you can setup multilingual support.By default, the theme creates a translation button that gets disabled when the
current page is only available in any other language. You can also choose to
hide this button (instead of disabling it) by setting hideUntranslated = false.More Every once in a while, as I keep using Bear Cub, I notice that there is some
functionality missing. Currently, these are the “advanced features” that I have
already implemented:Full-text RSS feed: an enhanced RSS feed template that includes the (properly
encoded) full content of your posts in the feed itself.Static content: you can create empty blog entries that act as links to static
files by including link: ""{url}"" in a post’s front
matter. You can also add
render: false to your build
options to avoid
rendering a blank post.Skip link: a “skip to main content” link that is temporarily invisible, but
can be focused by people who need a keyboard to navigate the web (see PR
#5 by
@2kool4idkwhat for more information).Reply by email: if you supply an email address, the theme creates a “Reply to
this post by email” button at the end of every post (see Kev Quirk’s original
implementation).Single-use CSS (EXPERIMENTAL): you can add some styles to a single page by
writing the CSS you need in assets/{custom_css}.css and then including
style: ""{custom_css}.css"" in the front
matter of said page.Conditional CSS (EXPERIMENTAL): since Bear Cub does syntax highlighting
without inline styles (see config.toml for more information), it only load
its syntax.css if, and only if, a code block is actually present in the
current page.Dynamic social card generation (EXPERIMENTAL): if you don’t add preview images
to a post, this template will generate one based on the title. You can see an
example below.Configuration Bear Cub can be customized with a config.toml file. Check out the
configuration
of the demo for more information.# Basic config
baseURL = ""https://example.com""
theme = ""hugo-bearcub""
copyright = ""John Doe (CC BY 4.0)""
defaultContentLanguage = ""en""

# Generate a nice robots.txt for SEO
enableRobotsTXT = true

# Your name. For more information on why this must be a list, see
# https://discourse.gohugo.io/t/site-author-usage/31459/8
[author]
  name = ""John Doe""

# Setup syntax highlighting without inline styles. For more information about
# why you'd want to avoid inline styles, see
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src#unsafe_inline_styles
[markup]
  [markup.highlight]
    lineNos = true
    lineNumbersInTable = false
    # This allows Bear Cub to use a variation of Dracula that is more accessible
    # to people with poor eyesight. For more information about color contrast
    # and accessibility, see https://web.dev/color-and-contrast-accessibility/
    noClasses = false

# Multilingual mode config. More for information about how to setup translation,
# see https://gohugo.io/content-management/multilingual/
[languages]
  [languages.en]
    title = ""Bear Cub""
    languageName = ""en-US 🇺🇸""
    LanguageCode = ""en-US""
    contentDir = ""content""
    [languages.en.params]
      madeWith = ""Made with [Bear Cub](https://github.com/clente/hugo-bearcub)""
  [languages.pt]
    title = ""Bear Cub""
    languageName = ""pt-BR 🇧🇷""
    LanguageCode = ""pt-BR""
    contentDir = ""content.pt""
    [languages.pt.params]
      madeWith = ""Feito com [Bear Cub](https://github.com/clente/hugo-bearcub)""

[params]
  # The description of your website
  description = ""Bear Cub Demo""

  # The path to your favicon
  favicon = ""images/favicon.png""

  # These images will show up when services want to generate a preview of a link
  # to your site. Ignored if `generateSocialCard = true`. For more information
  # about previews, see https://gohugo.io/templates/internal#twitter-cards and
  # https://gohugo.io/templates/internal#open-graph
  images = [""images/share.webp""]

  # This title is used as the site_name on the Hugo's internal opengraph
  # structured data template
  title = ""Bear Cub""

  # Dates are displayed following the format below. For more information about
  # formatting, see https://gohugo.io/functions/format/
  dateFormat = ""2006-01-02""

  # If your blog is multilingual but you haven't translated a page, this theme
  # will create a disabled link. By setting `hideUntranslated` to true, you can
  # have the theme simply not show any link
  hideUntranslated = false

  # (EXPERIMENTAL) This theme is capable of dynamically generating social cards
  # for posts that don't have `images` defined in their front matter; By setting
  # `generateSocialCard` to false, you can prevent this behavior. For more
  # information see layouts/partials/seo_tags.html
  generateSocialCard = true

  # Social media. Delete any item you aren't using to make sure it won't show up
  # in your website's metadata.
  [social]
    email = ""me@example.com"" # Added to the footer so readers can reply to posts
    twitter = ""example"" # Twitter handle (without '@')
    facebook_admin = ""0000000000"" # Facebook Page Admin ID
Contributing If you come across any problems while using Bear Cub, you can file an
issue or create a pull
request.See AlsoAcademicAnubisColor Your WorldHugoplateLightbi",NA
Jordan GAZEAU,34,2023-11-20,MIT,Docs,Shadocs,Multipurpose Theme for sharing documentation,https://github.com/jgazeau/shadocs,https://shadocs.netlify.app/,"Shadocs theme for HugoChecks 
Documentation To get all the needed information about the theme, visit the Shadocs documentation website which is built on it.See AlsoAcademicAce documentationAdam & EveAmethystBook",NA
WayJam So,54,2023-07-15,MIT,"Archive, Blog, Dark, Light",fluency,A fluent Hugo theme for writers and bloggers.,https://github.com/wayjam/hugo-theme-fluency,NA,"Fluency for Hugo

A fluent theme for hugo. You may find screenshot at images/. And preview this theme at a live demo which hosted on netlify.Installation Navigate to the root directory of your Hugo site and clone this repository.git submodule add https://github.com/wayjam/hugo-theme-fluency.git themes/fluency
Then, add the theme to the site configuration(config.yaml).Refer to the Hugo docs for more information.Update git submodule update --rebase --remote
Configurtion & Customization Refer to Getting Started.Contributing Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.Please make sure to update tests as appropriate.References IonIcons: https://github.com/ionic-team/ionicons/License Released under the MIT License.See AlsoBootstrap Theme for Personal Blog and DocumentationsPikoAcademicAnubisBlonde",NA
it-gro,53,2023-03-06,MIT,"Blog, Company, Contact, Gallery, Landing, Personal, Portfolio, Responsive",W3.CSS Basic,"This theme is built with W3.CSS and is highly configurable. More than 100 monochromatic color themes and 25 shortcodes. It has support for Cookie consent, image processing, image galleries, page bundles and resources (attachments).",https://github.com/it-gro/hugo-theme-w3css-basic,https://it-gro.github.io/hugo-theme-w3css-basic.github.io,"W3.CSS Basic Theme for HugoW3.CSS Basic is a website template built with W3.CSS.Inspiration was taken from
Universal. It is highly
configurable.
Change all colors in the blink of an eye, change default settings or disable
Frontpage elements.See the exampleSite for a demo.This theme is for:Landing pagesBlogsPages (not blog) in a directory structure with simple navigation (Top/Up/Down & pages on this level)People who like monochromatic colorsTable of Contents Latest NewsGoalsFeaturesIncluded ResourcesFeatures TagsFeatures ListInstallationConfigurationLanguageFrontpageMarqueeJumbotronPhotocardsFeaturesRecent PostsSee MoreTestimonialsClientsBlogBlog ListDate formatDisqusRelated ContentAnchorsPagesPages NavigationColor ThemeFaviconsEmojiSummaryPaginationSyntax HighlightingMenuFontsChoose any Font via googleapisContact MapGoogle TranslationGoogle Custom Search APIGoogle Analytics-Tracking using gtagFootercookieconsentRSSTracingCustom CSS and JSFront MatterShortcodesPage ResourcesHeadless ImagesImagesAttachmentsInclude FilesGalleryres-galleryheg-galleryFigureres-figureheg-figureShowcaseUsageMinifierWorkaroundssummaryLengthShortcode output wrapped in <p>TrackingToDo’sContributingLicenseThanksMore ScreenshotsLatest News Hugo 0.58 readyAdded shortcodes:term-interm-outSee more TerminalAdded breadcrumpconfig.toml[params.options]
  # used in layouts/partials/page.nav.breadcrump.html
  showNavBreadcrump   = true
  navBreadcrumpTitle  = true
  navBreadcrumpHome   = false
Improved configuration forMarqueeHeadless Images (Page Resources)Taxonomy Baradditional navigation elements in titleconfig.toml[params.options]
  # used in layouts/partials/main.headline.nav-right.html
  jsHistoryNav        = true
  jsHistoryNavForward = false
  showNavUp           = true
Added AnchorsAdded Related ContentAdded shortcode:res-gallery
Added cookieconsent
Teaser images are now resource imagesNew Front Matter (resImgTeaser is replacing teaserPic):resImgTeaser:          teaserpics/pixabay.com/adventure-2528477.jpg
Default is to resize with reasonale dimensions. You may overwrite the defaults:resImgTeaser:          teaserpics/pixabay.com/adventure-2528477.jpg
resImgTeaserCmd:       Fill
resImgTeaserOpt:       400x400
resImgTeaserInCardCmd: Fill
resImgTeaserInCardOpt: ""150x50 Bottom""
See the teaser image here: These
Logos and compare to the one on the page.User has now to agree to Disqus. You may skip this viaconfig.toml  disqusSkipAgree = true
Added shortcodes:res-figure
res-attach
readfile
Added color theme preview via color theme selector (not on small displays)
  # This may help you to to select a w3cssColorTheme
  themeColorSelectorEnable = true
Goals My goals for this theme are:be as universal as the Universal themecreate a W3.CSS theme (there are many Bootstrap themes)mobile first, responsivebasic usage without javascript has to be possibledo as much as possible not to expose visitors to tracking by third-party against their willtry to be DRYsupport experimenting with monochromatic colorsuse teaser pictures and icons as eye-catcherFeatures Included Resources This theme includes resources from:https://www.w3schools.com/w3css/https://fontawesome.com/icons/https://owlcarousel2.github.io/OwlCarousel2/https://daneden.me/animatehttps://github.com/liwenyip/hugo-easy-gallery/http://photoswipe.comhttps://fonts.google.com/https://translate.google.comhttps://cse.google.comhttps://developers.google.com/gtagjs/devguide/snippethttps://cookieconsent.insites.comFeatures Tags: animate, attachments, blog, branch-bundle, carousel, clients, color-themes,
configuration, contact-form, cookie-consent, custom-themes, data, debug, disqus,
emoji, features, figure, font-awesome, formspree.io, gallery, google-analytics,
google-custom-search, google-fonts, google-map, google-translate,
headless-bundle, hugo-easy-gallery, i18n, image-processing, jumbotron,
landing-page, leaf-bundle, marquee, menu, menutopbar, mobile,
monochromatic-colors, navigation, page-bundles, page-resources, pages,
pagination, photocards, privacy, responsive, search, see-more, submenu,
taxonomy-bar, taxonomy-list, teaser-pictures, teasers, term-list, testimonials,
tracingFeatures List Monochromatic Color SchemesWorks with disabled javascript (using fallbacks)Responsive design3 (medium, lage) or 1 (small) column layoutsmall menu (truncated) on small screen (no collapse)Customizable landing pageoptional marquee (using css)optional data/jumbotron (carousel (if js is enabled) )optional data/photocards (optional css animation)optional data/features (optional css animation)optional data/testimonials (carousel (if js is enabled) )optional data/clients (carousel (if js is enabled) )Fontawesome version 5 (local)Google fonts - either via api (any font) or via local files (choose local to reduce tracking)Optional google translate widget (if js is enabled - disable it to reduce tracking)Optional Google Global Site Tags with your GA_TRACKING_ID (do not activate to reduce tracking))Contact pageoptional formspree.iomailto: without formspree.io (avoid tracking & leaking)google map (if js is enabled - do not provide coordinates to reduce tracking)Search pagegoogle customizable search api (if js is enabled - just do not include search in menu to reduce tracking)Alternative navigation instead of breadcrumbs (Top/Up/Down & pages on this level)hugo-easy-gallery (including PhotoSwipe which needs js)Installation Go to the directory where you have your Hugo site and run:$ mkdir themes
$ cd themes
$ git clone https://github.com/it-gro/hugo-theme-w3css-basic
For more information read the official setup guide of Hugo.Configuration After installing the theme we recommend you to take a look at the
exampleSite
directory. You will find a working Hugo
site
configured with this theme that you can use as a starting point for
your site.First, let’s take a look at the
config.toml. It
will be useful to learn how to customize your site.Language Available translations are in the /i18n directory. You can configure
the language modifying the following key.defaultContentLanguage = ""en""
Frontpage Marquee config.toml[params.marquee]
  # enable or disable marquee on frontpage
  enable      = true
  # marquee text is placed in directory as:
  file        = "".marquee.md""
Create a file .marquee.md in each directory where a marquee should be shownMarquee text scrolls from right to leftJumbotron [params.jumbotrons]
  # used in layouts/partials/front.jumbotrons.carousel.html
  # enable or disable jumbotrons on frontpage
  # see some examples in 'exampleSite/data/jumbotron'
  enable   = true
Front jumbotron text onlyFront jumbotron text & pictureFront jumbotron text & icondata/jumbotron/
├── 01-jumbotron.yaml
├── 02-jumbotron.yaml
├── 03-jumbotron.yaml
├── 04-jumbotron.yaml
└── 05-jumbotron.yaml
01-jumbotron.yamlweight:      1
title:       ""Welcome to hugo-theme-w3css-basic exampleSite""
icon:        
resImg:      
description: |
  * Lorem ipsum dolor sit amet
  * Excepteur sint occaecat cupidatat non proident  
Photocards [params.photocards]
  # used in layouts/partials/front.photocards.html
  # enable or disable photocards on frontpage
  # see some examples in 'exampleSite/data/photocards'
  enable        = true
  animate       = true
  resImgCmd     = ""Resize""
  resImgCmdOpt  = ""300x""
Front photocardsdata/photocards/
├── 01-photocard.yaml
├── 02-photocard.yaml
├── 03-photocard.yaml
├── 04-photocard.yaml
├── 05-photocard.yaml
├── 06-photocard.yaml
├── 07-photocard.yaml
├── 08-photocard.yaml
└── 09-photocard.yaml
01-photocard.yamlweight:      1
title:       ""Lorem ipsum""
animated:    ""rollIn""
resImg:      ""photocards/pixabay.com/01-photocard.jpg""
url:         pages/front/photocards/01
description: |
   sed diam nonumy    
Features [params.features]
  # used in layouts/partials/front.features.html
  # enable or disable features on frontpage
  # see some examples in 'exampleSite/data/features'
  enable   = true
  animate  = false
Front featuresdata/features/
├── 01-feature.yaml
├── 02-feature.yaml
├── 03-feature.yaml
├── 04-feature.yaml
├── 05-feature.yaml
└── 06-feature.yaml
01-feature.yamlweight:      1
name:        ""Eleifend""
icon:        ""fas fa-desktop""
animated:    ""slideInLeft""
url:         pages/front/features/01
description: |
  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam
  nonumy eirmod tempor invidunt ut labore  
Recent Posts [params.recentPosts]
  # used in layouts/partials/footer.html
  footerNumOfPosts = 5
  enableFooter   = true
  # used in layouts/partials/front.recent_posts.html
  enableFront    = true
  title    = ""From our Blog""
  subtitle = '''
Pellentesque habitant morbi tristique senectus et netus et malesuada
fames ac.
             '''
Front recent postsSee More [params.seeMore]
  # used in layouts/partials/front.see_more.html
  # enable or disable see_more on frontpage
  enable    = true
  icon      = ""far fa-file-code""
  title     = ""Do You want to see More?""
  linkUrl   = ""/pages""
  linkText  = ""consectetuer adipiscing""
  subtitle  = '''
Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper
suscipit lobortis nisl ut aliquip ex ea commodo consequat.
              '''
Front see moreThe background image is defined in /static/css/w3css-basic.css:/* -------------------------------------------------- */
/* front.see_more */

#see_more_background {
  background: url('../images/backgrounds/see_more_background.jpg') center top no-repeat;
}
Testimonials [params.testimonials]
  # used in layouts/partials/front.testimonials.carousel.html
  # enable or disable testimonials on frontpage
  # see some examples in 'exampleSite/data/testimonials'
  enable   = true
  title    = ""Testimonials""
  subtitle = '''
Consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut
labore et dolore magna aliquyam erat, sed diam voluptua. 
             '''
Front testimonialsdata/testimonials/
├── 01-testimonial.yaml
├── 02-testimonial.yaml
├── 03-testimonial.yaml
├── 04-testimonial.yaml
└── 05-testimonial.yaml
01-testimonial.yamlweight:      1
name:        ""John Doe""
position:    ""CEO, Takimata""
resImg:      ""testimonials/pixabay.com/person-1.jpg""
text:        | 
  Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper
  suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem
  vel eum iriure dolor in hendrerit in vulputate velit esse molestie
  consequat, vel illum dolore eu feugiat
Clients [params.clients]
  # used in layouts/partials/front.clients.carousel.html
  # enable or disable clients on frontpage
  # see some examples in 'exampleSite/data/clients'
  enable        = true
  resImgCmd     = ""Resize""
  resImgCmdOpt  = ""100x""
  imgMaxWidth   = ""100px""
  imgMaxHeight  = ""100px""
  title         = ""Our Clients""
  subtitle      = '''
Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse
**molestie consequat**, vel illum dolore.
             '''
Front clientsdata/clients/
├── 01-client.yaml
├── 02-client.yaml
├── 03-client.yaml
├── 04-client.yaml
├── 05-client.yaml
└── 06-client.yaml
01-client.yamlweight: 1
name:   ""customer-1""
resImg: ""images/clients/pixabay.com/company-logo-1.png""
url:    ""http://www.example.com""
Blog Blog List [params.blog]
  # used in layouts/blog/list.html
  title    = ""Blog""
  icon     = ""fas fa-rss""
  subtitle = '''
ultricies eget, tempor sit amet, ante
             '''
Blog with paginate = 6 (short date)content/blog/
├── 1985
│   └── 03
│       └── emacs-jokes.md
└── 2017
    ├── 09
    │   └── emacs-it-all-starts-here.md
    ├── 10
    │   └── golang-a-closer-look.md
    └── 11
        ├── hugo-dolor.md
        ├── hugo-highlight-chromastyles.md
        ├── hugo-ipsum.md
        └── hugo-lorem.md
hugo-highlight-chromastyles.md:e>Date format Dates are shown for blog articles (not other pages)Short version in teaser
{{- .Date.Day}}. {{substr (default .Date.Month (i18n .Date.Month)) 0 3}} {{.Date.Year -}}Long version in article
{{- .Date.Day}}. {{default .Date.Month (i18n .Date.Month)}} {{.Date.Year -}}provide the translation in i18n/*.yaml- id: January
  translation: ""Januar""
  ...
Blog article (long date)Disqus Hugo ships with an internal Disqus template: https://gohugo.io/content-management/comments/I wanted:a button the user has to click to show the commentsconfigure whether the comment count is shown on the button or not (disqus.com/count.js)I took some ideas from https://discourse.gohugo.io/t/delaying-disqus-comments-to-save-a-ton-of-requests/6847# Enable comments by entering your Disqus shortname
disqusShortname = ""it-gro-github-io-hugo-theme-w3css-basic-github-io""

[params]
  # disqus (theme)
  # ##############################

  # used in partials/blog.disqus-button.html 
  # set to true, if you want to show the count of comments
  # fires an async request to disqus.com/count.js
  disqusButtonShowCount = false
User has to agree to Disqus. You may skip this viaconfig.toml  disqusSkipAgree = true
No JavaScript fallbackdisqusButtonShowCount = falsedisqusButtonShowCount = trueHook:layouts/blog/single.html{{ define ""blog-disqus"" }}
  {{ partial ""blog.disqus-button.html"" . }}
{{ end }}
=> review layouts/partials/blog.disqus-button.htmlAnchors config.toml[params.anchor]
  # layouts/_default/baseof.html
  enable = true
  #icon   = ""fas fa-anchor""
  icon = ""fas fa-link""
Related Content See more https://gohugo.io/content-management/related/#list-related-contentimplemented in layouts/partials/main.related.htmlconfig.toml[params.related]
  # https://gohugo.io/content-management/related/
  # layouts/partials/main.related.html
  enable        = true
  limitTo       = 5
Pages Pages Navigation Page navigation top levelPage navigation with Top/Up/Down and pages on this levelCheck out https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/folder20/folder21/content/pages/
├── folder10
│   ├── _index.md
│   ├── malesuada-massa.md
│   └── neque-nec.md
├── folder20
│   ├── estdui-fermentum.md
│   ├── felis-vel-velit.md
│   ├── folder21
│   │   ├── folder211
│   │   │   ├── _index.md
│   │   │   ├── phasellus.md
│   │   │   └── rutrum.md
│   │   ├── _index.md
│   │   ├── nullam.md
│   │   └── vestibulum.md
│   ├── _index.md
│   ├── magna-orci-ultrices.md
│   ├── nam-asapien.md
│   ├── neque-orci.md
│   └── vestibulum-convallis.md
├── folder30
│   ├── donec-pretium-posuere.md
│   ├── _index.md
│   └── pellentesque-dapibus-suscipit.md
├── front
...
content/pages/folder20/folder21/_index.md---
weight:        21
title:         ""Cum sociis natoque (this is level /folder20/folder21)""
date:          ""2017-06-08T01:06:13+02:00""
resImgTeaser:  teaserpics/gohugo.io/hugo-dolor.png
---
content/pages/front/_index.md---
weight:      18
title:       ""Frontpage Eye-Catcher (this is level /front)""
date:        2017-11-13T15:37:04+01:00
icon:        ""fas fa-globe""
---
Taxonomy Taxonomy bar (only shown if page has a taxonomy)[params.taxonomies]
  # used in layouts/partials/main.taxonomy.full.bar.html
  fullBarMinItemsTag       = 1
  fullBarMinItemsCategory = 1
Terms listsColor Theme All W3.CSS predefined monochromatic color themes
(https://www.w3schools.com/w3css/w3css_color_themes.asp) are placed in
the /static/vendor/w3css/4/ directory.You may create your own monochromatic color theme using
https://www.w3schools.com/w3css/w3css_color_generator.asp and then put the css file under /static/css/w3-theme-custom.css.Select the actual color theme:[params]
 #w3cssColorTheme = ""/css/w3-theme-custom.css""
 w3cssColorTheme = ""/vendor/w3css/4/w3-theme-orange.css""
Available options (theme files) are:w3cssColorTheme = ""/vendor/w3css/4/w3-theme-amber.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-black.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-blue-grey.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-blue.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-brown.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-cyan.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-dark-grey.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-deep-orange.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-deep-purple.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-green.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-grey.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-indigo.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-khaki.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-light-blue.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-light-green.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-lime.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-orange.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-pink.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-purple.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-red.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-teal.css""
w3cssColorTheme = ""/vendor/w3css/4/w3-theme-yellow.css""

w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2006-sand-dollar.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2007-chili-pepper.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2008-blue-izis.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2009-mimosa.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2010-turquise.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2011-honeysucle.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2012-tangerine-tango.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2013-emerald.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2014-radiand-orchid.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2015-marsala.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-airy-blue.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-aurora-red.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-bodacious.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-buttercup.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-duster-cedar.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-fiesta.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-green-flash.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-iced-coffe.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-lilac-grey.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-limpet-shell.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-lush-medow.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-peach-echo.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-potters-clay.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-riverside.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-rose-quarts.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-serenity.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-sharkskin.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-snorkel-blue.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-spicy-mustard.css""
w3cssColorTheme = ""/vendor/w3css/4/color_of_the_year/w3-theme-color-of-year-2016-warm-taupe.css""
You can configure all colors within the selected monochromatic color theme:  # used in layouts/partials/*.html
  # used in layouts/blog/*.html
  # used in layouts/default/*.html
  # used in layouts/pages/*.html
  # e.g. {{ default `w3-theme-l3` ($.Site.Param `color404Container`)}} 
  # layouts/partials/header.marquee.html
  colorHeaderMarquee                    = ""w3-theme-l1""
  #
  # layouts/partials/header.nav.html
  colorHeaderNav                        = ""w3-theme-dark""
  #
  # layouts/_default/baseof.html
  colorBaseofCanvas                     = ""w3-theme-l4""
  colorBaseofPanel                      = ""w3-theme-l2""
  #
  # layouts/partials/front.*.html
  colorFrontClientsCard                 = ""w3-theme-l2""
  colorFrontClientsContainer            = ""w3-theme-l3""
  colorFrontFeaturesCard                = ""w3-theme-l3""
  colorFrontFeaturesContainer           = ""w3-theme-l4""
  colorFrontJumbotronsContainer         = ""w3-theme-l2""
  colorFrontJumbotronsSection           = ""w3-theme-l4""
  colorFrontPhotocardsCard              = ""w3-theme-l1""
  colorFrontPhotocardsCardContainer     = ""w3-theme-l1""
  colorFrontPhotocardsContainer         = ""w3-theme-l3""
  colorFrontRecentPostsCard             = ""w3-theme-l4""
  colorFrontRecentPostsCardButton       = ""w3-theme-l4""
  colorFrontRecentPostsContainer        = ""w3-theme-l3""
  colorFrontRecentPostsTitleCard        = ""w3-theme-l2""
  colorFrontSeeMoreButton               = ""w3-theme-l4""
  colorFrontSeeMoreContainer            = ""w3-theme-l4""
  colorFrontSeeMoreText                 = ""w3-text-white""
  colorFrontTestimonialsCarouselCard    = ""w3-theme-l5""
  colorFrontTestimonialsContainer       = ""w3-theme-l4""
  colorFrontTestimonialsTitleCard       = ""w3-theme-l2""
  #
  # layouts/partials/page.nav.cards.html
  colorPageNavCardsCard                 = ""w3-theme-d3""
  colorPageNavCardsLink                 = ""w3-theme-l3""
  colorPageNavCardsContainer            = ""w3-theme-l3""
  #
  # layouts/pages/list.html:
  colorPagesListCard                    = ""w3-theme-l3""
  colorPagesListCell                    = ""w3-theme-l4""
  colorPagesListContainer               = ""w3-theme-l4""
  #
  # layouts/blog/list.html
  colorBlogListCard                     = ""w3-theme-l3""
  colorBlogListCell                     = ""w3-theme-l4""
  colorBlogListContainer                = ""w3-theme-l4""
  #
  # layouts/_default/taxonomy.html
  colorTaxonomyCard                     = ""w3-theme-l3""
  colorTaxonomyCell                     = ""w3-theme-l4""
  colorTaxonomyContainer                = ""w3-theme-l4""
  #
  # layouts/partials/main.paginator.bar.html
  colorPaginatorBar                     = ""w3-theme-l1""
  #
  # layouts/_default/taxonomy.html
  colorTaxonomyBar                      = ""w3-theme-l1""
  colorTaxonomyPanel                    = ""w3-theme-l2""
  #
  #layouts/_default/terms.html:
  colorTermsPanel                       = ""w3-theme-l2""
  #
  # layouts/partials/blog.disqus-button.html
  colorDisqusButton                     = ""w3-theme-l3""
  #
  # layouts/partials/contact.form.html
  colorContactFormPanel                 = ""w3-theme-d3""
  #
  # layouts/partials/contact.map.html
  colorContactMapCard                   = ""w3-theme-l2""
  colorContactMapPanel                  = ""w3-theme-l2""
  #
  # layouts/partials/search.google.gcse.html
  colorSearchGoogleGcseContainer        = ""w3-theme-l3""
  #
  # layouts/partials/footer.bottom.html
  colorFooterBottomCell                 = ""w3-theme-l3""
  #
  # layouts/partials/footer.html
  colorFooterButton                     = ""w3-theme-l4""
  colorFooterContainer                  = ""w3-theme-d5""
  #
  # layouts/404.html
  color404Container                     = ""w3-theme-l3""
  #
  # layouts/partials/main.related.html
  colorRelatedBar                       = ""w3-theme-l3""

  # used in layouts/shortcodes/alert.html
  colorAlertPrimary                     = ""w3-purple""
  colorAlertSecondary                   = ""w3-aqua""
  colorAlertSuccess                     = ""w3-light-green""
  colorAlertInfo                        = ""w3-light-blue""
  colorAlertWarning                     = ""w3-yellow""
  colorAlertDanger                      = ""w3-red""
  colorAlertDark                        = ""w3-dark-grey""
  colorAlertLight                       = ""w3-grey""
Favicons [params.favicon]
  # you may want to use https://realfavicongenerator.net to generate your files
  # used in layouts/partials/head.favicon.html
  # relURL is applied to path 
  enable                 = false
  path                   = ""/images/favicons""
  version                = ""a_random_value""
  maskIcon               = ""#5bbad5""
  msapplicationTileColor = ""#da532c""
  themeColor             = ""#ffffff""
layouts/partials/head.favicon.html{{- $myFaviconVersion := default ""a_random_value""   $.Site.Params.favicon.version }}
{{- $myFaviconPath    := default ""/images/favicons"" $.Site.Params.favicon.path    }}
  <link rel=""apple-touch-icon""      sizes=""180x180"" href=""{{(printf `%s/%s?v=%s` $myFaviconPath `apple-touch-icon.png`       $myFaviconVersion ) | relURL }}"" />
  <link rel=""icon"" type=""image/png"" sizes=""16x16""   href=""{{(printf `%s/%s?v=%s` $myFaviconPath `favicon-16x16.png`          $myFaviconVersion ) | relURL }}"" />
  <link rel=""icon"" type=""image/png"" sizes=""192x192"" href=""{{(printf `%s/%s?v=%s` $myFaviconPath `android-chrome-192x192.png` $myFaviconVersion ) | relURL }}"" />
  <link rel=""icon"" type=""image/png"" sizes=""32x32""   href=""{{(printf `%s/%s?v=%s` $myFaviconPath `favicon-32x32.png`          $myFaviconVersion ) | relURL }}"" />
  <link rel=""manifest""                              href=""{{(printf `%s/%s?v=%s` $myFaviconPath `manifest.json`              $myFaviconVersion ) | relURL }}"" />
  <link rel=""shortcut icon""                         href=""{{(printf `%s/%s?v=%s` $myFaviconPath `favicon.ico`                $myFaviconVersion ) | relURL }}"" />
  <meta name=""msapplication-TileImage""           content=""{{(printf `%s/%s?v=%s` $myFaviconPath `mstile-144x144.png`         $myFaviconVersion ) | relURL }}"" />
  <meta name=""msapplication-config""              content=""{{(printf `%s/%s?v=%s` $myFaviconPath `browserconfig.xml`          $myFaviconVersion ) | relURL }}"" />
  <link rel=""mask-icon""                             href=""{{(printf `%s/%s?v=%s` $myFaviconPath `safari-pinned-tab.svg`      $myFaviconVersion ) | relURL }}""
                                                   color=""{{default `#5bbad5` $.Site.Params.favicon.maskIcon }}""   />
  <meta name=""msapplication-TileColor""           content=""{{default `#da532c` $.Site.Params.favicon.msapplicationTileColor }}""  />
  <meta name=""theme-color""                       content=""{{default `#ffffff` $.Site.Params.favicon.themeColor }}"" />
So you need at least these files in your project:static/images/favicons/
├── android-chrome-192x192.png
├── apple-touch-icon.png
├── browserconfig.xml
├── favicon-16x16.png
├── favicon-32x32.png
├── favicon.ico
├── manifest.json
├── mstile-144x144.png
└── safari-pinned-tab.svg
if baseURL containts paths (like example.com/foo/bar) you
need to make sure this path (/foo/bar/) is also given in browserconfig.xml and
manifest.jsonEmoji enableEmoji   = true
You may use emoji in titles as well:title:       ""Hugo - **highlight** :art:""
e.g. in main.teaser_in_card.html  <h3>
  {{- if .Params.icon }}
    <i class=""{{ .Params.icon }}""></i>
  {{- end }}
  {{ .Title  | markdownify | emojify }}
  </h3>
See https://gohugo.io/functions/emojify/Emoji are good for mobile devices. On desktops support is kind of “poor”.
Firefox users may have a look at https://github.com/eosrei/twemoji-color-font.Summary summaryLength = 70

[params]
  teaserTruncateSummary  = 200
summaryLength was introduced in hugo 0.30
(https://gohugo.io/news/0.30-relnotes/). It’s measure is “words”.
teaserTruncateSummary is in “characters”. The Description (first
priority) or the Summary (second priority) is truncated (without
cutting words):{{- or .Description .Summary | markdownify | truncate ( or .Site.Params.teaserTruncateSummary 160)  | replaceRE ""<.?p>"" """" | safeHTML }}
<!--more--> is still an option to override the summaryLength (https://gohugo.io/content-management/summaries/)Pagination paginate =  6
Since we have a 3 column layout (1 column on small displays) it works
best with any of 3, 6, 9, 12.Syntax Highlighting # https://gohugo.io/content-management/syntax-highlighting/
pygmentsUseClassic            = false
pygmentsCodeFences            = true
pygmentsCodeFencesGuessSyntax = true
# https://help.farbox.com/pygments.html
# https://github.com/alecthomas/chroma
# hugo gen chromastyles --style=autumn        >  syntax.autumn.css
# ...
pygmentsUseClasses            = true
# => static/css/syntax/syntax/syntax.*.css
# copy one of them to
# static/css/syntax/syntax.css
# alternative (if shortcodes/csc*.html are not used):
# set pygmentsUseClassic to false on choose one of the following:
#pygmentsStyle = ""autumn""
#pygmentsStyle = ""borland""
#pygmentsStyle = ""bw""
#pygmentsStyle = ""colorful""
#pygmentsStyle = ""default""
#pygmentsStyle = ""emacs""
#pygmentsStyle = ""friendly""
#pygmentsStyle = ""fruity""
#pygmentsStyle = ""manni""
#pygmentsStyle = ""monokai""
#pygmentsStyle = ""murphy""
#pygmentsStyle = ""native""
#pygmentsStyle = ""pastie""
#pygmentsStyle = ""perldoc""
#pygmentsStyle = ""rrt""
#pygmentsStyle = ""tango""
#pygmentsStyle = ""trac""
#pygmentsStyle = ""vim""
#pygmentsStyle = ""vs""
{{< highlight perl ""linenos=table,hl_lines=5 7-8 21,linenostart=1"" >}}
#!/usr/bin/perl
...
{{< /highlight >}}
=> https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/showcase/code-01/Menu Navbar “Long” (for medium or large displays)# provide translations in i18n/*.yaml
[[menu.main]]
  weight = 1
  name   = ""Home""
  url    = ""/index.html""
  pre    = ""fas fa-home""

[[menu.main]]
  weight = 2
  name   = ""Contact""
  url    = ""/contact""
  pre    = ""far fa-address-card""
pre is for fontawesome version 5 iconsname is used for lookup in i18n/*.yaml (=> translation)if no translation is given, the name itself is shown
page.nav.html<button class=""w3-button w3-hide-small""><i class=""{{ .Pre }}""></i>&nbsp;{{default .Name (i18n .Name)}}</button>Submenu (one level)# demo submenu
[[menu.main]]
  weight = 4
  name   = ""Theme""
  pre    = ""fas fa-info-circle""
  identifier = ""theme""
 
[[menu.main]]
  weight = 1
  name   = ""About""
  url    = ""/pages/hugo-theme-w3css-basic/""
  pre    = ""fas fa-info fa-fw""
  parent = ""theme""
Topbar: right aligned top menu (github, facebook, twitter, &mldr;)Navbar “Small” with numOfItemsIfSmallDisplay = 2# right aligned
[[menu.topbar]]
  weight   = 1
  name     = ""GitHub""
  url      = ""https://github.com/it-gro/hugo-theme-w3css-basic""
  pre      = ""fab fa-github""
on small displays the root menu entries are truncated
{{- substr (default .Name (i18n .Name)) 0 ($.Scratch.Get ""smallDispMenuMaxChars"") | lower}}[params.menuConfig]
  # used in layouts/partials/header.nav.html
  # if set => change menu entry on small displays to lowercase maxChars 
  smallDispMenuMaxChars     = 2
  smallDispMenuCollapse     = false
  smallDispMenuCollapseIcon = ""fas fa-caret-square-down""

[params.menuTopBar]
  # used in layouts/partials/header.nav.html
  # enable or disable menu.topbar with social icons (right aligned)
  socialEnable                      = true
  numOfItemsIfSmallDisplay          = 0
  numOfItemsIfMediumDisplay         = 3
  numOfItemsIfSmallDisplayCollapsed = 6

  # used in layouts/partials/header.nav.html
  #         layouts/partials/header.nav.google.translate.html
  googleTranslateEnable    = true
  googleTranslateShowOnHome= false
  
  themeColorSelectorEnable = false
  
Fonts [params]
  # used in layouts/partials/head.html
  # if fontsUseGoogleApis=true then choose your fonts in [params.googleApiFonts.family.*]  (see below)
  fontsUseGoogleApis=false
false: load fonts from /static/vendor/google/fonts. Use e.g. https://google-webfonts-helper.herokuapp.com/fonts to download google fonts.true: load fonts via Google font API{{ partial ""head.stylesheets.html""      . -}}
  {{- if .Site.Params.fontsUseGoogleApis }}
    {{ partial ""head.fonts.googleapis.html"" . -}}
  {{- else }}
    {{ partial ""head.fonts.local.html""      . -}}
  {{- end }}
Choose any Font via googleapis If you set fontsUseGoogleApis=true you can choose any font from
https://fonts.google.comHash Borgir had a cool idea: How To Dynamically Use Google Fonts In A Hugo
Website.
I had the same goal. It’s all configured in the
config.toml
file.Here’s the relevant part:[params.googleApiFonts.family]
  # https://www.w3.org/Style/Examples/007/fonts.en.html
  # the predefined generic font names are:
  # sans-serif = """"
  # serif      = """"
  # monospace  = """"
  # cursive    = """"
  # fantasy    = """"

  # used in static/vendor/w3css/4/w3.css
  #   code,kbd,pre,samp     : monospace
  #   html,body             : sans-serif
  #   h1                    : serif
  #   h1,h2,h3,h4,h5,h6     : sans-serif
  #   .w3-code,.w3-codespan : Consolas,""courier new""

  # https://www.w3schools.com/tags/ref_byfunc.asp
  # tagsText        = [ ""html"", ""body"" ]
  tagsText        = [ ""html"", ""body"", ""abbr"", ""address"", ""blockquote"", ""cite"", ""dfn"", ""em"", ""ins"", ""mark"", ""s"", ""time"" ]
  tagsHeading     = [ ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""h6"" ]
  tagsMono        = [ ""pre"", ""code"", ""kbd"", ""samp"" ]

  # these parameter sections must exist, the others are optional
  fallbackText    = ""html""
  fallbackHeading = ""h1""
  fallbackMono    = ""pre""

[params.googleApiFonts.family.html]
  # serif, sans-serif or even cursive
  sans-serif      = ""Oswald""

[params.googleApiFonts.family.h1]
  # serif, sans-serif or even cursive
  sans-serif = ""Creepster""

[params.googleApiFonts.family.pre]
  # monospace or sans-serif
  monospace  = ""Space Mono""
[params.googleApiFonts.family.kbd]
  monospace  = """"
[params.googleApiFonts.family.samp]
  sans-serif = ""Roboto""
This would lead to:  <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Oswald|Creepster|Space+Mono|Roboto"" />
  <style> html {font-family: 'Oswald', sans-serif; } </style>
  <style> body {font-family: 'Oswald', sans-serif; } </style>
  <style> abbr {font-family: 'Oswald', sans-serif; } </style>
  <style> address {font-family: 'Oswald', sans-serif; } </style>
  <style> blockquote {font-family: 'Oswald', sans-serif; } </style>
  <style> cite {font-family: 'Oswald', sans-serif; } </style>
  <style> dfn {font-family: 'Oswald', sans-serif; } </style>
  <style> em {font-family: 'Oswald', sans-serif; } </style>
  <style> ins {font-family: 'Oswald', sans-serif; } </style>
  <style> mark {font-family: 'Oswald', sans-serif; } </style>
  <style> s {font-family: 'Oswald', sans-serif; } </style>
  <style> time {font-family: 'Oswald', sans-serif; } </style>
  <style> h1 {font-family: 'Creepster', sans-serif; } </style>
  <style> h2 {font-family: 'Creepster', sans-serif; } </style>
  <style> h3 {font-family: 'Creepster', sans-serif; } </style>
  <style> h4 {font-family: 'Creepster', sans-serif; } </style>
  <style> h5 {font-family: 'Creepster', sans-serif; } </style>
  <style> h6 {font-family: 'Creepster', sans-serif; } </style>
  <style> pre {font-family: 'Space Mono', monospace; } </style>
  <style> code {font-family: 'Space Mono', monospace; } </style>
  <style> kbd {} </style>
  <style> samp {font-family: 'Roboto', sans-serif; } </style>
Note how kbd is “blanked” and samp has it’s own style (just to give you the
idea).An other example would be:[params.googleApiFonts.family]
  tagsText        = [ ""html"", ""body"", ""time"" ]
  tagsHeading     = [ ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""h6"" ]
  tagsMono        = [ ""pre"", ""code"" ]
  fallbackText    = ""html""
  fallbackHeading = ""h1""
  fallbackMono    = ""pre""

[params.googleApiFonts.family.html]
  sans-serif = ""Poppins""
[params.googleApiFonts.family.time]
  cursive    = ""Creepster""
[params.googleApiFonts.family.h1]
  sans-serif = ""Days One""
[params.googleApiFonts.family.pre]
  monospace  = ""Cousine""
gives: <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Poppins|Days+One|Cousine"" />
  <style> html {font-family: 'Poppins', sans-serif; } </style>
  <style> body {font-family: 'Poppins', sans-serif; } </style>
  <style> time {font-family: 'Creepster', cursive; } </style>
  <style> h1 {font-family: 'Days One', sans-serif; } </style>
  <style> h2 {font-family: 'Days One', sans-serif; } </style>
  <style> h3 {font-family: 'Days One', sans-serif; } </style>
  <style> h4 {font-family: 'Days One', sans-serif; } </style>
  <style> h5 {font-family: 'Days One', sans-serif; } </style>
  <style> h6 {font-family: 'Days One', sans-serif; } </style>
  <style> pre {font-family: 'Cousine', monospace; } </style>
  <style> code {font-family: 'Cousine', monospace; } </style>
So for the HTML tag <time> we use a different font-family. See
https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/#html-tag
how this look’s like (the actual fonts may vary since I change them just for fun &mldr;).Of course this can be done via custom css as well, but here we have all in one
place. Setting the fonts we need from fonts.googleapis.com and applying it to
a bunch of tags. No pre or post processing needed.A short version (just 2 fonts) looks like this:  tagsText        = [ ""html"", ""body"" ]
  tagsHeading     = [ ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""h6"" ]
  tagsMono        = [ ""pre"", ""code"" ]
  fallbackText    = ""html""
  fallbackHeading = ""html""
  fallbackMono    = ""pre""

[params.googleApiFonts.family.html]
  cursive    = ""Nova Slim""
[params.googleApiFonts.family.pre]
  monospace  = ""Nova Mono""
gives:  <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Nova+Slim|Nova+Mono"" />
  <style> html {font-family: 'Nova Slim', cursive; } </style>
  <style> body {font-family: 'Nova Slim', cursive; } </style>
  <style> h1 {font-family: 'Nova Slim', cursive; } </style>
  <style> h2 {font-family: 'Nova Slim', cursive; } </style>
  <style> h3 {font-family: 'Nova Slim', cursive; } </style>
  <style> h4 {font-family: 'Nova Slim', cursive; } </style>
  <style> h5 {font-family: 'Nova Slim', cursive; } </style>
  <style> h6 {font-family: 'Nova Slim', cursive; } </style>
  <style> pre {font-family: 'Nova Mono', monospace; } </style>
  <style> code {font-family: 'Nova Mono', monospace; } </style>
You need to go to https://fonts.google.com/ (preview the fonts).There is a usefull list: Popular Pairings with &mldr; under See SpecimenAfter selecting a Font click Family Selected. You see e.g.:Use the following CSS rules to specify these families:font-family: ‘Roboto’, sans-serif;(Do not add the “+” or “|” signs in the api url - this is done in the partial)You may want to check Hash Borgir
article
since he describes the https://fonts.google.com/ part with some screenshots.Here is a random list of some fonts you may want to try to get the
impression. Copy them to the [params.googleApiFonts.family.*] sections.sans-serif = ""Capriola""
sans-serif = ""Days One""
sans-serif = ""Open Sans""
sans-serif = ""Oswald""
sans-serif = ""Oxygen""
sans-serif = ""Paytone One""
sans-serif = ""Poppins""
sans-serif = ""Quantico""
sans-serif = ""Raleway""
sans-serif = ""Roboto""
sans-serif = ""Ubuntu""

serif      = ""Gabriela""
serif      = ""Glegoo""
serif      = ""Noticia Text""
serif      = ""Roboto Slab""

monospace  = ""Cousine""
monospace  = ""Oxygen Mono""
monospace  = ""Roboto Mono""
monospace  = ""Space Mono""
monospace  = ""Ubuntu Mono""

cursive    = ""Caesar Dressing""
cursive    = ""Carter One""
cursive    = ""Courgette""
cursive    = ""Creepster""
cursive    = ""Parisienne""
cursive    = ""Patrick Hand""
cursive    = ""Rammetto One""
cursive    = ""Rochester""
cursive    = ""Romanesco""
Contact Map [params] 
  # Google Maps API key
  # get our own: https://developers.google.com/maps/documentation/javascript/adding-a-google-map#key
  # used in layouts/partials/contact.map.html
  # if empty => fallback to URL (instead of map)
  # define environment variable (=> key is not stored in github)
  envGoogleMapsApiKey = ""GoogleMapsApiKey""
  # if environment is not an option => define key here:
  #googleMapsApiKey = """"

  #googleMapsZoom   = 14
  googleMapsZoom   = 3
  latitude         = 46.946692
  longitude        =  7.444186
Here’s how to use the environment variable:$ export GoogleMapsApiKey=GEeawyBOuzOPzbFGizHKGReghibngUZTGjlioZM
$ hugo
Contact form with mapContact form with disabled Javascriptif no latitude or longitude is given, no map is shownGoogle Translation [params.menuTopBar]
  googleTranslateEnable    = true
  googleTranslateShowOnHome= false
the google translate widget is not shown:on small displayson the home page - if googleTranslateShowOnHome is set to false(Google PageSpeed complains, Google bot gets confused)set googleTranslateEnable to false in order to disable google translate globalylayouts/partials/header.nav.html<div class=""w3-bar w3-hide-small ... "">
  {{- if .Site.Params.menutopbar.googleTranslateEnable }}
    {{- if or (not .IsHome) .Site.Params.menutopbar.googleTranslateShowOnHome }}
  <span class=""w3-bar-item w3-button w3-right"">
    {{ partial ""header.nav.google.translate.html"" . -}}
  </span>
    {{- end }}
  {{- end }}
No translation is done for About and Adress in footer (class=“notranslate”)layouts/partials/footer.html    <div class=""w3-col w3-third"">
      <h4>{{ default ""About"" (i18n ""aboutUs"") }}</h4>
      <div class=""notranslate"">{{- .Site.Params.aboutUs | markdownify }}</div>
    </div> <!-- w3-col -->
results of shortcode highlight (internal), w3-code, w3-codespan, cscb and csccurrently results of markdown backticks get translated, which is oddGoogle Custom Search API   # https://cse.google.com/cse/
  # used in layouts/partials/search.google.gcse.html
  googleCustomSearchCX = '002931815551392744433:tnypjyusk2e'
Used for search page /search which is linked into the toolbar menu here:[[menu.topbar]]
  weight   = 5
  name     = ""Search""
  url      = ""/search""
  pre      = ""fas fa-search""
Google does not index github pages (?).Search on exampleSite: https://it-gro.github.io/hugo-theme-w3css-basic.github.io/search/is “empty” :-(Search formSearch form with disabled JavascriptGoogle Analytics-Tracking using gtag The Global Site Tag (gtag.js) is the new version of Google Analytics JavaScript capture API.This theme uses the new gtags.js (not the old google analytics.js)Analytics-Tracking using gtag.jsgtag.js Developer Guide# Enable Google Analytics by entering your tracking code
googleAnalytics = """"

[params]
  # https://developers.google.com/gtagjs/
  # used in layouts/partials/head.google.gtags.html
  # you need to enter the Tracking-ID above
  enableGoogleGtag=true
Firefox has a Tracking Protection which
prevents gtag.js tracking by default.gtag.js is not used if enableGoogleGtag is not set to true or the tracking code is not given (googleAnalytics){{- if and $.Site.Params.enableGooglesGtag $.Site.GoogleAnalytics }}
  {{- /* <!-- Global site tag (gtag.js) - Google Analytics --> */}}
  <script async src=""https://www.googletagmanager.com/gtag/js?id={{$.Site.GoogleAnalytics}}""></script>
Footer   # used in layouts/partials/footer.html
  # uses markdownify
  aboutUs   = '''
  ....
              '''

  address   = '''
  ....
              '''

  # used in layouts/partials/footer.bottom.html
  bottomLeft  = ""Copyright (c) 2018, *lobortis nisl* ut aliquip ex ea commodo consequat""
  bottomRight = 'created with [Hugo](https://gohugo.io) '
cookieconsent https://cookieconsent.insites.comstatic/vendor/insites/
└── cookieconsent
    ├── cookieconsent.3.0.6.min.css
    └── cookieconsent.3.0.6.min.js
i18n/en.yaml# Cookie consent
- id: cookieMessage
  translation: This website uses cookies to ensure you get the best experience on our website.

- id: cookieDismiss
  translation: Got it!

- id: cookieLearn
  translation: Learn more
config.toml[params.cookieconsent]
  # https://cookieconsent.insites.com/download/
  # used in layouts/partials/head.cookieconsent.html
  enable           = true
  popupBackground  = ""#efefef""
  popupText        = ""#404040""
  buttonBackground = ""#8ec760""
  buttonText       = ""#ffffff""
  #static           = ""true""
  position         = ""bottom""
  #position         = ""top""
  #position         = ""bottom-left""
  #position         = ""bottom-right""
  #position         = ""top-left""
  #position         = ""top-right""
  theme            = ""classic""
  #theme            = ""edgeless""
  #theme            = """"
  href             = ""https://cookiesandyou.com""
RSS This theme uses the Hugo’s embedded rss.xml https://gohugo.io/templates/rss/#the-embedded-rss-xmlDefault configuration is explained here:https://gohugo.io/templates/rss/#configure-rsshttps://gohugo.io/getting-started/configuration/#toml-configuration# RSS Feed
# Do not build RSS files
disableRSS = false
# maximum number of items in the RSS feed
rssLimit   = 10
Tracing If you like comments in the html source, this one is for you# flags used for tracing and html comment output
  # currently used:
  #   html-comment          enable partials html comment output 
  #   debug-shortcodes      enable all shortcodes debugging output
  #   debug-shortcode-liti  enable all shortcode liti debugging output
  # traceFlags       = ""html-comment:debug-shortcode-liti""
  traceFlags         = ""html-comment""
If traceFlags includes the word html-comment some HTML comments will
be included in the html source code.Custom CSS and JS This theme comes with the following “empty” filesstatic/
├── css
│   ├── custom.css
├── js
│   ├── custom.bottom.js
│   ├── custom.top.js
A project can create these in the project dir in order to overwrite them. See
https://gohugo.io/themes/customizing/#override-static-files from more
information.In addition the following arrays may be files with paths or URLS  custom_css        = [ ""css/custom_foo.css"", ""https://cdnjs.cloudflare.com/ajax/libs/minireset.css/0.0.2/minireset.min.css"" ]
  custom_js_top     = [ ""js/custom_top_bar.js"" ]
  custom_js_bottom  = [ ""js/custom_bottom_foo.js"", ""https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"" ]
[params]
  # used in layouts/partials/head.stylesheets.html
  # used in layouts/partials/scripts.bottom.html
  # used in layouts/partials/scripts.top.html
  custom_css        = [ ]
  custom_js_top     = [ ]
  custom_js_bottom  = [ ]
Front Matter archetypes:blog.md
pages.md
Pages, Blogs ---
title:         ""{{ replace .TranslationBaseName ""-"" "" "" | title }}""
date:          {{ .Date }}
toc:           false
icon:          ""fab fa-font-awesome""
resImgTeaser:  ""teaser.png""
#resImgCmd:
#resImgOpt:
description: >
  I'm an **example** description.
  I'll show in teaser instead of (calculated) summary.  
tags:
             - ""example tag 1""
             - ""example tag 2""
categories:
             - ""example cat 1""
             - ""example cat 2""
---
for pages add:weight:      42
content/pages/*/_index.md ---
weight:        24
title:         ""My **Stuff** :house:""
date:          2017-11-13T15:37:04+01:00
resImgTeaser:  teaserpics/gohugo.io/golang-a-closer-look.png
icon:          ""fas fa-list""
---
this defines how the page navigation entries look like. See Pages Navigation for more.Shortcodes See https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/layouts/shortcodes/
├── alert.html
├── asciicast.html
├── classify.html
├── csc.html
├── cscb.html
├── hc.html
├── heg-figure.html
├── heg-gallery.html
├── heg-load-photoswipe.html
├── html-tag-classes.html
├── html-tag.html
├── html-tags.html
├── i18n.html
├── icon.html
├── kbd.html
├── liti.html
├── litt.html
├── litx.html
├── readfile.html
├── res-attach.html
├── res-debug.html
├── res-figure.html
├── res-gallery.html
├── res-gallery-load-photoswipe.html
├── w3-alert-icon.html
├── w3-badge.html
├── w3-button-icon.html
├── w3-code.html
├── w3-codespan.html
├── w3-notice-icon.html
├── w3-quote.html
└── w3-tag.html
currently experimental are:List by TitleList by Taxonomy / TermList by Taxonomy with searchPage Resources https://gohugo.io/content-management/page-resources/Headless Images images may be stored as resource for a headless page:those images may be used forteaserpics (resImgTeaser)figures (res-figure)gallery (res-gallery)pictures for jumbotron, photocards, testimonialsthe path for the default (global) headless page is configurableconfig.toml[params.resources]
  defaultResPagePath  = ""resources/images""

[params.resFigure]
  defaultResPagePath  = "".""      
 
[params.resGallery]
  defaultResPagePath  = ""resources/images"" 
content/resources/images/index.md---
title:       ""headless-images""
headless:    true
---
content/resources/images/
├── clients
│   └── pixabay.com
├── favicons
├── jumbotrons
│   └── pixabay.com
├── photocards
│   └── pixabay.com
├── teaserpics
│   ├── bitbucket.org
│   ├── gohugo.io
│   ├── pixabay.com
│   └── wikipedia.org
└── testimonials
    └── pixabay.com
A new headless page with the resources may be given in front matter via
resImgRelPath---
resImgRelPath:  ""../img/""
resImgTeaser:   ""dwh-1.jpg""
---
And of course the page itself may have the image resources (which overrides an
image with the same name on the default (global) headless page)Given a front matterresImgTeaser:  teaserpics/pixabay.com/paint-2985569_640.jpg
The images is processed using hugo’s build in image commands (resize to a reasonable size).layouts/partials/main.teaserpic.single.html{{- $myImgStyle  := ""max-width:400px; max-height:200px; width: auto; height: auto; margin: 8px 0px  8px 8px; "" }}
{{- $myImg       := .Param `resImgTeaser`                       }}
{{- $myImgCmd    := .Param `resImgTeaserCmd` | default `Resize` }}
{{- $myImgOpt    := .Param `resImgTeaserOpt` | default `300x`   }}
Images https://gohugo.io/content-management/image-processing/Support via shortcode res-figureSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/showcase/image-processing-with-hugo/Attachments Support via shortcode res-attachSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/showcase/attach-page-resources/Include Files Inspired by https://github.com/gohugoio/hugo/blob/master/docs/layouts/shortcodes/readfile.htmlReads a file (or directory) and optionally renders it using markdownify or highlightSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/#readfile{{</* readfile ""content/."" */>}}
=>content/.
Lrwxrwxrwx 2018-04-06         15 README.md
drwxrwxr-x 2018-04-06            blog
-rw-rw-r-- 2018-04-13        972 contact.md
-rw-rw-r-- 2018-04-13       5407 faq.md
drwxrwxr-x 2018-04-13            pages
-rw-rw-r-- 2018-04-13        190 search.md
{{</* readfile file=""content/README.md"" md=""true"" */>}}
=> include a markdownified markdown fileSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/readme/Gallery Gallery with image processing uses page resources and image processingSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/#res-gallery for documentation and examplesHugo Easy Gallery https://github.com/liwenyip/hugo-easy-gallery/content/pages/showcase/gallery-01.md---
title:         ""Gallery pixabay.com""
date:          2018-01-05T20:30:54+01:00
resImgTeaser:  teaserpics/pixabay.com/paint-2985569_640.jpg
icon:          ""fas fa-images""
description:   ""Pictures from pixabay.com""
tags:
  - Showcase
categories:
  - This Theme
---

{{< heg-load-photoswipe >}}
{{< heg-gallery dir=""/images/photocards/pixabay.com"" caption-effect=""none"" hover-effect=""grow"" />}} 
This themes version of {{</* heg-gallery .. */>}} improves the caption’s configuration (filename):show file extensions - or notdo humanize - or notthe values below are the defaults:[params.gallery]
  # used in layouts/shortcodes/heg-gallery.html
  # showFileExtension = true
  # humanizeCaption   = false
Figure Figure with image processing uses page resources and image processingSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/#res-figure for documentation an examplesHugo Easy Gallery Figure {{< heg-load-photoswipe >}}
{{< heg-figure link=""/images/photocards/pixabay.com/04-photocard.jpg"" caption-position=""bottom"" caption-effect=""none"" width=""640px"" caption=""figure caption 4"" attr=""(c) by bar 4"" attrlink=""https://www.example.com"" >}}
This themes version of {{</* heg-figure .. */>}} improves the
usage of title caption attr attrlink which are all optionalcaption=""figure caption 4"" attr=""(c) by bar 4"" attrlink=""https://www.example.com""
Shown on pageShown with PhotoSwipeSee https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/hugo-theme-w3css-basic/page-shortcodes/#heg-figure for more examplesShowcase See https://it-gro.github.io/hugo-theme-w3css-basic.github.io/pages/showcase/ for more examplesUsage To see the exampleSite use:$ cd exampleSite/
$ export GoogleMapsApiKey=GEeawyBOuzOPzbFGizHKGReghibngUZTGjlioZM
$ hugo server -w --disableFastRender --navigateToChanged --themesDir ../../
Now enter localhost:1313 in the address bar of your browser.For more information check out the official Hugo documentation.Minifier If you change the theme w3css-basic.min.css, syntax.min.css or
front.js, you have to apply a minifier. E.g.:cd themes/hugo-theme-w3css-basic/static/css
yui-compressor --verbose --type css --line-break 1023 w3css-basic.css -o w3css-basic.min.css
yui-compressor --verbose --type css --line-break 1023 syntax.css      -o syntax.min.css
cd -

cd themes/hugo-theme-w3css-basic/static/js
yui-compressor --verbose --type js --line-break 1023 --nomunge --preserve-semi front.js -o front.min.js
cd -
or change the file names in
layouts/partials/head.stylesheets.html and layouts/partials/scripts.htmlWorkarounds summaryLength summaryLength was not configurable until hugo version 0.30teaserTruncateSummary was my workaround. But I think it still make
sense since summaryLength is in words and teaserTruncateSummary is in
characters.see SummaryShortcode output wrapped in <p> hugo/issues/1642: Shortcode output wrapped in <p> tagslayouts/_default/baseof.html{{ .Content | replaceRE `(?s:</div>\s?</p>)` `</div>` | replaceRE `(?s:</pre>\s?</p>)` `</pre>` | replaceRE `(?s:</figure>\s*</p>)` `</figure>` | safeHTML }}
See https://discourse.gohugo.io/t/shortcodes-and-p-tags-2/9987Tracking Beeing able to analyse the visitors behavior via the log files on the visited site is one thing.
But giving those informations to any third-party is not what the visitors expect by default.Why should a third-party (disqus.com) know which blog articles I’ve read (even without commenting) ?Why should a third-party (formspree.io) beeing able to read the visitors messages (contact form) ?If the visitors implicitly agree by clicking on a button (“see
comments on disqus.com” or “send message via formspree.io”) then this
is perfecly fine (for me).This is also why I tried to minimize the external url’s and copied all
into the theme (static/vendor/*).How to minimize visitors exposure to tracking disable google gtags (analytics)disable google translatedisable google fonts apisdisable google mapsdisable menu.topbar search (google custom search)disable formspree (but keep your email)do not show a comment counter on the Disqus Buttonreview result e.g. with Firefox Lightbeam by MozillaAll of the above is done in config.tomlgoogleAnalytics = """"

#[[menu.topbar]]
#  weight   = 5
#  name     = ""Search""
#  url      = ""/search""
#  pre      = ""fas fa-search""

[params]
  fontsUseGoogleApis = false
  # latitude  = 
  # longitude = 
  formspree = """"
  email     = ""info@example.com""
  disqusButtonShowCount = false

[params.menuTopBar]
  googleTranslateEnable = false
ToDo’s see issue trackerContributing Did you found a bug or got an idea for a new feature? Feel free to use
the issue
tracker to
let us know. Or make directly a pull
request.License This theme is released under the MIT License.Thanks Thanks to:Steve FranciaBjørn Erik Pedersenyou are amazing!devcows for
creating my starting point: the awesome Universal theme.They ported from Bootstrapious.www.w3schools.com for creating the free to use W3.CSS CSS framework.the contributors to any ofhttps://fontawesome.com/icons/https://owlcarousel2.github.io/OwlCarousel2/https://daneden.me/animatehttps://github.com/liwenyip/hugo-easy-gallery/http://photoswipe.comhttps://pixabay.comhttps://cookieconsent.insites.comfor all their workMore Screenshots 1500x1000900x600CompleteSee AlsoAcademicPaigePikoTailBlissUp Business Theme",NA
Floyd Li,51,2023-06-05,GPL-3.0,"Blog, Dark, Light",iTheme,An Apple's Style Theme,https://github.com/floyd-li/hugo-theme-itheme,https://hugo-theme-itheme.netlify.app,"iTheme theme for HugoIf you like this theme, please give me a star!Introduction 中文说明An Apple style theme for Hugo, inspired by astro-air-blogPreview Demo SiteQuick Start Before you start, make sure you have installed Hugo.Quick start with the demo site Here’s the demo site repogit clone --recurse-submodules https://github.com/floyd-li/itheme-demo-site.git my-site
cd ./my-site && hugo server -D
Then you can visit http://localhost:1313 to see the demo site!Use the theme for existed site git submodule add https://github.com/floyd-li/hugo-theme-itheme.git themes/hugo-theme-itheme
echo ""theme = 'hugo-theme-itheme'"" >> config.toml
Then you need to add some configuration to config.toml, please flow the Site Configuration.Screenshot Features Light and Dark mode for postThree different sizes for images in the posti18n support (currently only support en and zh-hans, there is a great need for contributing translation)Algolia search integrationCustom JavaScript/CSS support (You may put these files in static/ directory)Configuration Site Configuration defaultContentLanguage = ""en"" # current only supported 'en' and 'zh-hans', see the 'i18n' folder
[params]
  defaultCover = 'https://example.com/cover.jpg' # default cover image for post not setting cover
  email = 'floyd.li@outlook.com' # the email address display in the footer
  [params.algolia] # Algolia search configuration
    enabled = true # enable Algolia search
    appId = 'YOUR_KEY' # appid for Algolia search
    appKey = 'YOUR_APP_KEY' # appkey for Algolia search
    searchIndex = 'YOUR_INDEX' # index for Algolia search
  [[params.css]] # custom css stylesheet, you can add one or more, url is relative in 'static' folder
    url = 'css1.css'
  [[params.css]]
    url = 'css2.css'
  [[params.js]] # custom javascript, you can add one or more, url is relative in 'static' folder
    url = 'js1.js'
  [[params.js]]
    url = 'js2.js'
  [[params.socialMedia]] # custom social links display in the footer, you can add one or more
    name = 'Github'
    url = 'https://github.com/floyd-li'
  [[params.socialMedia]]
    name = 'Twitter'
    url = 'https://twitter.com/some-one'
  [[params.blogroll]] # blogroll links display in the footer, you can add one or more
    name = 'Apple'
    url = 'https://Apple.com/'
  [[params.blogroll]]
    name = 'Google'
    url = 'https://Google.com/'
Post Configuration ---
title: 'Some Article'
date: '2022-10-27T13:06:38+08:00'
draft: true
description: 'some description of the article'
author: 'author of this article'
cover: 'https://example.com/cover.jpg' // if not set cover, it will use the 'defaultCover' in site configuration
tags: [""tag1"", ""tag2"", ""tag3""]
theme: ""dark"" // you can set 'light' or 'dark' here
---
Three display modes of images The three display modes of images are: inline, big, wide, you can visit the demo site for preview
When you edit your markdown file, you can add inline, big or wide to the image alt, like this:![alt content|wide](a.png)
The Separator is |, and the default mode is big.See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
Frieder Grießhammer,51,2023-01-05,MIT,"Blog, Light, Minimal, Personal, Responsive",Slick,"A Hugo theme focused on content, cleanliness, speed, responsiveness and privacy",https://github.com/spookey/slick,https://slick.toor.su,"SlickA Hugo theme focused on content, cleanliness, speed, responsiveness and privacy.Slick is a fork of Temple with many
improvements.…Temple is a fork of Nofancy with many
improvements.Table of Contents FeaturesInstallationCustomizingComponentsDevelopmentContributingLicenseImagesFeatures The main features of this theme include:Supports taxonomies of tags, categories and series with their own pagesPagination of content listsRSS Feed with complete entriesOpen Graph,
Schema.org and
Twitter Cards
supportFully customizable menu entries in the headerFooter with fully customizable links and RSSCustomizable favicon (with correct mime type for png files)
and ability to inject own css fileRelies on chroma for syntax highlightingNot even one external request (privacy!) - Everything needed is part of this
theme (Fonts, CSS, JS, &mldr;)404 page with customizable textInstallation Just download the theme or clone it into
your themes/ directory:cd themes && git clone https://github.com/spookey/slick.git
Then reference it in your config:theme = ""slick""
Or when building the site, pass it in to the CLI:hugo -t slick
To setup the 404 page please read the
instructions.Customizing Your config file will hold all your options.Please have a look into the subfolders of _sites for working examples.
It is highly recommended to make some adjustments to the main
and the footer menu (e.g. to link to your About page).Components PureCSSSource Code ProSource Sans ProSource Serif ProTomorrow Theme
as color scheme (Tomorrow Night for syntax highlighting)Please Note:
Files inside the static folder are only updated on tagged commits (releases).Development This theme uses
rollup.js and postCSS
to bundle all files together.
JavaScript is compiled from TypeScript.
Components are drawn in by npm.Please have a look inside package.json for commands and tools required
for building.Use npm version to tag a commit.Contributing Contributions are welcome.Features If you are adding a feature, fork the repository, create a new branch
for your feature and submit a PR.
Please make sure to put documentation for your new feature:Place a comment about what your feature is doing above the code.If making additions that will affect the config file, make sure
you update the config.toml and config.yaml below the _sites folder
as well as the CHANGELOG.md.Issues/Bugs Submit a new issue with information about your issue and/or bug. If you
have a solution, then submit a new PR with the guidelines posted above in the
features section and link your issue to it using the keyword
“closes”.License Licensed under the MIT License. See the LICENSE.Images Screenshot Thumbnail See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
Simon Bruder,50,2023-10-21,CC-BY 3.0,"Blog, Company, Portfolio",Spectral,Port of the HTML5UP Spectral Theme (https://html5up.net/spectral),https://github.com/sbruder/spectral,https://sbruder.github.io/spectral/,"SpectralBased on html5up’s Spectral theme.Specially made for my customer
kegelschiene.net, so some functions are
missing. If you need one, that is not implemented yet, please open an issue!Installation If this is your first hugo page, please read the Basic Usage of
Hugo article.Clone this repo or download the zip, place it inside of the themes directory
of your hugo site and use the config.toml file located in exampleSite as a
starting point.Examples If you want to have a look at a real life installation, feel free to explore
the repo of
kegelschiene.net. It also includes
the configuration for a multilingual site.For a minimial setup, check out the exampleSite directory. Its latest live build can be seen at https://sbruder.github.io/spectral/.License This theme is licensed under the terms of the Creative Commons Attribution 3.0
Unported (like html5up’s original theme). See the LICENSE.md file for more
information on this.See AlsoAcademicBeautiful HugoHugo Blox - TailwindLightbiPiko",NA
Munif Tanjim,49,2022-09-21,MIT,"Blog, Minimal, Responsive",Minimo,Minimalist theme for Hugo,https://github.com/achary/engimo,NA,"

MinimoMinimalist theme for Hugo.Documentation Check the Minimo Documentation for detailed documentation of Minimo.Getting Up & Running Follow these guides for getting your site up & running with Minimo:Install Minimo: Installation GuideSetup Authors: Authors Setup GuideConfigure Widgets: Widgets DocumentationUpdating Minimo Follow the Updating Guide to update Minimo to its latest version.After updating Minimo, always check that your site’s config.toml file matches the latest config.toml file format.A good idea is to double check all the Configuration settings of Minimo.Development If you find a bug or want to request a new feature, feel free to open an issue.Changelog Changelog for MinimoLicense Minimo is licensed under the MIT License. Check the LICENSE file for details.The following resources are included/used in the theme:Feather by Cole Bemis - Licensed under the MIT License.See AlsoCalligraphyEdEtchMinimoTatBanTheme2.0",NA
1BL4Z3R,27,2023-12-04,MIT,"Blog, Dark, Dark Mode, Landing, Minimal, Responsive",Hermit-V2,Continuing Hermit's legacy to be minimal and fast theme,https://github.com/1bl4z3r/hermit-V2,https://1bl4z3r.github.io/hermit-V2/,"hermit-V2 -: The Minimal Hugo ThemeOG : Hermit Theme by Track3Hermit-V2 is a minimal and fast theme for Hugo, built for bloggers who want a simple and focused website. This is a maintained fork of Hermit, which iterates over the original work to have a almost-stable experience with bug fixes and new features.History When I had switched from jekyll to Hugo, I was in a need of a theme. I was enthralled by this very theme and I am using it since in my own personal blog. However, it looks like OP has stopped maintaining this theme and as a result, it is riddled with bugs and code breaks. Hence, I have taken upon myself to maintain this theme. Intention of this project is to keep the essence of the theme as-it-is and only add minor updates and squash bugs which may arise.GoHugo Theme Page : https://themes.gohugo.io/themes/hermit-v2/Demo Demo page https://1bl4z3r.github.io/hermit-V2, which is both demo as well as documentation for the theme, is located in Staging BranchConfiguration Guide Configuration Guide is present in Explaining ConfigsInstallation Run this command from the root of your Hugo directory:git clone https://github.com/1bl4z3r/hermit-V2 themes/hermit-v2
Or, if your Hugo site is already in git, you can include this repository as a git submodule. This makes it easier to update this theme. For this you need to run:git submodule add https://github.com/1bl4z3r/hermit-V2 themes/hermit-v2
GOOD-TO-KNOW LIST Features Inherited from Original Theme A single-column layout and carefully crafted typography offers a great reading experience.Navigations and functions are placed in the bottom bar which will hide when you scroll down.Featured image is supported. It will be displayed as a dimmed background of the page.Displays all of your posts on a single page, with one section per year, simple and compact.Extremely lightweight and load fast. No third party framework, no unnecessary code.All code fields feature syntax highlighting and a code-copy functionResponsive & Retina Ready. Scales gracefully from a big screen all the way down to the smallest mobile phone. Assets in vector format ensures that it looks sharp on high-resolution screens.Configuration Site Configuration is done through hugo.toml or hugo.yaml file in root directory of your Hugo Site. To aid you, there is a hugo.toml.example file located in theme folder. See this configuration in action here. See what each configuration does here.Custom CSS and JS I have found that there are some requirement where custom CSS and JS should be supplied to a page to make it work. This custom files are not required for whole of the site, but is restricted to a page or few particular pages. E.g. If you make contact form.To make use of custom CSS and JS, add the below section to page frontmatter. If there is any folder structure, that should be mentioned as well.custom_css = [""custom_css/foo.css"",""custom_css/bar.css""]
custom_js = [""custom_js/custom-about.js""]
The files itself will reside in assets directory. Refer to Staging Branch to have a feel on how this is implemented.Favicon Use RealFaviconGenerator to generate these files, put them into your site’s static folder:android-chrome-192x192.pngandroid-chrome-512x512.pngapple-touch-icon.pngfavicon-16x16.pngfavicon-32x32.pngfavicon.icomstile-150x150.pngsafari-pinned-tab.svgsite.webmanifestSocial icons The following icons are supported, please make sure the name filed is exactly one of these:nameemailcodepenfacebookgithubgitlabinstagramlinkedinslackstackoverflowtelegramtwitteryoutubeshutterstockfreepikadobestock123rfdreamstimedribbblebehancepaypaltwitchqqmastodondiscordetsytiktokIf that’s not enough, you can see Overriding templates section.Manage content Keep your regular pages in the content folder. To create a new page, run hugo new page-title.mdKeep your blog posts in the content/posts folder. To create a new post, run hugo new posts/post-title.mdOverriding templates In Hugo, layouts can live in either the project’s (root) or the themes’ layout folders, any template inside the root layout folder will override theme’s layout that relative to it, for example: layouts/_default/baseof.html will override themes/hermit/layouts/_default/baseof.html. So, you can easily customize the theme without edit it directly, which makes updating the theme easier. Here’s some common customizations:Customize social icons You can modify or add any svg icons in site’s layouts/partials/svg.html.Customize comment system We only have built-in support for Disqus at the moment, if that doesn’t fit your needs, you can just add html to site’s layouts/partials/comments.html.Add custom analytics If you prefer to use different analytics system other than google analytics, then add them inside layouts/partials/analytics.html.Customize CSS If you’d like to customize theme color or fonts, you can simply override assets/scss/_predefined.scss, by simply copy it to site’s root (keep the same relative path) then edit those variables. But keep in mind, you’ll need Hugo extended version which has the ability to rebuild SCSS. You don’t have to use extended version in production but in this case it’s necessary to make sure the resources folder is committed and “up to date” (by running hugo or hugo server locally using the extended version). But anyway, always use the extended version if you can.Code injection You can inject any html code to every page’s document head or right above the closing body tag. This makes it easier to add any html meta data, custom css/js, dns-prefetch etc. To do this you simply need to create a file at site’s layouts/partials/extra-head.html or layouts/partials/extra-foot.html, code inside will be injected to every page.Acknowledgments normalize.css - MITanimate.css - MITfeather - MITcode-copy.js - Tom SpencerEveryone, who has submitted a PRSee AlsoHugoplatePaigePikoAcademicBlowfish",NA
Sebastian Pech,47,2023-07-09,MIT,"Blog, Bootstrap, Dark, Light, Minimal, Multilingual, Responsive",Bootstrap-BP,Bootstrap based Hugo theme which supports out of the box best practices.,https://github.com/spech66/bootstrap-bp-hugo-theme,NA,"Bootstrap-BP hugo themeBootstrap v5 based Hugo theme which provides out of the box best practices like performance and SEO readiness. Featured images will be resized automatically. This is based on the Hugo docs, hugo-best-practices, Front-End Checklist and the Front-End Performance Checklist. Contains four different color themes.Other themes by Sebastian Pech: Bootstrap-BP, Materialize-BP,
Bootstrap-BP hugo startpage.Table of contents Bootstrap-BP hugo themeTable of contentsFeaturesInstall the themeUpdate the themeRun example siteConfiguration and theme specific settingsScreenshots of cofigurationsGoogle AnalyticsPage templates / archetypesSchema.org supportImages, Open Graph and Twitter CardsMenusSocial IconsCustom CSS/JSFeatures Color themesSEO best practices supported (Schema.org, open graph, meta information, &mldr;)Automatically resizing of imagesOne minified file per ressource only (js, css)CDN font support (Google Fonts, &mldr;)Optional masonry-like mode for startpageSettings for easy customization of layouts and featuresMultiple page templates / archetypes supportedIcons for Social MediaCustom css/jsMultilingual and i18n support&mldr;Install the theme With Git installed, run the following commands inside the Hugo site folder. If Hugo has not yet been installed, read the setup guide here.mkdir themes
cd themes
git clone https://github.com/spech66/bootstrap-bp-hugo-theme.git
You can get a zip of the latest version of the theme from the home page and extract it to the themes folder.Update the theme Go to the themes folder as in the installation and run the following command.git pull
Run example site Go to the exampleSite folder from the theme themes/bootstrap-bp-hugo-theme/exampleSite and run the following command.hugo server --themesDir ../..
Configuration and theme specific settings Most settings should be done with hugo specific variables. There are only a few (optional) additional [params].
Use the config.toml from the exampleSite subdirectory as base.startPageColumns = true will show the start page in a Masonry-like mode.customDateFormat = ""02.01.2006"" to override the date format.showListsGrouped = true to add headers for every year.showPostSummary = true to only show a summary on index and lists.alwaysExpandMenu = true to expand the menu on non-mobile devices otherwise the mobile button is shown on all devices.themeColor set to dark, light, blue (do not set for bootstrap default).hideReadingTime to hide reading time.Screenshots of cofigurations startPageColumns = falsestartPageColumns = trueGoogle Analytics This theme uses the internal asynchronous template for Google Analytics tracking. You only have to provide your tracking id in your configuration file.googleAnalytics = ""UA-123-45""
Page templates / archetypes This theme has support for the following archetypes. Based on the specified types the layout and functionality of a page is slightly changed.Page (not on the startpage)Post (regular post/blog pages)Audio (shows spotify in the header)Video (shows youtube in the header)Quote (highlights a quote and the author)Link (show a link with the page title)Schema.org support Provide one author to enable the Schema.org support.[Author]  
  name = ""Sebastian Pech""
Images, Open Graph and Twitter Cards This theme uses Hugos feature/cover name method to set the optimized feature image. The image named *feature* or *cover* is used for the posts featured image and get resized. This will also be in the Twitter Cards and Open Graph block.The header image is automatically added if there is a file called *feature* or *cover*. The first wildcard is prefered over the second one. If there are multiple images the first one is used.# Site Config toml
title = ""My hugo site""

[params]
  description = ""Text about the site""

# Post yaml
---
title: ""{{ replace .Name ""-"" "" "" }}""
date: {{ .Date }}
publishdate: {{ now.Format ""2006-01-02"" }}
lastmod: {{ now.Format ""2006-01-02"" }}
draft: true
description: ""Text about this post""
tags:
    - ""tag 1""
---
Menus There are two menus in the theme. main and footer. Specify the entries in the config or the header of the content.[menu]

  [[menu.main]]
    identifier = ""about""
    name = ""About""
    url = ""/about/""
    weight = 10
    pre = ""<i class='fas fa-newspaper'></i>""

  [[menu.footer]]
    identifier = ""Imprint""
    name = ""Imprint""
    url = ""/imprint/""
    weight = 10

  [[menu.footer]]
    identifier = ""categories""
    name = ""Categories""
    url = ""/categories/""
    weight = 20

  [[menu.footer]]
    identifier = ""tags""
    name = ""Tags""
    url = ""/tags/""
    weight = 30
---
[...]
menu = ""main""
---
Social Icons Icons for Social Media. Add the block to the config.# Sets Social Media icons to appear and link to your account. Value should be your
# username unless otherwise noted.
# Code from https://themes.gohugo.io/future-imperfect/ theme
[social]
  # Coding Communities
  github           = """"
  gitlab           = """"
  stackoverflow    = """" # User Number
  bitbucket        = """"
  jsfiddle         = """"
  codepen          = """"
  # Visual Art Communities
  deviantart       = """"
  flickr           = """"
  behance          = """"
  dribbble         = """"
  # Publishing Communities
  wordpress        = """"
  medium           = """"
  # Professional/Business Oriented Communities
  linkedin         = """"
  linkedin_company = """"
  foursquare       = """"
  xing             = """"
  slideshare       = """"
  # Social Networks
  facebook         = """"
  googleplus       = """"
  reddit           = """"
  quora            = """"
  youtube          = """"
  vimeo            = """"
  whatsapp         = """" # WhatsApp Number
  instagram        = """"
  tumblr           = """"
  twitter          = """"
  skype            = """"
  snapchat         = """"
  pinterest        = """"
  telegram         = """"
  discord          = """" # invite link
  # Email
  email            = """"
Custom CSS/JS The theme provides two ways for custom css/js. The first way is writing your styles to /assets/css/custom.css and scripts to /assets/js/custom.js. This will merge and minify the styles/scripts with the theme specific files resulting in only one file for the whole website.The second way is using the Site configuration or the post metadata to target specific files in the /assets/ folder. This will result in one import line per script/style.[params]
  js=[""/js/test_site.js""]
  jscdn=[""https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js""]
  css=[""/css/test_site.css""]
  csscdn=[""https://fonts.googleapis.com/css?family=Roboto&display=swap""]
---
js:
    - /js/test.js
jscdn:
    - https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js
css:
    - /css/test.css
csscdn:
    - https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900
---
See AlsoLightbiPaigeAcademicAnubisBeautiful Hugo",NA
SerKo,47,2023-06-19,MIT,"Blog, Contact, Dark, Dark Mode, Minimal, Personal, Responsive",Holy,A simple and clean Hugo theme,https://github.com/serkodev/holy,https://hugo-holy.pages.dev/,"HolyA simple and clean Hugo theme.Live DemoFeatures Homepage with list of posts.RWD design for optimized mobile layout.Syntax highlighting with customizable theme.Using Master Styles with zero CSS files.Install git submodule add https://github.com/serkodev/holy.git themes/holy
hugo server -t holy
LICENSE MITSee AlsoHugoplatePaigePikoAcademicBlowfish",NA
Sid Verma,44,2023-01-09,MIT,"Blog, Gallery, Minimal",Rocinante,Minimal and very lightweight hugo theme.,https://github.com/mavidser/hugo-rocinante,https://sidverma.io/hugo-rocinante/,"Rocinante theme for HugoRocinante is a minimal and lightweight theme for hugo. It has minimal non-essential components, and supports normal blog posts and photoblogs.Here are some opinions used in building a theme. In short, extremely minimal footprint (under 5kB) with good contrast for accessibility.Demo linkFeatures PaginationTags supportMobile supportRSS FeedsNo essential JavascriptCustom CSS supportThe only javascript in the theme is for an optional enhancement to Email link, where it shows the email ID upon clicking such links. See the demo on the ‘Email’ link on the demo website. If javascript is disabled, it works as a normal link.Installation Inside the folder of your Hugo site run:$ git submodule add https://github.com/mavidser/hugo-rocinante.git themes/rocinante
For more information read the official setup guide of Hugo.Configuration options Put these in the params section of config.tomlcustomCSS - An array of paths to css files in the assets directory. Eg: customCSS = [""css/style.css""].mainSections - An array containing either ""posts"", ""photos"" or both. Only the content type listed in the array gets listed on the homepage. Eg: mainSections = [""post"", ""photos""]email - A string which will be used in the mailto link if smart email links are being used. Details on smart links are below, in the links option details. Eg: email = ""email@example.com""favicon - A string of the favicon path in the static directory. Eg: favicon = ""icon/favicon.jpg""about - A string of the about text. This is slightly ugly, sorry. Eg: about = """"""Hi. Welcome to my website""""""links - A table which contains array of link tables. This one is easier to explain using an example. Details of the link table:name - String containing the text of the linkhref - String containing URL of the linknew_tab = Boolean, to open link in a new tabsmart_email_link = Boolean. If true, a javascript snippet is included which changed link behavior. Text will change to the content of email param upon clicking once, after which it follows a mailto: link to the same. See example on the Email link in the about section of the demo page.Example:[[params.links]]
  [[params.links.link]]
    name = ""About""
    href = ""https://en.wikipedia.org/wiki/Don_Quixote""
    new_tab = true
    smart_email_link = true
Getting started After installing the theme successfully it requires a just a few more steps to get your site running.Update config file Example:baseURL = ""https://example.com/""
languageCode = ""en-us""
title = ""Rocinante""
theme = ""rocinante""
paginate = 3

[markup]
  [markup.highlight]
    style = ""monokailight""
  [markup.goldmark.renderer]
    unsafe= true

[params]
  mainSections = [""posts"", ""photos""]
  email = ""mail@example.com""
  favicon = ""icons/favicon.png""
  about = """"""
About section. Enter details about you here.
""""""

  [[params.links]]
    [[params.links.link]]
      name = ""Resume""
      href = ""/Resume.pdf""
    [[params.links.link]]
      name = ""Email""
      href = ""/contact""
      smart_email_link = true

  [[params.links]]
    [[params.links.link]]
      name = ""Github""
      href = ""https://github.com/""
      new_tab = true
    [[params.links.link]]
      name = ""Mastodon""
      href = ""https://mastodon.social/""
      new_tab = true
    [[params.links.link]]
      name = ""Twitter""
      href = ""https://twitter.com/""
      new_tab = true
    [[params.links.link]]
      name = ""Instagram""
      href = ""https://instagram.com/""
      new_tab = true
Check your site In order to see your site in action, run Hugo’s built-in local server.$ hugo serverNow enter localhost:1313 in the address bar of your browser.License MITSee AlsoAcademicPaigeTailBlisshugo-theme-consoleAnatole",NA
Dumindu Madunuwan,43,2023-11-09,MIT,"Dark Mode, Docs, Light Mode, Responsive",Docura,A modular Hugo theme for your next documentation site,https://github.com/docura/docura,https://docura.github.io,"🦄 DocuraA modular Hugo theme to build your next documentation site🌱 Features Responsive and adaptive layouts.Built-in dark, light and night themes.Customizable menu with Hugo configs.Customizable sidebars using Hugo data templates.Support for multiple documentation sets.Minimal reliance on external frameworks (No CSS, JS/npm, icon, font frameworks).SCSS/Vanilla JS based UI components and Hugo pipes based building process.🚀 Getting Started Install Hugo extended version.Use prebuilt binaries via https://github.com/gohugoio/hugo/releases/latestVerify the installation via hugo versionCreate a new site with the Docura theme.hugo new site newsite
cd newsite
git init
git submodule add https://github.com/docura/docura.git themes/docura
rm hugo.toml && cp themes/docura/hugo.yaml .
hugo server
See AlsoBootstrap Theme for Personal Blog and DocumentationsHB Starter Theme TemplateLotus DocsRelearnAcademic",NA
Rafed Muhammad Yasir,42,2023-07-21,MIT,"Blog, Responsive",Ramium,A modern hugo theme for awesome blogs,https://github.com/rafed/ramium,NA,"⚠️ Check out my newer theme BlogRa which has a better UI and is better maintained.RamiumA modern hugo theme for awesome blogsFeatures Site features Google search barGoogle AnalyticsSocial sharing bar (facebook, twitter, reddit)Comments with DisqusCustomizable navbarAdmin panel (Not a real admin panel though. It simply shows the summary of the total number of posts, tags and sections)Mobile responsive- works great across desktops, tablets and mobilesSEO friendly (Opengraph, Twitter cards)Blogging features Attractive landing page with article/tag links everywhereAdd featured images to postsMaking sections for related articles (for example tutorials on a topic)Add code snippetsAdd math equationsAdd tags to articles and list articles by tagsAdd chord to lyrics (CSS style for ChordSheetJs)Future plans Google adsenseSuggestions for reading more articles at the end of an articleSupport for facebook commentsInstallation & Update $ # install
$ mkdir themes
$ cd themes
$ git submodule add https://github.com/rafed/ramium.git ramium

$ # update
$ git submodule update --remote --merge
If you want to know more information, see Hugo doc.Usage Make sure you follow the template structure of the examplesite (including the config.toml)When you manually create files by following quick start (step4), you should command hugo new posts/<filename>.md instead of hugo new post/<filename>.md.For the admin panel, sections list and author page to work the ‘addons’ directory must not be deleted.Detailed instructions are coming soon here.config.toml example baseURL = ""https://rafed.github.io/ramium/""
#CanonifyURLs=true

languageCode = ""en-us""
theme = ""ramium""

title = ""Ramium""
disqusShortname = ""disqus-code""
googleAnalytics = ""analytics-code""
pluralizeListTitles = false
enableemoji = false

[params]
    description = ""A description for the meta tag of the site""
    googleSearch = ""google-search-code""
    showDate = true # make false if dont want to show date for evergeen articles
    math = false # best to enable this in the front matter of a page
    githubLink = ""rafed/ramium/""

    tagsInHome = 40     # set zero to not show in home page
    sectionsInHome = 5  # set zero to not show in home page
    paginatePostsPerPage = 5
    paginateTagsPerPage = 6

[taxonomies]
    tag = ""tags""

[markup.goldmark.renderer]
    unsafe = true

[menu]
    [[menu.main]]
        name = ""Home""
        url = ""/""
        weight = 1

    [[menu.main]]
        identifier = ""blog""
        name = ""This Blog""
        weight = 2
            [[menu.main]]
                parent = ""blog""
                name = ""All Tags""
                url = ""/tags/""
                weight = 1
            [[menu.main]]
                parent = ""blog""
                name = ""All Sections""
                url = ""/sections/""
                weight = 2
            [[menu.main]]
                parent = ""blog""
                name = ""All Posts""
                url = ""/posts/""
                weight = 3
    
    [[menu.main]]
        name = ""Author""
        url = ""/authorr/""
        weight = 3
Frontmatter example ---
title: {{ replace .Name ""-"" "" "" | title }}
date: {{ now.Format ""2006-01-2"" }}
tags: [tag1, tag2]
image: ""/image/blog-pic.jpg""
description: ""A smalll description""
showDate: true/false    # to enable/disable showing dates
math: true              # to enable showing equations (katex)
chordsheet: true        # to add chordsheet styelsheet
---
Contributing If you find problems with the theme raise an issue. Also, contributions/pull requests are welcome.LICENSE MIT.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
shaform,41,2022-07-04,GPLv2,"Blog, Multilingual, Responsive",Den,A port of the Nest Pelican theme for Hugo,https://github.com/shaform/hugo-theme-den,NA,"hugo-theme-denA simple theme for HugoIt’s a port of the Nest Pelican theme.Screenshots Installation $ git clone https://github.com/shaform/hugo-theme-den themes/den
Important: Take a look inside the exampleSite directory of this theme.
You’ll find a file called config.toml.
To use it, copy the config.toml in the root directory of your Hugo site.
You can customize it for your site.Language Support Translations are collected from the themes/den/i18n/ directory (built into the theme), as well as translations present in i18n/ at the root of your project. The translations will be merged and take precedence over what is in the theme folder.Set the default language using defaultContentLanguage:defaultContentLanguage = ""en""  # en / zh-tw / other...
Update Theme cd ./themes/den/
git pull
License Released under the GPLv2 License.Acknowledgements Nesthugo-theme-janeWebsites that use Den 翼之都See AlsoEdHugo ReFreshhugo-arogya-themeAcademicAnanke Gohugo Theme",NA
Josh Johnson,40,2023-07-31,MIT,"Blog, Minimal, Personal, Responsive",Internet Weblog,"A personal, minimal blog theme for Hugo.",https://github.com/jnjosh/internet-weblog,NA,"internet-weblog Theme for Hugointernet-weblog is a minimalistic (and a bit responsive) Hugo theme that offers a traditional blog mixed with a microblog and a photoblog. It also offers the ability to do simple link posts that link to a remote page. It was ported from a theme made for Octopress.The theme features a customizable bio-section and flickr-based photo stream in it’s footer, unique layouts for displaying all posts sorted by year, and support for partials to customize style and javascript loaded.To see more, check out my blog which is rendered with this theme and see it’s configuration on Github.Contents InstallationGetting startedConfiguring Your BlogWhere Should Blog Post Markdown Files be Stored?How to Configure the Menu in the Blog’s NavigationDefining Yourself as the AuthorCustomizing the Bio Section, 404 Page, Javascript, or StylesheetsCreating a Link PostVariablesOverridesContributing3rd Party LibrariesLicenseContactInstallation Inside the folder of your Hugo site run:$ mkdir themes
$ cd themes
$ git clone https://github.com/jnjosh/internet-weblog.git
For more information read the official setup guide for Hugo.Getting Started There are a few concepts this theme employs to make a personal blog. It’s important to read this as you may not see what you expect upon launching. Since this theme is built to be a personal blog it opts for some simplifications like using the “Section Menu for the Lazy Blogger” option in Hugo for displaying a simple menu. It assumes you want to call your blog posts posts and organizes them as such. For example, creating a new post (or micropost, or photopost) with Hugo would require you typing:  $ hugo new posts/my-new-post.md

  $ hugo new microposts/quick-thought.md

  $ hugo new photos/my-nyc-vacation.md
It also assumes you want to display links to your sections of content (posts, microposts, photos) and display links to other pages in the menu and requires some setup on your part. This guide will take you through the steps to configure your blog to use the theme.Configuring your Blog Where should blog post markdown files be stored? The theme works with other content types, but posts work best when grouped under posts. When using the posts (note that it is plural) content type you’ll have a customized list page sorted by year and the default list page. Here’s an example:Recommendation: Organize your blog posts under the posts directory.How to configure the menu in the blog’s navigation As mentioned above, this theme takes a simplistic approach to menus. In fact, it doesn’t really support custom menus opting to just use Hugo’s main menu. Because it uses the “Section Menu for the Lazy Blogger” you’ll need to make one change to your config.toml file. Add main as the SectionPagesMenu.SectionPagesMenu = ""main""
Because of this, your individual posts don’t need to organize themselves into menu groupings. Everything is assumed to be grouped at the top level. One exception to this is if you want to add a custom page to the root of the menu. In this case you would want to add menu: main to your page’s Front Matter.You can control which menu items get an RSS icon and link by adding the RSSSections list to your Params section of your config.toml:[params]
   RSSSections = [ ""Posts"", ""Microposts"", ""Photos"" ]
You can then control the name and weight of these menus in your config.toml by adding a section for each menu item you’d like to display:[[menu.main]]
   name = ""Posts""
   weight = 1
   identifier = ""posts""
   url = ""/posts/""
If you aren’t sure of how this should look, see how jnjosh.com uses this in it’s config.toml.Recommendation: Add SectionPagesMenu to your config.toml file.
Recommendation: Don’t set a menu in your post’s Front Matter unless you want it to display on the navigation.
Recommendation: Customize the menus that get an RSS icon by adding the RSSSections parameter to your config.toml file.
Recommendation: Configure the menu items by adding menu.main sections to your config.toml file.Defining yourself as the Author It looks like most themes use the author variable to add something simple like your name. This theme uses more structured data about you and requires an [author] section. The details of what is affected by each property is defined below in the variables section, but you should add this section to your config.toml:[author]
   Handle = ""<Your `handle`>""
   FirstName = ""<Your First Name>""
   LastName = ""<Your Last Name>""
   AboutPage = ""<The relative or complete link to your about page>""
   Location = ""<Your Location>""
   FlickrID = ""<Your Flickr ID>""
Recommendation: Don’t use the author variable, use the above [author] section in your config.toml.Customizing the Bio Section, 404 page, javascript, or stylesheets There are a few entry points for you to customize built in. The most important one is the bio.html partial. The contents of this file are displayed in the left side of the footer. To customize this, add a bio.html file in your site’s directory under layouts/partials.More details about each of these overrides are below in the overrides section.Recommendation: Add a layouts/partials/bio.html file to your site that tells your readers about you.Creating a Link Post Sometimes you want a post that just links to another website. This can be done by including the externalurl parameter on your individual post. A link post is just a normal post under posts that has this special parameter. For example, on a post talking about some kickstarter project, you can add this to your individual post’s Front Matter:externalurl = ""http://kickstarter.com""
These posts are rendered slightly different with an → to signify that it is remote.Variables VariableWhat value?Requiredthemeinternet-weblogOnly if you want to use this theme! 😃titleinternet weblogNo. Unless you want to call your blog something else.SectionPagesMenumainYes. See above.[author] - HandleA short handle to describe you. This could be your twitter handle or simply your first name.Yes. This is used to generate the Site’s Title.[author] - FirstNameYour first nameYes. This is used in the footer to say Hi and in other places to identify you as the author.[author] - LastNameYour last nameNot really. It is used in some places to identify you as the author.[author] - AboutPage/about or http://about.othersite.comOnly if you want an about page. This is exposed to allow you to link to an external about page as well. If you have a local page it can just be something relative.[author] - LocationYour CityNo. If set, this is added to the Copyright in the footer so you can give some love to your hometown.[author] - FlickrIDYour Flickr IDNo. The footer shows your photo stream from flickr. If you don’t set it, nothing will be displayed.[params] - DescriptionDescribe your siteNo. If set, this is added to your pages metadata.[params] - ShowCopyrighttrue or falseNo. If true, Copyright text will be added to the footer.[params] - RSSEnabledtrue or falseNo. If true, RSS pages will be generated.[params] - RSSSections[ ""Posts"", ""Microposts"", ""Photos"" ]If you want RSS links in the menu, yes. These strings need to be the display name of the section where you want to have an RSS icon displayed. [params] - RSSMicropostTitlestrue or falseNo. If false, Microposts RSS feeds will not have the title in included posts. If not present or true, nothing happens.[params] - YearlyMicropoststrue or falseNo. If true, Microposts will have a page with a yearly grouping just like the posts. If not present or false, the default of not having a micropost yearly grouping is applied.[params] - SummarizeMicropoststrue or falseNo. If true, Microposts will be summarized in the main list just like posts with a continue reading link. If not present or false, the default of not summarizing microposts is applied.Here is an example config.toml:baseurl = ""http://mysite.com/""
languageCode = ""en-us""
title = ""internet weblog""
theme = ""internet-weblog""
Paginate = 10
SectionPagesMenu = ""main""

[author]
   Handle = ""jnjosh""
   FirstName = ""Josh""
   LastName = ""Johnson""
   AboutPage = ""/about""
   Location = ""Durham, NC""
   FlickrID = ""87151163@N00""

[params]
   Description = ""This is my blog, read it and enjoy.""
   ShowCopyright = true
   RSSEnabled = true
   RSSSections = [ ""Posts"", ""Microposts"", ""Photos"" ]

[taxonomies]
   tag = ""tags""
   category = ""categories""
   series = ""series""

[[menu.main]]
   name = ""Posts""
   weight = 1
   identifier = ""posts""
   url = ""/posts/""

[[menu.main]]
   name = ""Microposts""
   weight = 2
   identifier = ""microposts""
   url = ""/microposts/""

[[menu.main]]
   name = ""Photos""
   weight = 3
   identifier = ""photos""
   url = ""/photos/""
Overrides The theme expects you to override a few files in your blog to finalize the customization of your blog. Below is a list of the files you can override and why you’d want to. To override these, create your own version of the file under layouts/partials—you may need to create this directory.FileWhy override?Requiredbio.htmlThe footer of the blog features a section about you.Yes. Otherwise it just has default text.not_found.htmlIf you want to customize the 404 not found page, you can update it here.Probably. The default is pretty plain.custom_javascript.htmlIf you need all pages to have your own custom javascript files referenced, you can do so here.Nocustom_stylesheets.htmlIf you need all pages to have your own custom stylesheets referenced, you can do so here.Nocustom_image_handler.htmlThe footer of the blog features a photo stream. If you want to customize it or use a different source, you can override this behavior.NoContributing Did you find a bug or have an ideas for new features? Feel free to use the issue tracker to let me know or make a pull request.3rd Party Libraries This theme makes use of the following 3rd Party Libraries.lightGallery v1.2.14 - Used in page footer to provide a gallery to view photos in the photo stream.License This theme is released under MIT. For more information, please see the License.Contact This is the first theme I’ve made for Hugo, so I’m sure I’ve done some things wrong or assumed too much. If you have ideas or things that should be fixed, please let me know.Josh Johnson @jnjoshThanks to Steve Francia for creating Hugo!See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Hugo Cisneros,40,2023-02-13,MIT,"Blog, Dark, Minimal, Personal, Responsive",Astatine,Another Hugo minimal theme - for academics,https://github.com/hugcis/hugo-astatine-theme,https://hugcis.github.io/hugo-astatine-theme/,"Hugo Another Minimalist ThemeA simple responsive blog theme for Hugo designed for
academics - based on Natrium.See the example site in action.Screenshots Light mode Dark mode Features BlogDark modeAcademicsResponsivePrivacy (no Google)TaxonomiesSyntax highlightingMicrodataTailwind CSSLatexInstallation You can install this theme just like any Hugo theme, using
Run the following inside your Hugo site folder:$ mkdir themes
$ cd themes
$ git clone https://github.com/hugcis/hugo-astatine-theme
You can now build your website using the hugo command from your site folder.Configuration Take a look at the sample
config.toml
file located in the
exampleSite
folder. It has some documentation for the available fields.TailwindCSS If you don’t want to use Tailwind and just want to write CSS yourself, you can
ignore this.If you are familiar with TailwindCSS and wish to change some of the tailwind
classes in the theme, or add you own in you website’s layout files, you can copy
the configuration to your webiste, with cp themes/hugo-astatine-theme/tailwind.config.js ./. Remember to set the right
path in tailwind.config.js. For example, if you installed the theme as
explained above, you may set it to:module.exports = {
  content: [
    ""content/**/*.md"",
    ""layouts/**/*.html"",
    ""themes/hugo-astatine-them/layouts/**/*.html"",
    ""themes/hugo-astatine-them/content/**/*.md"" # If you happen to put html 
    # within some of the markdown files.
  ]
}
Then, from the website root, run this to build the stylesheet and rebuild it
automatically on change:npx tailwindcss -i ./themes/hugo-astatine-theme/css/main.css \
    -o ./themes/hugo-astatine-theme/css/style.css \
    --watch
LaTeX rendering with KaTex The theme uses KaTex to render math. The JS code is only inserted in the footer
of the page if you set the page parameter KaTeX to true.If you wish to host KaTeX yourself, you can set the site parameter hostedKaTex
to true in the configuration file config.toml. The path for the self-hosted
KaTeX is set to be /js/katex/..., so you can get it hosted on your Hugo
website by grabbing the latest KaTeX
release and placing the katex folder
in ${SITE_ROOT}/static/js/.Content Types Main page This is the main page of your site. You can find the source that generated the
page at
content/_index.md
. It contains three components: an info box with your profile picture and basic
information (this is populated with the front matter of the _index.md), the
content of the page (this is the markdown body of _index.md), and a list of
publications (also controlled by the front matter of _index.md).Posts Used for blog posts. Blog posts are listed on the posts page.Run hugo new post/<post-name>.md to create a post. The Posts section is
there by default, but you can change this in the configuration file (see
config.toml
).Taxonomies Posts can be placed in categories or have tags. List pages for the categories
and tags can be accessed at the URLs ${BASE_URL}/categories/ and ${BASE_URL}/tags/Syntax highlighting Astatine is using Chroma and pygmentsStyle = ""native"" by default. If you would like to use another style you have to adjust the colors in pre in main.css.Issues and contributions If anything does not look right please post an issue! I would be happy to fix
any issue, or if you feel like fixing them yourself please submit a pull
request.License The code is available under the MIT License.The content of the example site was partially generated with Metamorphosum (Copyright © 2014 Kyle Stetz, MIT License).See AlsoAcademicAnatoleAnubisBear CubBlonde",NA
Zachary Betz,40,2023-01-03,CC BY 4.0,Blog,Cayman,"Cayman is a clean, responsive theme for Hugo, ported from the original Jekyll Cayman Theme.",https://github.com/zwbetz-gh/cayman-hugo-theme,NA,"⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️WARNING: This repo is no longer maintained. It’s archived and read-only.⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️CaymanCayman is a clean, responsive theme for Hugo, ported from the original Jekyll Cayman Theme.Table of contents DemoMinimum Hugo versionInstallationUpdatingRun example siteConfigurationFaviconsGetting helpCreditsLicenseDemo https://cayman-hugo-theme.netlify.com/Minimum Hugo version Hugo version 0.81.0 or higher is required. View the Hugo releases and download the binary for your OS.Note: The extended version of Hugo is only required if you wish to edit style-related params in your config file. This is because this theme uses Hugo Pipes and SCSS.Installation From the root of your site:git submodule add https://github.com/zwbetz-gh/cayman-hugo-theme.git themes/cayman-hugo-theme
Updating From the root of your site:git submodule update --remote --merge
Run example site From the root of themes/cayman-hugo-theme/exampleSite:hugo server --themesDir ../..
Configuration Copy the config.toml or config.yaml from the exampleSite, then edit as desired.When editing the header background colors, this site has some nice color combinations.Favicons Upload your image to RealFaviconGenerator then copy-paste the generated favicon files under static.Getting help If you run into an issue that isn’t answered by this documentation or the exampleSite, then visit the Hugo forum. The folks there are helpful and friendly. Before asking your question, be sure to read the requesting help guidelines.Credits Thank you to Jason Long for creating the original Jekyll Cayman Theme.License Creative Commons Attribution 4.0 International.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
setsevireon,19,2023-12-05,MIT,"Blog, Dark, Multilingual",Photophobia,A boring dark theme,https://github.com/setsevireon/photophobia,NA,"PhotophobiaA boring dark theme for Hugo.Installation As a Hugo Module (recommended) From your project’s root directory, initiate the hugo module.hugo mod init <git_repo_domain>/<your_user>/<your_project>
Add the theme’s repo to your config.[yaml,toml]:theme: github.com/setsevireon/photophobia
theme = [""github.com/setsevireon/photophobia""]
As Git Submodule Inside the folder of your Hugo site run:git submodule add https://github.com/setsevireon/photophobia.git themes/photophobia
For more information read the official setup guide of Hugo.The config file You will find an example config file in demo/config.yaml.Contributing If you find a bug or have an idea for a feature, feel free to use the
issue tracker to let me know.See AlsoAcademicAnubisBear CubBootstrap Theme for Personal Blog and DocumentationsBootstrap-BP",NA
Dr. Bala Ramadurai,39,2022-09-20,MIT,Responsive,Travelify,"Lovely wordpress theme, now coming to Hugo.",https://github.com/balaramadurai/hugo-travelify-theme,NA,"The homepage of this Travelify theme is at https://themes.gohugo.io/hugo-travelify-theme/.Some of the important features of Hugo-Travelify-Theme are:Automatic slider generation with banner imagesSubscribe via Email through Mailchimp integration (You have to sign up and generate the HTML code)Multiple author support (Included in the taxonomy)i10n dataDisqus integrationlogo (with option to switch on or off the title)Social media sharing optionsGoogle AnalyticsHere are some screenshots of the theme:Get the theme If you have git installed, you can do the following at the command-line-interface within the Hugo directory:$ cd themes
$ git clone https://github.com/balaramadurai/hugo-travelify-theme.git
You should see a folder called hugo-travelify-theme inside the themes directory that we created a few moments ago. For more information read the official setup guide of Hugo.Setup In the next step navigate to the exampleSite folder at themes/hugo-travelify-theme/exampleSite/. Its structure should look similar to this:exampleSite
|   config.toml
+---content
|   |   about.md
|   |   contact.md
|   \---post
|           creating-a-new-theme.md
|           go-is-for-lovers.md
|           hugo-is-for-lovers.md
|           linked-post.md
|           migrate-from-jekyll.md
|           this-post-has-no-body.md
+---data
|       l10n.toml
\---static
    |   new-york-featured.jpg
    \---banners
            7148951717_9bbf185db3_h-1018x460.jpg
            featured-4.jpg
            featured-5.jpg
            new-york-featured.jpg
            placeholder.png
            Spain-Plaza-de-Cibeles-Madrid-1018x460.jpg
            Spain-Plaza-de-Cibeles-Madrid-670x300.jpg
            spain6-1018x460.jpg
To get your site running, copy the entire contents of the example site using cp -r themes/hugo-travelify-theme/exampleSite/* . into the root folder. (Please refer to http://gohugo.io/overview/quickstart/ for installing a Hugo theme.)The config file Now, let us take a look at config.toml. Let’s take a look at some of the settings.1. Automatic or Manual slider Using the parameters in the config, the slider can be switched on and off at will and the number of banner images on the carousel can be customized.[params.slider]
enable = true
manual = false
num_features = 4 # The slider picks up the banner images from the N most recent posts, where num_features is N.
The slider can be made manual = true and in each of the posts you want highlighted on the slider, include slider = true in the frontmatter. Another way to add a slideshow to the slider is by creating YAML files in the data/slider folder. Check the exampleSite for example.Videos in slider You can now add a video (from YouTube or Vimeo or Dailymotion or your own mp4/webm file) in the slider. (Thanks to [https://github.com/balaramadurai/hugo-travelify-theme/issues/32](Issue #32) for the idea)Tip - For best results in the slider, use 1018x460 resolution for the banner images.2. Google Analytics GoogleAnalytics = """"
3. Comments The comment system is an optional feature powered by Disqus. Enter your shortname to enable the comments section under your posts.disqusShortname = """"
Tip - You can disable the comments section for a single page in its frontmatter:+++
disable_comments = true
+++
4. Menu & Nested Menus The entries in the items menu can be customized. First, let us link a post that you’ve written. We can do this in the frontmatter of the post’s content file by setting menu to main.+++
menu = ""main""
+++
Further, we can add entries that don’t link to posts. Back in the config.toml you’ll find a section for the menus:[[menu.main]]
    name  = ""Contact""
    url   = ""/contact/""
    weight = 20
Define a label and enter the URL of the resource you want to link. With before you can decide whether the link should appear before or after all linked posts in the menu. Therefore, Home appears before the linked post.For nested menus, you can use the following format:[[menu.main]]
    name  = ""Contact2""
    url   = ""/contact/""
    parent = ""Contact""

[[menu.main]]
    name  = ""Contact21""
    url   = ""/contact/""
    parent = ""Contact2""
    weight = 20

[[menu.main]]
    name  = ""Contact22""
    url   = ""/contact/""
    parent = ""Contact2""
    weight = 10

[[menu.main]]
    name  = ""Contact3""
    url   = ""/contact/""
    parent = ""Contact""
5. Sidebars To use the full width of the website you can disable the profile on the left and / or the widgets on the right for a single page in the frontmatter:+++
disable_profile = true
disable_widgets = true
+++
6. Tell me who you are This theme also provides a profile section. Add your social network accounts to the profile section by entering your user name under social. The links to your accounts will be created automatically.7. Widgets You can add widgets to the right sidebar. The following widgets are available:recent articlesMultiple author supportcategory listtag listtag cloudDuckduckgo search enabled on your websiteYou can deactivate them under params.widgets:# Enable and disable widgets for the right sidebar
[params.widgets]
    recent_articles = true
    categories = true
    tags = true
    tag_cloud = true
    archives = false # This feature is yet to be implemented because of limitations in Hugo's way of working.
    search = true
	author = true
	mailchimp = true
	mailchimpform = ""//mailchimp/url/goes/here""
    # grab the mailchimpform value by following instructions here - https://mailchimp.com/help/add-a-signup-form-to-your-website/
    # Copy the URL in the action parameter inside the form
    # <div id=""mc_embed_signup""><form action=""https://balaramadurai.us15.list-manage.com/subscribe/post?u=7f4183fa2fe7abe3dc9f4efad&amp;id=49a3dd3745"" method=""post""
8. Date line The date line includes: post date, categories, comments and sharing links. However, if you want certain pages to omit the date line, simply put nodateline = true in the front matter for that page.9. Disable previous/next article links and remove tags To disable the inclusion of a previous/next article link at the bottom of the page, add noprevnext = true to frontmatter. This feature, along with nodateline = true, can be used to create standalone pages that are less “blog-like”.10. Translation (l10n) You don’t blog in English and you want to translate the theme into your own language? No problem. Inside the exampleSite/data folder you’ll find a file l10n.toml. It contains all the strings related to the theme. Just replace the original strings with your own.11. Linking thumbnails After creating a new post you can define a banner by entering the relative path to the image.banner = ""banners/placeholder.png""
This way you can store the images either in the same folder as your post or in the static folder.Tip - For best results in the slider, use 1018x460 resolution for the banner images.12. Social media sharing You can enable to disable social media sharing buttons selectively using the following options:[params.share]
    enable = true
    facebook = true
    twitter = true
    googleplus = true
    linkedin = true
13. Permalink Slugs You can customize the slugs to look like thise.g. in the [permalinks] section, categories can be set up in these
different ways:categories = ""/category/:slug/""
categories = ""/categories/:slug/""
Thanks to @sandipb with the PR - https://github.com/balaramadurai/hugo-travelify-theme/pull/31Nearly finished To preview your site, run Hugo’s built-in local server.$ hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing to the theme Found a bug or have an idea for a new feature? Feel free to use the issue tracker to let me know. Or make a pull request.License This theme is released under the MIT license. For more information read the license.Acknowledgements Thanks toAigars Silkalns for creating this themeSteve Francia for creating Hugo and the awesome community around the projectdigitalcraftsman for creating the source code for Icarus themeAnita Nagarajan for editing this post/READMESee AlsoArcanaBlack & LightCalligraphyCreative portfolioDPSG",NA
Can Stand,37,2023-10-11,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Personal, Responsive",Compost,"A simple, lightweight theme for Hugo built with Tailwind CSS.",https://github.com/canstand/compost,https://canstand.github.io/compost/,"Compost Theme | HugoCompost is a simple, lightweight theme for Hugo. Mainly based on the Congo, also refer to hugo-starter-tailwind-basic and so on.🌏Demo site | 中文Features Styles are based on Tailwind CSS 3.x, and the official Typography plugin.You can build and test directly with the hugo command (using some of the tricks mentioned in #8343).🌐 The article style is specially customized for the Simplified Chinese language (only applied when the lang of html is zh).✨ Automatically resize images with Hugo’s built-in function, and add native lazy loading attr (supported by browsers)Usage This theme uses go modules, not git submodule, to ensure that the requirements are met and to see the instructions. (Notes for Windows users)Set the theme in the Hugo project as github.com/canstand/compost, and add required options to hugo.toml:# required
[build]
  _merge = 'deep'

# required
[markup]
  _merge = 'deep'

# for better seo
[minify]
  _merge = 'deep'

# required
[module]
[[module.mounts]]
  source = 'assets'
  target = 'assets'
[[module.mounts]]
  source = ""hugo_stats.json""
  target = ""assets/watching/hugo_stats.json""
[[module.imports]]
  path=""github.com/canstand/compost""
Install or upgrade dependencies:hugo mod get -u
hugo mod npm pack
npm install
Then run your project as usual.hugo server
See AlsoBlowfishHugoplateLightbiPaigePiko",NA
Darshan Baral,37,2022-12-01,MIT,"Blog, Portfolio",aafu,Portfolio and blog theme with multiple theme colors,https://github.com/darshanbaral/aafu,NA,"aafu ThemeThe aafu Theme is a responsive portfolio with blog.Live Demo Click here for live demo.Installation Inside the folder of your Hugo site run:$ cd themes
$ git clone https://github.com/darshanbaral/aafu.git
For more information read the official setup guide of Hugo.Getting started After installing the aafu Theme successfully, modify the config.toml as you wish to generate your online resume.The config file You’ll find a file called config.toml. Copy the config.tomlto the root folder of your Hugo site and customize it per your need.Note that the sections to be displayed in the accordion, the order of the sections, and the section that should be expanded at the beginning can be specifed in the config.toml.Add your photo Go to static/images and replace the profile.jpg with your own file.Theme Colors The aafu theme provides four different theme colors - light, dark, ocean, and pinkish. These can be specified in the config.toml    [params.theme]
        # Available themes are 'light', 'dark', `ocean`, and 'pinkish'
        mainTheme = ""light""
Reporting Issues If you have discovered a bug or have a feature request, create an issue.See AlsoCalligraphyAcademicBeautiful HugoGokarnaHugo Blox - Tailwind",NA
Michael Neuper,16,2023-11-16,MIT,"Blog, Light, Minimal, Responsive",TeXify3,A latex-style hugo theme with the gruvbox color scheme for personal blogging,https://github.com/michaelneuper/hugo-texify3,https://michaelneuper.github.io/hugo-texify3/,"TeXify3A LaTeX-style hugo theme with the gruvbox color scheme for personal blogging

Features Any comment engine (giscus, remark42, hyvor, etc.)Mermaid supportDuckDuckGo searchBuymeacoffee widgetAuto numbered subtitlesDisqus & Google AnalyticsRender math equations with KaTeXPostCSS to make writing CSS easierDark mode toggleCitationsVisit the demo site.View full lighthouse report hereUsage git submodule add https://github.com/michaelneuper/hugo-texify3.git themes/hugo-texify3
Visit the wiki for more information on how to install and configure.See hugo.toml
for an example configuration.Acknowledgement The following software inspires the design of this theme:https://github.com/weastur/hugo-texify2https://github.com/vincentdoerig/latex-csshttps://github.com/7ma7X/HugoTeXhttps://theme.typora.io/theme/Academic/https://github.com/queensferryme/hugo-theme-texifyhttps://sharingbuttons.ioSupport If you want to support the development or say thanks, become a GitHub Sponsor orSee AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Bino Kochumol Varghese,35,2023-11-04,MIT,"Blog, Bootstrap, Company, Dark, Dark Mode, Light, Minimal, Multilingual, Personal, Portfolio, Responsive",Lightbi,A minimal and clean blog theme for Hugo.,https://github.com/binokochumolvarghese/lightbi-hugo,https://lightbi-hugo-theme.netlify.app/,"LightbiLightbi is a minimal and clean blog theme for Hugo.🌍 Demo site📁 Demo repo🐛 Bug reports & Issues💡 Questions & feature requests📄 WikiFeatures General Three sections for content:BlogNotesCollections (Newsletter)Responsive, mobile-first design.Card based theme.Menu location indicator.Multilingual support. (with language selector)Taxonomies.Light/Dark theme (automatic theme switch a/c to browser theme and theme-switch button).Google Analytics.SEO Friendly.Commit SHA on the footer.Self Hosted assets for GDPR / EU-DSGVO compliance.Beautiful icons with Bootstrap Icons.Page Other Posts suggestion below a postSocial-Media Share buttons on posts.Syntax highlighting.Cover image for each post (with Responsive image support).Installation Install Hugo and create a new site. See the Hugo documentation for details.hugo new site <name of site>
cd <name of site>
git init
git submodule add https://github.com/binokochumolvarghese/lightbi-hugo themes/lightbi-hugo
echo ""theme = 'lightbi-hugo'"" >> config.toml
hugo server
After the above copy the contents of exampleSite to the content folder in your website.Wiki Checkout the wiki page for detailed documentation of the theme features.Support & Contribution Star 🌟 this repository.Help to spread the word about Hugo Lightbi by sharing it on social media and recommending it to your friends.Bug reports & issues: Use GitHub Issues.Ideas for new features: Open a discussion on GitHub Discussions.General questions: Head to GitHub Discussions.Credits Beautiful Hugo from which Lightbi was forked.Unsplash for Images.About This is an adaptation of the Beautiful Hugo by Michael Romero. It supports most of the features of the original theme, and many new features. It has diverged from the original theme over time, with several updates.License MIT Licensed, see LICENSE.See AlsoPaigeAcademicPikoBeautiful HugoBootstrap Theme for Personal Blog and Documentations",NA
zzzmisa,14,2023-11-24,MIT,"Gallery, Landing, Portfolio, Responsive",Doors,Single page theme for links to your works,https://github.com/zzzmisa/hugo-theme-doors,https://zzzmisa.com,"Hugo Theme DoorsSingle page theme for links to your works.See a real usage here: https://zzzmisa.com/Features Links to your worksResponsiveSNS buttonGoogle Tag ManagerAccelerated Mobile Pages (AMP) supportedGetting started The example of how to use this theme is provided in the exampleSite folder. At first, try running the example site. The contents of the site can be configured by config.toml. After the example site appears, rewrite config.toml with your own data to make your own site.Run example site Install Hugo.Create a new project folder to running the example site.$ mkdir mySite
Install this theme into your project folder.$ cd mySite
$ git clone https://github.com/zzzmisa/hugo-theme-doors.git themes/hugo-theme-doors
Copy the entire contents of the exampleSite to root folder of your project folder.$ cp -r themes/hugo-theme-doors/exampleSite/* .
Test the example site.$ hugo server -w
See the result at http://localhost:1313/ on your browser.Build the example site.$ hugo
Find result files in the public folder in the root of your project folder.Contributing Bug reports and pull requests are welcome! By submitting a pull request, you agree to license your contribution under the MIT license.Supported Hugo versions Hugo Theme Doors is tested against Hugo v0.53 to v0.120.4.Attribution notices Doors includes open source software and its modified versions. Attribution notices are in code comments of index.html and the build output file.See AlsoAcademicPaigeW3.CSS Basichugo-theme-consoleAdritian Free Hugo Theme",NA
Serghei Iakovlev,33,2022-09-25,MIT,"Blog, Light, Minimal, Multilingual, Responsive",Ed,"Ed theme for minimal editions, based on Alex Gil theme",https://github.com/sergeyklay/gohugo-theme-ed,https://gohugo-theme-ed.netlify.app/,"Ed | DemoEd is a Hugo theme designed for textual editors based on
minimal computing principles, and focused
on legibility, durability, ease and flexibility.This theme is adopted and finalized with new functionality from
Jekyll Ed
theme by Alex Gil.Sample Ed editions Our sample site is the first edition built with Ed.Serghei Iakovlev’s blogFeatures Templates for narrative, drama and poetryResponsive design for mobile phones, tablets and PCsRelatively easy to learn and teachWorks well in high- or low- bandwidth scenariosEasier for digital archives and libraries to preserveOpen source, open accessUnobtrusive footnotesMetadata in OpenGraph to play nice with social media and search enginesAutomatic table of content generationSimple search functionalityAnnotations via hypothes.isContact formCustom robots.txt (changes values based on environment)RSS/Atom/Json Feeds DiscoveryInstalling and using Ed To learn how to install and begin using Ed, please visit our
documentation page.License Ed licensed under the MIT License. See the LICENSE file for more information.See AlsoAcademicAnubisBeautiful HugoBootstrap-BPColor Your World",NA
Georg Makowski,12,2023-11-30,Apache 2.0,"Blog, Docs",Perplex,Documentation and multi-purpose theme for technical content,https://github.com/bowman2001/perplex,https://perplex.desider.at,"
Perplex Theme for HugoThis documentation and multi-purpose theme focuses on good legibility by providing a detailed rich layout. It’s highly optimized for speed by self-hosting resources. No other software is required to start a new project.The documentation is also the demonstration site. If you want to get started right away visit the workflow introduction.Features All kinds of pages are rendered into the same coherent fluid-responsive layout grid. The detailed typographic design is based on classic principles and techniques. The theme can generatelarge documentation with up to three menu levelsblog postingsa news streamauthor pagescard previewsThe default styling of Markdown content is optimized for good legibility and there are many options to further enhance the layout. Light & dark modes follow the setting of the OS environment automatically.All navigational elements to sift through the content as fast as possible are generated from data in the frontmatter:Site menu at the topSidebar menu for documentationTaxonomiesPage-to-page linksBreadcrumbsGoogle’s Material Symbols and Simple Icons for brands can be included by their identifiers. Material Symbols automatically show in all navigational elements of the documentation. All icon sets can also be used as Markdown content (using shortcodes).The appearance of images can be controlled to a large extent. The theme handles their preprocessing and the generation of all the needed variants. They are delivered smoothly with Lazysizes and without layout shifts.To offer a full-text search the theme is prepared to generate and self-host indices with the fast library Pagefind (the additional installation of its open-source node package is required).Sites built with this theme are very fast and cost-effective. Image sets are highly optimized to minimize the needed bandwidth (and loaded lazily), fonts are split into small packages, and icons are embedded inline.See AlsoAcademicBootstrap Theme for Personal Blog and DocumentationsComposeCupperDoks",NA
Softorage,12,2023-11-28,MIT,"Blog, Bootstrap, Responsive",Vibrant Shadows,"An insanely customizable, extremely lightweight and ridiculously fast 'Blog Theme' for Hugo, with mobile support and a lot more.",https://github.com/Softorage/HugoTheme-VibrantShadows,https://vibrantshadows.softorage.com/,"Vibrant ShadowsAn insanely customizable, extremely lightweight and ridiculously fast ‘Blog Theme’ for Hugo, with mobile support and a lot more.If you like our work & find it useful, please consider to star on GitHub. We are on Facebook, X and Instagram, you can follow us there too! It really motivates us!Preview Theme\DeviceDesktopMobileLightDarkTable of Contents FeaturesPrerequisitesGetting up and runningSetting up new Hugo website1. As a Hugo theme (recommended)2. As Git SubmoduleUsing boilerplate providedInstalling the node dependenciesGet startedConfigurationGlobal ParametersHugo’s built-in parametersVibrant Shadow’s custom parametersPage ParametersExample config.yamlBuilt withContributingLicenseFeatures Blog with custom Taxonomy options, including tagging and category optionsDeeplinksInsanely customizable (see config)Dedicated ‘Table of Contents’Infinite ScrollingSmart Dark/Light ModeLogo alignmentSane defaultsMobile support with configurable menu alignmentSyntax HighlightingSocial-Media Share buttons on postCookie Consent: “Opt-in”, “Opt-out” and “None”Custom fonts for different elementsSEO optimization and customizationAbility to customize positions of various elementsPrerequisites Firstly, ensure you have installed the latest (min v0.75.1) extended version of Hugo. You may need to scroll down a bit to see extended versions. Alternatively, you may see installation steps from Hugo’s official docs.If you don’t have or can’t have extended version of Hugo installed, copy the resources folder from theme to root of your Hugo website directory. Hugo autodetects required files, and uses them. Note that it might make your website slightly slow to load.Getting up and running Read the prerequisites above and verify you’re using the extended version of Hugo. There are at least two ways of quickly getting started with Hugo and the Vibrant Shadows theme:Setting up new Hugo website hugo new site yourSiteName # generate a new Hugo site if you don't already have one
cd yourSiteName # move in to the Hugo website's directory
1. As a Hugo theme (recommended) Download the repo on your machineExtract the zip file and rename the folder from HugoTheme-VibrantShadows-master to HugoTheme-VibrantShadows.Copy this folder and paste it into themes folder in your Hugo Website directory. If there isn’t a themes folder, create one.Simply add the repo to your theme option in config.yaml:theme: ""HugoTheme-VibrantShadows""
2. As Git Submodule Inside the folder of your Hugo site run:git init # to initiate git if it isn't already
git submodule add https://github.com/Softorage/HugoTheme-VibrantShadows.git themes/HugoTheme-VibrantShadows # add theme as a git submodule
cp -a themes/HugoTheme-VibrantShadows/exampleSite/* . # start with the boilerplate by copying it into current directory
Then runhugo server
And, we’re done!If you have extended version of Hugo installed, copy the postcss.config.js file to the root of your Hugo Website directory after setting up the theme. We also recommend creating a package.json file in your Hugo Website directory.Using boilerplate provided If this is the first time you are setting up Hugo:Copy the contents of exampleSite folder provided, and paste into your Hugo Website directory.Then run hugo server in terminal.Installing the node dependencies # Node.js is required only if you wish to enable ""Speed Mode""
# ""Speed Mode"" requires Hugo Extended Version and Node.js

# Install nodejs and npm. Change the following command as per you distribution/OS.
sudo apt install nodejs npm 

# Go to your Hugo Website directory, then open terminal and type:
npm install -g postcss postcss-cli autoprefixer cssnano @fullhuman/postcss-purgecss
Get started And, we’re done! Now you can write your posts in Markdown format (.md file extension). You just need to keep these posts in /content directory. The directory structure that you make in the content directory also gets reflected as your blog’s (or you website’s) structure. For example, say you have post named my-awesome-post.md in content/post/category-one. Then the post will be available on the internet at your-web-address.com/post/category-one/my-awesome-post.To create a new post, simply do hugo new and Hugo will generate a new post for you using archetype. A post needs to have front-matter and content. Front-matter contains all the Page Level parameters, while content is your actual post.To test how your blog looks, run hugo serve, and log on to the URL given at the terminal (or command prompt) after you run hugo serve. The URL is usually something like localhost:1227. To generate production ready website, simply run hugo build. Your website will be created in a directory named public. You can then copy and paste the contents of the public directory on the webserver, and the server should do the rest. You can also setup Hugo to build website automatically from the code and publish to the internet using GitLab, Netlify, etc. though it may require some technical knowledge. If you want to test how your production ready website renders, runhugo serve -e production.Once set, jump over to the config.yaml file and start configuring your site.Configuration Here, we will mainly see settings that are unique to this theme. If something is not covered here (or elsewhere in this file), there’s a good chance it is covered in this Hugo docs page. At the end of this section you will find an example config.yaml file, with all the options. It may serve in understanding all the options a bit better.Global Parameters These options set global values that some pages or all pages in the site use by default.Hugo’s built-in parameters BaseURL (Type: String | Accepts value: URL | Required | No default)baseURL is the URL of the website or blog.Example:baseurl: ""https://example.com/""
Title (Type: String | Accepts value: Text | Required | No default)It is the title of the website or blog. Title is usually same as brand name.Example:title: ""ExampleBlog""
Author (Type: String | Accepts value: Text | Required | No default)We won’t be using site.Authors till this parameter is finalized. See here.Copyright (Type: String | Accepts value: Text | Optional | No default)It is the copyright text. Due consideration should be given to ‘brandName or title’ and ‘contentLicense’ specified in configuration file. Note that it isn’t used in footer, but only in default RSS template.Example:copyright: ""Copyright &#169; 2020 ExampleBlog. All rights reserved.""
Language Code (Type: String | Accepts value: Text | Recommended | No default)It stores the language code for the website or blog.Example:languageCode: ""en-us""
Theme (Type: String | Accepts value: Text | Required | No default)This is the name of the theme you are using.Example:theme: ""HugoTheme-VibrantShadows""
Google Analytics (Type: String | Accepts value: Alphanumeric | Optional | No default)It is your Google Analytics ID, if any. Respecting your preference from ‘privacy’, and ‘params -> user_experience’ configuration, if you set this value, Google Analytics code will be included. Google Analytics included only when serving the website on ‘production’ environment (i.e. website built with hugo command and not hugo serve). If you wish to not use Google Analytics, do not set this variable; also set disabled to true in privacy configuration for Google Analytics.Example-1:googleAnalytics: ""UA-123456789-0"" # the now deprecated Google Universal Analytics tag ID. Supported by Google till July 1, 2023.
Example-2:googleAnalytics: ""G-123456789-0"" # the Google Analytics tag 4 ID. Works only from Hugo v0.82.0 onwards.
Disqus Shortname (Type: String | Accepts value: Alphanumeric | Optional | No default)It is your Disqus Shortname, if any. Respecting your preference from ‘privacy’, if you set this value, Disqus comments code will be included at the end of the blog posts. Disqus comments are shown only when serving the website on ‘production’ environment (i.e. website built with hugo command and not hugo serve)Example:disqusShortname: ""yourdiscussshortname""
Taxonomies (Type: Map/Dict/Object | Accepts value: - | Optional | Default: Tags & Categories)This feature allows to define custom taxonomies for post/page management.Example:taxonomies:
  tag: ""tags"" # when defining custom taxonomies, we need to redefine even the default taxonomies if we wish to keep them, hence we have redefined 'tags'. see here: https://gohugo.io/content-management/taxonomies#example-adding-a-custom-taxonomy-named-series
  category: ""categories"" # redefined 'categories'
  series: ""series"" # defined a custom taxonomy, 'series'
Menus (Type: Map/Dict/Object | Accepts value: - | Optional | No default)These are the menus that are used by users to navigate the website/blog. An example would be ‘main’ menu, which usually resides on navbar.Example:menu:
  main:
    - identifier: ""about"" # different for all menu entries, useful especially when menu name coincides
      name: ""About"" # shown on website/blog
      url: ""/about/"" # user is taken to this url when user clicks on menu item
      weight: 10 # used to sort menu items by weight
    - identifier: ""sub-about""
      name: ""Sub About""
      url: ""/sub-about/""
      parent: ""about""
      weight: 1
Build Stats (Type: Map/Dict/Object | Accepts value: - | Required)With this, Hugo notes some stats about website, which are then used by CSS processors.Example:build:
  writeStats: true
Privacy (Type: Map/Dict/Object | Accepts value: - | Optional)This feature allows to maintain optimal privacy settings for the website/blog. You can see full list of privacy settings here, and their explanation here.Example:privacy:
  disqus:
    disable: false # | default: false
  googleAnalytics:
    anonymizeIP: true # 'true' makes it so the users' IP addresses are anonymized within Google Analytics | default: false
    disable: false # | default: false
    respectDoNotTrack: false # 'true' makes the GA templates respect the “Do Not Track” HTTP header | default: false
    useSessionStorage: false # 'true' disables the use of Cookies and use Session Storage to Store the GA Client ID | default: false
ROBOTS.TXT (Type: Boolean | Accepts value: true/false | Optional | No default)Allows to create a robots.txt file, which helps in SEO.Example:enableRobotsTXT: true
Git Info (Type: Boolean | Accepts value: true/false | Optional | No default)Allows us to use .GitInfo object. .GitInfo object allows us to leverage information from git for use in Hugo. If enableGitInfo is set to true, it is recommended to add :git at the end of default frontmatter configuration. Adding :git at the end (of default format) makes the atom/rss feed to fetch dates from git, once enableGitInfo is set to true in ‘config’ file.Example:enableGitInfo: true
# Only if 'enableGitInfo' is set to 'true'
frontmatter:
  date: [""date"", ""publishDate"", ""lastmod"", "":git""] # adding ':git' at the end (of default format) makes the atom/rss feed to fetch dates from git, once enableGitInfo is set to true in 'config' file
Emoji (Type: Boolean | Accepts value: true/false | Optional | No default)Allows to use emojis in content files. See the Emoji cheat sheet for available emoticons.Example:enableEmoji: true
HTML in markdown (Type: Map/Dict/Object | Accepts value: - | Optional | No default)Allows to use HTML in content files.Example:# Allow HTML in markdown to be rendered
markup:
  goldmark:
    renderer:
      unsafe: true
Vibrant Shadow’s custom parameters All these properties come under Hugo’s built-in property, params.Example:params:
  footerMessage: ""Awesome footer message""
Let’s see them one by one.Social (Type: Map/Dict/Object | Accepts value: - | Highly Recommended | No default)It stores information related to your social media profiles. It contains:Profiles (Type: Map/Dict/Object | Accepts value: - | Highly Recommended | No default)It stores your social media profiles. These are showcased as per your preference.Supported platformsfacebook: ""#""
twitter: ""#""
github: ""#""
gitlab: ""#""
steam: ""#""
instagram: ""#""
youtube: ""#""
pinterest: ""#""
linkedin: ""#""
reddit: ""#""
flickr: ""#""
deviantart: ""#""
vk: ""#""
mastodon: ""#""
bandcamp: ""#""
tumblr: ""#""
medium: ""#""
wikipedia: ""#""
To be supported in future:paypal: ""#""
slack: ""#""
twitch: ""#""
stackoverflow: ""#""
shutterstock: ""#""
soundcloud: ""#""
codepen: ""#""
Share (Type: Array | Accepts value: “facebook”, “twitter”, “linkedin”, “whatsapp”, “reddit”, “email” | Optional | No default)Specify the name of social media platforms that you want your articles to be able to be shared on. You also need to set value in position parameter, for share icons to be displayed.Example:social:
  profiles:
    facebook: ""https://facebook.com/#myprofile""
    twitter: ""https://twitter.com/#myprofile""
    github: ""https://github.com/#myprofile""
    gitlab: ""https://gitlab.com/#myprofile""
  share: [""facebook"", ""twitter"", ""linkedin"", ""telegram"", ""whatsapp"", ""reddit"", ""email""]
Meta (Type: Map/Dict/Object | Accepts value: - | Required/Optional)Author (Type: String | Accepts value: Text | Required | No default)It stores website-wide author(s). We won’t be using site.Authors till it is finalized. See here.Example:author: ""The Great Authors""
Footer Message (Type: String | Accepts value: Text | Optional | No default)It is shown in footer above footer links.Example:footerMessage: ""Awesome footer message""
Tagline (Type: String | Accepts value: Text | Required | No default)It is the tagline of the website/blog. It’s displayed in website title, and on homepage.Example:tagline: ""A blog to satisfy you needs""
Description (Type: String | Accepts value: Text | Required | No default)It is the description of website/blog and should include website/blog title (brand name) at least once, for great SEO benefits. Recommended character length: 50 to 160.Example:description: ""A really great description!""
Content License (Type: String | Accepts value: Text | Required | No default)It is the license under which website/blog’s content is distributed. It should be same as that specified in field ‘copyright’ above.Example:contentLicense: ""All rights reserved."" # Another example: 'CC-BY-SA-3.0'
Title Separator (Type: String | Accepts value: Text | Optional | Default: "" | “)It is used in website/blog title, to separate (say) page title from website/blog title.Example:titleSeparator: "" | ""
Attribution (Type: String | Accepts value: enable/disable | Optional | Default: “enable”)Allows to attribute Hugo team for awesome software and Softorage for great theme.Example:attribution: ""enable""
Brand (Type: Map/Dict/Object | Accepts value: - | Highly Recommended)It stores brand related information. It contains:Name (Type: String | Accepts value: Text | Required | No default)It’s the Brand’s Name, usually just one/two word that is name of the brand.Logo - 500px (Type: String | Accepts value: URL | Required | No default)It’s path (preferably relative path) to brand’s logo with resolution 500px.Logo - 32px (Type: String | Accepts value: URL | Required | No default)It’s path (preferably relative path) to brand’s logo with resolution 32px. It will be shown on navbar as is.Color (Type: String | Accepts value: HEX/RGBA | Required | No default)It’s the color to be shown on scroll for brand name on navbar.Navbar Config (Type: Array | Accepts value: “logo”, “name” | Optional | Default: [“logo”, “name”])It determines whether brand’s logo and/or name should be visible on navbar.Example:brand:
  name: ""ExampleBlog""
  logo_500px: ""/assets/favicon/android-chrome-512x512.png""
  logo_32px: ""/assets/favicon/favicon-32x32.png""
  color: ""#7d1fa5""
  navbar: [""logo"", ""name""]
Theme (Type: Map/Dict/Object | Accepts value: - | Optional)You can specify custom color pallet to form look for the website/blog of your own liking. You can customize both Light as well as Dark theme, as below:Light/Dark (Type: Map/Dict/Object | Accepts value: - | Recommended)Default (Type: Boolean | Accepts value: true/false | Optional | Default: true for dark)That theme out of the Light or Dark will be the default theme, for which this option is set to true, and will be loaded when user visits the website/blog. If set to true or false or not set, for both the Light and Dark themes, Dark theme will be set as default.Nav (Type: String | Accepts value: HEX/RGBA | Optional | Default: “#ffffff”)It’s navbar’s background color. Recommended to be a little lighter than Mat below.Antinav (Type: String | Accepts value: HEX/RGBA | Optional | Default: “#000000”)It’s a color in good contrast to nav.Mat (Type: String | Accepts value: HEX/RGBA | Optional | Default: “#f9f9f9”)It’s background color for cards (not of cards). It applies to the background on which cards are placed. Cards have Nav as their background color. So, Mat should preferably be darker than Nav above.Color-1 (Type: String | Accepts value: HEX/RGBA | Optional | Default: “#7d1fa5”)It’s color-1 in the hero gradient. It is used throughout the theme.Color-2 (Type: String | Accepts value: HEX/RGBA | Optional | Default: “#6d19fc”)It’s color-2 in the hero gradient. It is used throughout the theme. Recommended to be in contrast with nav.Gradient Direction (Type: Map/Dict/Object | Accepts value: - | Optional)Background (Type: String | Accepts value: ltr/rtl | Optional | Default: “ltr”)Text Color (Type: String | Accepts value: ltr/rtl | Optional | Default: “ltr”)Button Background (Type: String | Accepts value: ltr/rtl | Optional | Default: “ltr”)ltr: left to right | rtl: right to leftToggle (Type: Map/Dict/Object | Accepts value: - | Recommended)Switch (Type: Boolean | Accepts value: true/false | Required | Default: false)true, if you want to have a theme toogle on the navbar. Otherwise, false.Flash Of Incorrect Theme (Type: Boolean | Accepts value: true/false | Required | Default: false)Flash of incorrect theme means flash of the theme other than that set by the user. It generally happens when user of the blog has a theme set in localStorage which is different from the theme that the blog (by default) loads with, and when the default theme loads before the JavaScript (that applies corect theme) is loaded and executed. Setting allowFOIT to false, simply loads the JavaScript before whole of the document is loaded. This may translate to slightly lesser performance for the blog, but superior user experience.Caption (Type: Map/Dict/Object | Accepts value: - | Optional)Light (Type: Array | Accepts value: [“icon” or “text”], [“fa-light/fa-sun/utf-light/utf-sun/utf-sun-face” or “Any text”] | Optional | Default: [“icon”, “fa-sun”])What caption does the user see on the toggle when switched to Light theme. Be careful with using “text”, since it may overflow the toggle.Dark (Type: Array | Accepts value: [“icon” or “text”], [“fa-dark/fa-moon/utf-dark/utf-moon/utf-moon-face-left/utf-moon-face-right/utf-full-moon” or “Any text”] | Optional | Default: [“icon”, “fa-moon”])What caption does the user see on the toggle when switched to Dark theme. Be careful with using “text”, since it may overflow the toggle.
Example:theme:
  light:
    nav: ""#ffffff""
    antinav: ""#000000""
    mat: ""#f9f9f9""
    clr1: ""#7d1fa5""
    clr2: ""#6d19fc""
    gradientDirection:
      background: ""ltr""
      text: ""ltr""
      button: ""ltr""
  dark: # default
    default: true
    nav: ""#212121""
    antinav: ""#cccccc""
    mat: ""#121212""
    clr1: ""#7d1fa5""
    clr2: ""#6d19fc""
    gradientDirection:
      background: ""ltr""
      text: ""ltr""
      button: ""ltr""
  toggle:
    switch: true
    allowFOIT: false
    caption:
      light: [""icon"", ""fa-sun""]
      dark: [""icon"", ""fa-moon""]
Borders (Type: String | Accepts value: square/rounded/circle/pill | Optional | Default: “rounded”)Here, specify what kind of borders do you like for elements, like buttons, cards.Example:borders:
  buttons: ""rounded""
  cards: ""rounded""
  # preformatted-text: """" not adding border customization to pre tag for now
Background Image (Type: Map/Dict/Object | Accepts value: - | Optional)Landing Page (Type: String | Accepts value: URL | Optional | No default)It is path to background image for hero section on landing page. If specified, background image will be applied.Post (Type: String | Accepts value: enable/disable | Optional | Default: “enable”)If enabled, image set in front-matter will be shown as background image for hero section of the post.Example:backgImage:
  landingPage: ""/neven-krcmarek-V4EOZj7g1gw-unsplash.jpg""
  post: ""enable""
Position (Type: Map/Dict/Object | Accepts value: - | Optional with caveats)It lets you customize what elements should be displayed and where. It contains:Social (Type: Map/Dict/Object | Accepts value: - | Optional)Profiles (Type: String | Accepts value: footer/navbar | Optional | Default: “footer”)It lets you customize where you want your social profiles to appear. You may use ’navbar’ if number of items in main menu and social profiles are minimal, otherwise ‘footer’ is recommended.Share (Type: String | Accepts value: top/bottom | Optional | Default: “top”)It lets you customize where you want your social sharing buttons to appear on a blog post.Menu on Navbar (Type: String | Accepts value: right/left | Optional | Default: “right”)It lets you customize the position of main menu on navbar.Post’s Meta (Type: Map/Dict/Object | Accepts value: - | Optional | No default)It lets you customize which elements from post’s meta should be displayed, where and how.It contains:readingTime - wordCount - author - lastUpdated - tags(Type: Map/Dict/Object | Accepts value: - | Optional | No default)It lets you customize where (summary/content) you want to show a post’s ‘reading time’, ‘words count’, ‘author’, ’last updated on’, ’tags’ and how (top/bottom).# For example,
position:
  postMeta:
    tags:
      summary: ""top""
      content: ""bottom""

# above code lets you show tags of your posts:
  1.  at the time when its 'summary' is being shown (for example, in the posts' list on landing page), at the top of the 'summary'.
  2.  at the time when its 'content' is being shown (for example, when a user visits the post itself), at the bottom of the 'content'.

# not including (say) 'readingTime' (or 'wordCount' or 'author' or 'lastUpdated' or'tags'), would simply omit 'readingTime' from appearing in 'summary' and 'content'.
# not including only (say) 'summary' (or 'content') for (say) 'readingTime', would simply omit 'readingTime' from appearing in 'summary' (or 'content').
Example:position:
  social:
    profiles: ""footer""
    share: ""bottom""
  navbarMenu: ""right""
  postMeta:
    readingTime:
      summary: ""top""
      content: ""top""
    wordCount:
      summary: ""top""
      content: ""top""
    author:
      summary: ""top""
      content: ""top""
    lastUpdated:
      summary: ""top""
      content: ""top""
    tags:
      summary: ""top""
      content: ""bottom"" # default: ""bottom""
Fonts (Type: Map/Dict/Object | Accepts value: - | Optional )It lets you customize the fonts for various types of text elements, and in general too.Let’s see this customization property with an example:font:
  general:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  heading: 
    list: [""h1""] # accepts array of values: ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""h6"" | default: [""h1""]
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  description:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  brand:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  footer:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  copyright:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  postMeta:
    family: ""Lato"" # must match to a css font-family | default: ""Lato""
    #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
Favicon Tags (Type: String | Accepts value: Text | Optional | No default)It stores HTML tags for your favicon (see example below). We recommend you to ensure that you have ""purpose"": ""maskable"" set for one icon in your site.webmanifest file (helps for PWA). We recommend https://realfavicongenerator.net since it’s easy to use and free. By the way, we are not affiliated with them. We just like their product!Example:faviconTags: |
  <link rel=""apple-touch-icon"" sizes=""180x180"" href=""/assets/favicon/apple-touch-icon.png"">
  <link rel=""icon"" type=""image/png"" sizes=""32x32"" href=""/assets/favicon/favicon-32x32.png"">
  <link rel=""icon"" type=""image/png"" sizes=""16x16"" href=""/assets/favicon/favicon-16x16.png"">
  <link rel=""manifest"" href=""/assets/favicon/site.webmanifest"">
  <link rel=""mask-icon"" href=""/assets/favicon/safari-pinned-tab.svg"" color=""#525252"">
  <link rel=""icon"" href=""/assets/favicon/favicon.ico"" type=""image/x-icon"">
  <link rel=""shortcut icon"" href=""/assets/favicon/favicon.ico"" type=""image/x-icon"">
  <meta name=""apple-mobile-web-app-title"" content=""ExampleBlog"">
  <meta name=""application-name"" content=""ExampleBlog"">
  <meta name=""msapplication-TileColor"" content=""#fff6f8"">
  <meta name=""msapplication-config"" content=""/assets/favicon/browserconfig.xml"">  
Custom Verification (Type: Map/Dict/Object | Accepts value: - | Optional)It lets you verify your website on multiple reputed services.Example:myWOT: ""ba8579f668r8w3g62503"" # verification key here is dummy
SEO (Type: Map/Dict/Object | Accepts value: - | Optional)It lets you customize SEO properties of the website/blog, to help you shine :grinning: It contains:Switch (Type: String | Accepts value: on/off | Optional | Default: “on”)A switch which lets you turn on all the good SEO meta tags.Twitter (Type: Map/Dict/Object | Accepts value: - | Optional)Info about your Twitter account, and presentation of blog posts on Twitter when they are shared. It contains:Card (Type: String | Accepts value: enable/disable | Optional | Default: “enable”)Optimizes the website/blog, when it is shared on Twitter.Handle (Type: String | Accepts value: Text | Optional | No default)It is Twitter handle of the website-wide author, without ‘@’.Facebook (Type: Map/Dict/Object | Accepts value: - | Optional)Info about your Facebook account, and presentation of blog posts on Facebook when they are shared. It contains:OpenGraph (Type: String | Accepts value: enable/disable | Optional | Default: “enable”)Optimizes the website/blog, when it is shared on Facebook.App ID (Type: String | Accepts value: Text | Optional | No default)Website/blog’s Facebook App ID (if any)JSON-LD (Type: String | Accepts value: enable/disable | Optional | Default: “enable”)Improves ability of search engines to better index and understand the website/blog. Helps in SEO optimization.Speed Mode (Type: String | Accepts value: enable/disable | Highly Recommended | Default: “disable”)Enabling “Speed Mode” would make the website/blog extremely fast and lightweight, providing a snappy experience to website/blog visitors. “Speed Mode” utilizes PostCSS via Hugo’s Asset Pipeline. Note that, “Speed Mode” works in production environment only. Disabling “Speed Mode” removes dependency on Hugo Extended version and Node.js modules. Since many Hugo users do not have Hugo’s extended version, this option is disabled by default.Example:seo:
  switch: ""on""
  twitter:
    card: ""enable""
    handle: ""Great""
  facebook:
    openGraph: ""enable""
    appID: ""170405085280305"" # it is just for illustration purpose
  jsonLD: ""enable""
  speedMode: ""enable""
Cookie Consent (Type: Map/Dict/Object | Accepts value: - | Optional)It allows you to present a ‘Cookie Consent’ dialog to your users, to help them decide their privacy settings, when they browse your website. It contains:Switch (Type: String | Accepts value: on/off | Optional | Default: “off”)It lets you choose whether you want to show a Cookie Consent dialog to your users.Type (Type: String | Accepts value: opt-in/opt-out/none | Required | No default)In ‘opt-in’, website doesn’t employ cookies to user’s computer unless user gives consent to opt in. In ‘opt-out’, cookies are employed on user’s computer and the user is given the choice to opt out of cookies. In ’none’, cookies are employed on the user’s computer and user is not given a choice in that regard. We recommend to refrain from using none, unless you have zero customers from EU or similar countries with privacy protecting laws.Revokable (Type: Boolean | Accepts value: true/false | Optional | Default: true)When set to true, a button to revoke cookie consent appears when the user hover in bottom area of the screen, regardless whether user’s country requires revertible cookie consent.Content (Type: Map/Dict/Object | Accepts value: - | Required)It lets you customize the content you wish to show on Cookie Consent dialog. It contains:Message (Type: String | Accepts value: Text | Required | No default)It lets you customize the message to be shown in Cookie Consent. You can even use <a>-anchor tags to hyperlink words.Dismiss (Type: String | Accepts value: Text | Optional | Default: “Close”)It’s the text on the button that dismisses the popup/banner.Link Text (Type: String | Accepts value: Text | Optional | Default: “Learn more”)This text appears after the message and is hyperlinked to linkURL.Link URL (Type: String | Accepts value: Text | Required | No default)It’s the URL of location where user should be directed when they click “Learn more”.Allow (Type: String | Accepts value: Text | Optional |Default: “Allow”)It is the text on the button that allows cookies.Deny (Type: String | Accepts value: Text | Optional | Default: “Decline”)It is the text on the button that denies cookies.Policy (Type: String | Accepts value: Text | Optional | Default: “Cookie Consent”)It is the text that appears on the button, when user’s country requires revocable cookie consent.Some recommended values: 🍪, 🔒, 🔓, 🔏Example:cookieConsent: # we use OSANO Cookie Consent solution
  switch: ""on""
  type: ""opt-in""
  revokable: true
  content: # change the links below to appropriate url addresses
    message: |
      By continuing to use this website, you agree to our <a href='/legal/privacy-policy/'>Privacy Policy</a>, <a href='/legal/cookie-policy/'>Cookie Policy</a> and our <a href='/legal/terms-and-conditions/'>Terms and Conditions</a> for your use of this website.      
    dismiss: ""Close""
    linkText: ""Learn more""
    linkURL: ""/legal/privacy-policy/""
    allow: ""Allow""
    deny: ""Decline""
    policy: ""Cookie Consent""
User Experience (Type: Map/Dict/Object | Accepts value: - | Optional)It contains settings that let’s you customize your user’s website/blog experience.Google Analytics (Type: Map/Dict/Object | Accepts value: - | Optional)Customize your Google AnalyticsScript (Type: Integer | Accepts value: Number | Optional | Default: 0)Accepts the following values:0: Default script by Google via Hugo’s internal template. Works well with Cookie Consent solution, since it respects window['ga-disable-GA_MEASUREMENT_ID'] = true; to disable Google Analytics measurement. See this. Has a higher chance of being blocked by AdBlockers. Only sync version of internal template works with gtag4;1: minimal-analytics by James Hill. May or may not work well with Cookie Consent solution.2: minimal-analytics-4 by Dariusz Więckiewicz. May or may not work well with Cookie Consent solution. Make sure you set Data Stream data retention to 14 months from default 2 and link your GA4 web data stream with Google Search Console.Refer this for a good implementation discussionLoading Method (Type: String | Accepts value: Text | Optional | Default: “sync”)It helps you customize whether Google Analytics JavaScript file loads ‘Synchronously’ or ‘Asynchronously’. Available only if script is set to “0”. Latest Google Analytics Tag 4 only works with sync.Post Images (Type: Map/Dict/Object | Accepts value: - | Optional)Customize behavior for your posts’ imagesThumbnail (Type: Map/Dict/Object | Accepts value: String | Optional | Default: “200px”)Customizations in relation to how thumbnails of Post Images appear.Size (Type: String | Accepts value: String | Optional | Default: “200px”)Integer: Size of post images when they appear as thumbnails in lists, for example, on landing page.String: Unit of size. For example, “em”, “rem”, “px”.Gets overridden by thumbnail' -> 'size specified in a page’s front-matter.Borders (Type: String | Accepts value: rounded/square/pill/circle | Optional | Default: “rounded”)Choose the border radius of posts’ images when they appear as thumbnails.Gets overridden by thumbnail' -> 'borders specified in a page’s front-matter.Position (Type: String | Accepts value: right/left/none | Optional | Default: “left”)Position of a post’s image, when it appears as a thumbnail in a list (say) on landing page. Regardless of “right” or “left”, it looks the same on mobile-view.Infinite Scrolling (Type: Boolean | Accepts value: true/false | Optional | Default: false)Allows to set Infinite Scrolling on the Home (Landing) Page.Note: Requires Paginate value of at least 1. Paginate can be set in config.yaml (default is 10).Example:userExperience:
  googleAnalytics:
    script: 0
    loading: ""sync""
  postImages:
    thumbnail:
      size: ""200px""
      borders: ""rounded""
      position: ""left""
  infiniteScroll: false
Main Sections (Type: Array | Accepts value: Section names | Highly Recommended)This is Hugo’s native feature that let’s you specify which sections are to be treated as Main Sections. A very general and common example of Main Section is post or posts section (hence they are often called Blog Directories). If nothing is specified, the section with the highest number of content files is treated as a Main Section. For more info, see the Hugo docs.Example:mainSections: [""post""]
Page Parameters ‘Page parameters’ relate to the particular content file in whose front-matter they are defined. These options can be set from a page front-matter or via archetypes (i.e. when you create a new content file via hugo new command).Title (Type: String | Accepts value: Text | Required)It is the title of the current page/post you are writing.Example:title: ""A post that takes you into space""
Description (Type: String | Accepts value: Text | Required)It is the description of the current page/post. Recommended character length: 50 to 160Example:description: ""A short yet descriptive text that relates to this post.""
Date (Type: String | Accepts value: Date | Required)It is the date on which current page/post is published.Example:date: ""2021-04-26"" # YYYY-MM-DD
Last Modified (Type: String | Accepts value: Date | Required)It is the date on which current post was last modified.Example:lastmod: ""2021-04-29""
Tags/Categories/Custom-Taxonomy (Type: Array/String | Accepts value: Text | Recommended)You can manage and organize you posts based on tags, categories or any other custom taxonomy.Example:tags: [""great post"", ""awesome""] # multiple elements
categories: ""category"" # single element
Image (Type: Map/Dict/Object | Accepts value: - | Recommended)Specify an image for a post/pageSource (Type: String | Accepts value: Path to Image | Required)You can specify path (relative to root) to an image dedicated to current post. This image is also used to optimize the display of content when shared on social media.Example:The right way:
1. ""/my-awesome-image.jpg""
2. ""/images/my-awesome-image.jpg""

The wrong way:
1. ""my-awesome-image.jpg""
2. ""images/my-awesome-image.jpg""
Alternative Text (Type: String | Accepts value: Text | Recommended)This text is shown when for some reason an image is unable to load. It also helps in SEO and is especially helpful for screen readers.Thumbnail (Type: Map/Dict/Object | Accepts value: - | Optional )Customizations in relation to how thumbnails of Post Images appear.Size (Type: String | Accepts value: String | Optional | Default: “200px”)Integer: Size of post image when it appears as thumbnail in lists, for example, on landing page.String: Unit of size. For example, “em”, “rem”, “px”.Overrides the setting set (if any) in userExperience -> postImages -> thumbnail' -> 'size in config.yaml file present at root of your website.Borders (Type: String | Accepts value: rounded/square/pill/circle | Optional | Default: “rounded”)Choose the border radius of post’s image when they appear as thumbnails.Overrides the setting set (if any) in userExperience -> postImages -> thumbnail' -> 'borders in config.yaml file present at root of your website.Position (Type: String | Accepts value: right/left/none | Optional | Default: “left”)Position of a post’s image, when it appears as a thumbnail in a list (say) on landing page. Regardless of “right” or “left”, it looks the same on mobile-view.
Overrides site.Params.userExperience.postImages.thumbnail.position.Note that this section in front matter only allows to set image assigned to the blog post. To include an image in your post, it is recommended to use shortcodes which offers a simple way to include images in a post along with a level of customizability.Example:image:
  src: ""/images/post-1.png""
  alt: ""Alternative text""
  thumbnail:
    size: ""200px""
    borders: ""rounded""
    position: ""left""
Author (Type: String | Accepts value: Text | Recommended)It is the name of the author of the current post.Example:author: ""Great Author""
Author Twitter Handle (Type: String | Accepts value: Text | Recommended)It is the Twitter handle of the author of the current post, without ‘@’. This option is theme specific.Example:author_twitter: ""Gr8Authr"" # this is just an example
Draft (Type: Boolean | Accepts value: true/false | Optional)If it is set to true, the content will not be rendered unless the --buildDrafts flag is passed to the hugo command.Example:draft: true
Table of Contents (Type: boolean/String | Accepts value: true/false | Optional)If set to false, Table of Content for current post will not be rendered.Example:toc: false
Aliases (Type: Array | Accepts value: Relative URL | Optional)It stores other URLs (in relative form) - usually older URLs for current post - which you would like to redirect to current post.Example:aliases: [""/posts/my-original-url/"", ""/2010/01/01/even-earlier-url.html""]
URL (Type: String | Accepts value: Relative URL | Optional)If you want to specify a custom URL for this post other than the one automatically generated by hugo based on content directory structure, you can specify it in this parameter.Example:url: ""/custom/url/""
Shortcodes Shortcodes is a feature in Hugo that allows to insert text after performing prespecified complex tasks when writing posts. Let’s take example of figure shortcode provided by Hugo. When writing a post, say you want to include an image. In this case, you can simply include the shortcode figure at the place in post where you want the image to be included. Example syntax of a typical post file located in content directory/folder,title: ""Title of Post""
.
.
other frontmatter here
.
.
---

This is the sample post and below is the image that we are inserting:
{{< figure class=""max-width"" src=""/path/to/image/relative/to/root/"" alt=""Text to show when image is unable to load for some reason"" >}}

Rest of the post...
Note that this is just an example, and figure shortcode comes with more options. Vibrant Shadows comes with a few of its own shortcodes along with the Hugo’s default shortcodes, to make life a little easier.Hugo’s default Shortcodes:figure (Used to include image in a post)Options:class (Type: String | Accepts value: all bootstrap classes | Optional)Takes all bootstrap classes as values. However, it is recommended to use only for width/height setting and margin adjustment by using the bootstrap classes.Width: mw-100, w-25, w-50, w-75, w-100,Height: mh-100, h-25, h-50, h-75, h-100.src (Type: String | Accepts value: Relative URL | Required)The Relative or Absolute URL to image under consideration. Make sure that Relative URL starts with / and is written relative to root of the website.alt (Type: String | Accepts value: Any text | Optional)Text to show when image is unable to load for some reason. In absence of alternate text, caption is used as a fall-back.link (Type: String | Accepts value: Absolute URL | Optional)URL of hyperlink for the image, if so desired.target (Type: String | Accepts value: _blank/_self/_parent/_top | Optional)Optional target attribute for the URL if link parameter is set. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#targetrel (Type: String | Accepts value: _blank | Optional)Optional rel attribute for the URL if link parameter is set. See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel for allowed values (refer <a> only).title (Type: String | Accepts value: Any text | Optional)Title to the caption of the image. Caption appear below the image.caption (Type: String | Accepts value: Any text | Optional)Caption text for the image. Caption appear below the image.height (Type: Integer | Accepts value: pixels | Optional)Height attribute of the image.width (Type: Integer | Accepts value: pixels | Optional)Width attribute of the image.loading (Type: String | Accepts value: eager/lazy | Optional)Loading attribute of the image.eager: Default. Loads an image immediatelylazy: Defer loading of images until some conditions are met. See https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading#loading_attributeattr (Type: String | Accepts value: Any text | Optional)Image attribution text. Markdown within the value of attr will be rendered.attrlink (Type: String | Accepts value: Absolute URL | Optional)If the attribution text needs to be hyperlinked, URL of the destination.Example usage,{{< figure class=""max-width"" src=""/images/my-flower-pot.png"" alt=""My Flower Pot"" link=""https://examplewebsite.com/flower-pots-for-sale/"" title=""High Quality Flower Pot"" caption=""Flower Pot with highest quality Lily and Rose flowers, and black soil pot. Might prove to be the perfect gift!"" attr=""image by my wife"" attrlink=""https://examplesite.com/my-wife-photography/"" >}}
See https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes for a list of all shortcodes provided by HugoExample config.yaml # this configuration file shows all the configuration options supported by 'Vibrant Shadows' theme by Softorage, with explaining comments.

baseURL: ""https://example.com/"" # url address of the website | required
title: ""ExampleBlog"" # title of the site; usually same as brand name | required
# author: ""The Great Authors"" # we won't be using site.Authors till this parameter is finalised. see: https://github.com/gohugoio/hugo/issues/3088
copyright: ""Copyright &#169; 2020 ExampleBlog. All rights reserved."" # should match 'brand -> name', and 'contentLicense' under params below; used in default rss template: https://gohugo.io/templates/rss/#configure-rss | optional
languageCode: ""en-us"" # recommended | no default
theme: ""HugoTheme-VibrantShadows""
# googleAnalytics: ""G-123456789-0"" # Respecting your preference from 'privacy', and 'params' -> 'user_experience' below, if you set this value, Google Analytics code will be included. Google Analytics included only when serving the website on 'production' environment (i.e. website built with `hugo` command and not `hugo serve`)
# disqusShortname: ""yourdiscussshortname"" # Respecting your preference from 'privacy', if you set this value, Disqus comments code will be included at the end of the blog posts. Disqus comments are shown only when serving the website on 'production' environment (i.e. website built with `hugo` command and not `hugo serve`)

# prevent build failures when using Hugo's Instagram shortcode due to deprecated Instagram API.
# See https://github.com/gohugoio/hugo/issues/7228#issuecomment-714490456
ignoreErrors: [""error-remote-getjson"", ""error-missing-instagram-accesstoken""]

# taxonomies as per Hugo's taxonomy feature
taxonomies:
  tag: ""tags""
  category: ""categories""
  series: ""series""

# pagination | required for infinite scrolling. See params -> userExperience -> infiniteScroll
paginate: 10 # number of items per page | a number of 1 or more required for infinite scrolling | default: 10
paginatePath: ""posts"" # allows you to set a custom path for your pagination pages | default: ""page""

# menu as per Hugo's menu feature
menu:
  main:
    - identifier: ""about"" # different for all menu entries, useful especially when menu name coincides
      name: ""About"" # shown on website/blog
      url: ""/about/"" # user is taken to this url when user clicks on menu item
      weight: 10 # used to sort menu items by weight
    - identifier: ""sub-about""
      name: ""Sub About""
      url: ""/sub-about/""
      parent: ""about""
      weight: 1

# with this, Hugo notes some stats about website, which are then used by CSS processors, like PostCSS
build:
  writeStats: true
  
# All privacy settings: https://gohugo.io/about/hugo-and-gdpr/#all-privacy-settings
# Explanations to all privacy settings: https://gohugo.io/about/hugo-and-gdpr/#the-privacy-settings-explained
privacy:
  disqus:
    disable: false
  googleAnalytics:
    anonymizeIP: true # 'true' makes it so the users' IP addresses are anonymized within Google Analytics
    disable: false
    respectDoNotTrack: false # 'true' makes the GA templates respect the “Do Not Track” HTTP header
    useSessionStorage: false # 'true' disables the use of Cookies and use Session Storage to Store the GA Client ID

# 
enableRobotsTXT: true # optional, allows to create a robots.txt file, which helps in SEO
# sitemap, and RSS are generated automatically

enableGitInfo: true # optional, allows us to use '.GitInfo' object. '.GitInfo' object allows us to leverage info from git for use in Hugo
# Only if 'enableGitInfo' is set to 'true'
frontmatter:
  date: [""date"", ""publishDate"", ""lastmod"", "":git""] # adding ':git' at the end (of default format) makes the atom/rss feed to fetch dates from git, once enableGitInfo is set to true in 'config' file

enableEmoji: true # optional, allows to use emojis in content files

# Allow HTML in markdown to be rendered
markup:
  goldmark:
    renderer:
      unsafe: true

# Here starts our customization
params:
  social: 
    profiles: # social platforms you are present on. see supported ones here | highly recommended
      facebook: ""#""
      twitter: ""#""
      github: ""#""
      gitlab: ""#""
      steam: ""#""
      instagram: ""#""
      youtube: ""#""
      pinterest: ""#""
      linkedin: ""#""
      reddit: ""#""
      flickr: ""#""
      deviantart: ""#""
      vk: ""#""
      mastodon: ""#""
      bandcamp: ""#""
      tumblr: ""#""
      medium: ""#""
      wikipedia: ""#""
      telegram: ""#""
      # coming soon:
      paypal: ""#""
      slack: ""#""
      twitch: ""#""
      stackoverflow: ""#""
      shutterstock: ""#""
      soundcloud: ""#""
      codepen: ""#""
    share: [""facebook"", ""twitter"", ""linkedin"", ""telegram"", ""whatsapp"", ""reddit"", ""email""] # accepts array of values: ""facebook"", ""twitter"", ""linkedin"", ""whatsapp"", ""reddit"", ""email"". just type the name of those you want you articles to be able to be shared on
  meta:
    author: ""The Great Authors"" # website-wide author | required
    footerMessage: ""Awesome footer message"" # text (HTML supported) shown in footer above footer links | optional
    tagline: ""A Really Catchy Tagline"" # shown in website title on homepage and also used in seo | required
    description: ""A really great description!"" # should include brand name | character length: 50 to 160 characters
    contentLicense: ""CC-BY-SA-3.0"" # cc-by-3.0, etc or 'All right reserved.' should also be same as the one in copyright above
    titleSeparator: "" | "" # used in website/blog title, to separate (say) page title from website/blog title | default: "" | ""
    attribution: ""enable"" # attribute Hugo team for awesome software and Softorage for great theme | default: ""enable""
  brand:
    name: ""ExampleBlog"" # brand name (Samy's blog), usually just one word that is name of the brand | required | no default
    logo_500px: ""/assets/favicon/android-chrome-512x512.png"" # path (preferably relative path) to brand's good resolution logo | required | no default
    logo_32px: ""/assets/favicon/favicon-32x32.png"" # will be shown on navbar as is | required | no default
    color: ""#6d19fc"" # color to be shown for brand name on navbar on scroll, make sure it's in contrast with nav | required | default: ""#7d1fa5""
    navbar: [""logo"", ""name""] # accepts array of values: ""logo"", ""name"" | this configuration shows brand 'logo' & brand 'name' on navbar | optional | default: [""logo"", ""name""]
  theme: # optional
    light:
      nav: ""#ffffff"" # navbar's background color | optional | default: ""#ffffff""
      antinav: ""#000000"" # a color in good contrast to nav | optional | default: ""#000000""
      mat: ""#f9f9f9"" # background color forcards (not of cards) | optional | default: ""#f9f9f9""
      clr1: ""#7d1fa5"" # color-1 of gradient | optional | default: ""#7d1fa5""
      clr2: ""#6d19fc"" # color-2 of gradient, recommended to be in contrast with nav | optional | default: ""#6d19fc""
      #borders: ""rounded"" # accepts value: rounded/square | what kind of borders do you like for elements, like buttons | default: ""rounded""
      gradientDirection:
        background: ""ltr"" # accepts value: ltr/rtl | ltr: left to right; rtl: right to left | optional | default: ""ltr""
        text: ""ltr"" # accepts value: ltr/rtl | ltr: left to right; rtl: right to left | optional | default: ""ltr""
        button: ""ltr"" # accepts value: ltr/rtl | ltr: left to right; rtl: right to left | optional | default: ""ltr""
    dark: # default
      default: true
      nav: ""#212121""
      antinav: ""#cccccc""
      mat: ""#121212""
      clr1: ""#7d1fa5""
      clr2: ""#6d19fc""
      gradientDirection:
        background: ""ltr""
        text: ""ltr""
        button: ""ltr""
    toggle:
      switch: true
      allowFOIT: false
      caption:
        light: [""icon"", ""fa-sun""]
        dark: [""icon"", ""fa-moon""]
  borders: # accepts value: rounded/square/pill/circle | specify what kind of borders do you like for elements, like buttons, cards | default: ""rounded""
    buttons: ""rounded""
    cards: ""rounded""
    # preformatted-text: """" not adding border customization to pre tag for now
  backgImage:
    landingPage: ""/neven-krcmarek-V4EOZj7g1gw-unsplash.jpg"" # path to background image for hero section on landing page. if specified, background image will be applied.
    post: ""enable"" # accepts value: enable/disable | if enabled, image set in front-matter will be shown as background image for hero section of the post | default: ""enable""
  position: # optional
    social:
      profiles: ""footer"" # accepts value: navbar/footer | may use 'navbar' if number of items in main menu and social profiles are minimal, otherwise 'footer' is recommended | default: ""footer""
      share: ""bottom"" # top/bottom | no default
    navbarMenu: ""right"" # accepts value: right/left | decides the position of main menu on navbar | default: ""right""
    postMeta: # it lets you customize *which('reading time', 'words count', 'author', 'last updated on', 'tags')* elements from post's meta should be displayed, *where(summary/content)* and *how(top/bottom)*
      readingTime:
        summary: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
        content: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
      wordCount:
        summary: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
        content: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
      author:
        summary: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
        content: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
      lastUpdated:
        summary: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
        content: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
      tags:
        summary: ""top"" # values: top/bottom | simply omit if don't want to show | optional | no default
        content: ""bottom"" # values: top/bottom | simply omit if don't want to show | optional | default: ""bottom""
  font:
    general:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    heading: 
      list: [""h1""] # accepts array of values: ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""h6"" | default: [""h1""]
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    description:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    brand:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    footer:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    copyright:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
    postMeta:
      family: ""Lato"" # must match to a css font-family | default: ""Lato""
      #cdnLink: """" # a link tag for font other than Lato and Roboto | recommended
  faviconTags: | # just copy paste all the tags here (Hugo templating supported). Also, ensure that you have ""purpose"": ""maskable"" set for one icon in your site.webmanifest file (helps for pwa). Use https://realfavicongenerator.net, it's great
    <link rel=""apple-touch-icon"" sizes=""180x180"" href=""{{ site.BaseURL }}/assets/favicon/apple-touch-icon.png"">
    <link rel=""icon"" type=""image/png"" sizes=""32x32"" href=""{{ site.BaseURL }}/assets/favicon/favicon-32x32.png"">
    <link rel=""icon"" type=""image/png"" sizes=""16x16"" href=""{{ site.BaseURL }}/assets/favicon/favicon-16x16.png"">
    <link rel=""manifest"" href=""{{ site.BaseURL }}/assets/favicon/site.webmanifest"">
    <link rel=""mask-icon"" href=""{{ site.BaseURL }}/assets/favicon/safari-pinned-tab.svg"" color=""#7817c4"">
    <link rel=""icon"" href=""{{ site.BaseURL }}/assets/favicon/favicon.ico"" type=""image/x-icon"">
    <link rel=""shortcut icon"" href=""{{ site.BaseURL }}/assets/favicon/favicon.ico"" type=""image/x-icon"">
    <meta name=""apple-mobile-web-app-title"" content=""Vibrant Shadows Theme"">
    <meta name=""application-name"" content=""Vibrant Shadows Theme"">
    <meta name=""msapplication-TileColor"" content=""#ffffff"">
    <meta name=""theme-color"" content=""#ffffff"">
  seo:
    switch: ""on"" # accepts value: on/off | decide whether you want all the good seo meta tags | default: on
    twitter:
      card: ""enable"" # accepts value: enable/disable | good for seo | default: enable
      handle: ""Great"" #twitter handle website-wide author, without @
    facebook:
      openGraph: ""enable"" # accepts value: enable/disable | good for seo | default: enable
      #appID: """" # facebook App ID
    jsonLD: ""enable"" # accepts value: enable/disable | good for seo | default: enable
    speedMode: ""disable"" # accepts value: enable/disable | enabling ""Speed Mode"" would make the website/blog extremely fast and lightweight, providing a snappy experience to website/blog visitors. ""Speed Mode"" utilises *PostCSS* via *Hugo's Asset Pipeline*. note that, ""Speed Mode"" works in *production environment* only. since many Hugo users do not have Hugo's extended version, this option is disabled by default. | default: disable
  cookieConsent: # we use OSANO Cookie Consent solution
    switch: ""off"" # accepts: on/off | decide whether you want to show a cookie consent dialog to your users | default: ""off""
    type: ""opt-in"" # accepts: opt-in/opt-out/none | In opt-in, website doesn't employ cookies to user's computer unless user gives cosent to opt in. In opt-out, cookies are employed on user's computer and the user is given the choice to opt out of cookies. In none, cookies are employed on the user's computer and user is not given a choice in that regard. Refrain from using none, unless you have zero customers from EU or similar countries with privacy protecting laws. | no default
    revokable: true # a button to revoke cookie consent appears when user hover in bottom area of the screen, regardless whether user's country requires revertable cookie consent | default: true
    content: # change the links below to appropriate url addresses
      message: | # no default
        By continuing to use this website, you agree to our <a href='/legal/privacy-policy/'>Privacy Policy</a>, <a href='/legal/cookie-policy/'>Cookie Policy</a> and our <a href='/legal/terms-and-conditions/'>Terms and Conditions</a> for your use of this website.
      dismiss: ""Close"" # text on the button that dismisses the popup/banner | default: ""Close""
      linkText: ""Learn more"" # this text appears after the message and is hyperlinked | default: ""Learn more""
      linkURL: ""/legal/privacy-policy/"" # url of location where user should be directed when they click ""Learn more"".
      allow: ""Allow"" # text on the button that allows cookies | default: ""Allow""
      deny: ""Decline"" # text on the button that denies cookies | default: ""Decline""
      policy: ""Cookie Consent"" # text that appears on the button, when user's country requires revokable cookie consent | default: ""Cookie Consent""
  userExperience:
    googleAnalytics: # customize your Google Analytics
      script: 0 # accepts value: 0/1/2 | 0: Default script by Google via Hugo's internal template; 1: minimal-analytics by James Hill; 2: minimal-analytics-4 by Dariusz Więckiewicz | optional | default: 0
      loading: ""sync"" # accepts value: sync/async | determines whether Google Analytics JavaScript file loads 'Synchronously' or 'Asynchronously' | optional | default: ""sync""
    postImages: # customize behaviour for your posts' images
      thumbnail:
        size: ""200px"" # accepts value: string | integer: size of post images when they appear as thumbnails; string: unit of size | default: ""200px""
        borders: ""rounded"" # accepts value: rounded/square/pill/circle | choose the border radius of posts' images when they appear as thumbnails | optional | default: ""rounded""
        position: ""left"" # accepts value: right/left/none | position of a post's image, when it appears as a thumbnail in a list (say) on landing page. regardless of ""right"" or ""left"", it looks the same on mobile-view. | optional | default: ""left""
    infiniteScroll: false # accepts value: true/false | setting it to true allows for infinite scrolling on home page. requires value of paginate to be 1 or more set in config.yaml (default is 10) | optional | default: false
  mainSections: [""post""] # required, https://gohugo.io/functions/where/#mainsections
  #customVerification:
    #myWOT: ""ba8579f668r8w3g62503"" # content for meta tag to verify your website on 'Web Of Trust'
Built with HugoTwitter BootstrapFont AwesomeContributing Anyone contributing, benefits equally from others’ contributions.If you have a tip, feedback or issues, please open an issue here.If you think ‘Vibrant Shadows’ theme could benefit from some features, or there is something that needs to be fixed, please open an issue at least 2-3 days prior to opening a PR. If you think there is something that needs to be fixed and which isn’t of much significance (say a typo), you may open a PR directly.If you like our work & find it useful, please consider to star on GitHub. We are on Facebook, Twitter and Instagram, you can follow us there too! It really motivates us!License The MIT License (MIT)

Copyright (c) 2020 Softorage

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the ""Software""), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
License can be viewed here.See AlsoBeautiful HugoBlogRaBootstrap Theme for Personal Blog and DocumentationsBootstrap-BPHB Starter Theme Template",NA
Simon Bengtsson,32,2023-08-04,GPLv3,"Minimal, Personal, Responsive",Notrack,A libre hugo personal webpage theme without reliance on third parties and no tracking.,https://github.com/gevhaz/hugo-theme-notrack,NA,"NotrackAn original, minimal theme with a focus on self-sufficiency and
decentralization. By default, Notrack does not rely on any third parties
to serve your website. The only exception is Disqus comments, which are
not used by default (see Adding
comments below).Table of contentsNotrackTable of contentsScreenshotExample site configShortcodesUser CSSNavigation barHow to add a page to the navigation barHow to add a page to drop down menuHow tosHow to create a home pageHow to create a blogAdding commentsHow to create a galleryHow to create a resumeHow to display social linksOther projects used in this themeContributionScreenshotTry it out yourselfDependencies You will need the extended edition of Hugo in order to use this theme. This is
the edition Hugo’s developers recommend for most users. You probably already
have it, but you can double check with:$ hugo version
hugo v0.115.4+extended linux/amd64 BuildDate=unknown
Note the “+extended” after the version number. Information about the standard
and extended versions may be found within Hugo’s installation
instructions.Running the example site on localhost If you want to try out the theme with an example page, do the following:$ git clone https://github.com/gevhaz/hugo-theme-notrack
$ mv hugo-theme-notrack notrack
$ cd notrack/exampleSite/
$ hugo server -D --themesDir ../..
You can now see the example website in your browser and interact with it. Hugo
will print instructions for what address to use. Usually it is http://localhost:1313/.Example site configHere is a working config.yaml:baseURL = ""http://example.org/""
languageCode = ""en-us""
title = ""Lawyer Hugo Grotius""
theme = ""notrack""
newContentEditor = ""nvim""
mainSections = [""blog""]
# disqusShortname = ""example""
paginate = 4

[params]
  author = ""Hugo de Groot""
  siteHeading = ""Hugo Grotius"" # defaults to author
  favicon = ""hugo_grotius.png"" # Adds a small icon next to the page title in a tab
  showBlogLatest = true
  mainSections = [""blog""]
  showTaxonomyLinks = false
  nBlogLatest = 4 # number of blog post om the home page
  blogLatestHeading = ""My writing""
  footer = ""This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.""

  [params.social]
    github = ""example""
    linkedin = ""example""
    email = ""example@example.com""
    mastodon = ""example""
    medium = ""example""
    keybase = ""example""

[taxonomies]
  year = ""year""
  month = ""month""
  tags = ""tags""
  categories = ""categories""

[permalinks]
  blog = ""/blog/:year/:month/:slug""
ShortcodesCategoryShortcodeDescriptionContact infocontact-boxDisplays contact info set in params.socialsocialDisplays contact info set in params.socialPhoto Gallerygallery-categoryContainer for gallery-photo shortcodesgallery-modalHTML to allow for full page view of gallery photosgallery-photoInclude a photo in a gallerygallery-scriptScript to allow for full page view of gallery photosGeneralimageImage for use in any page. See example in How to create a blogvideoSimilar to an ordinary  html tag but with a CSS class to make it look good in postsrawhtmlFor including raw html without the global unsafe option for GoldmarkResumecontainerContainer for resume shortcodesresume-entryOne entry in a resume (e.g. a university degree)resume-sectionOne section in resume (e.g. “Education”)resume-subcategoryCreates a heading within a section of the resumeMost of the shortcodes are explained in more detail in their respective
sections below. I explain the other two here.rawhtml can be used like this:{{< rawhtml >}}<p>A paragraph</p>{{< /rawhtml >}}
This allows you to use html to create elements that you can’t create
with just markdown without allowing unsafe html in the site config.
I’m not a security expert, and there might be a good reason why unsafe HTML
is disabled by default. If you think this shortcode shouldn’t be part of
the theme, feel free to open an issue and say why.The video shortcode basically just creates a HTML <video> tag with a
class that I’ve added some styling for. Use it like this:{{< video src=""your_video.mp4"" type=""video/mp4"" preload=""auto"" >}}
Your video needs to be in the static folder or a subfolder of it such
as “video” (in which case you’d add the subfolder in the src
parameter.User CSS You can add your own CSS by creating a file assets/css/userstyles.css. The
theme will automatically pick it up.Navigation bar How to add a page to the navigation bar Add it to main menu in the front matter of the page:---
menu:
  main:
    title: ""Contact""
    weight: 100
---
Don’t use the site config to add menus because then the highlighting
of active tabs might not work (at least not if drop-down menus are involved).How to add a page to drop down menu Quick instruction: Set it’s parent parameter to one of the menus in
main.Instructions with example:Create the top-level menu in config.yaml or your equivalent. An
example where the top-level menu doesn’t correspond to a real page
(url is #) and is just there to hold the drop-down menu:menu:
  main:
  - identifier: ""about-me""
    name: ""About Me""
    url: ""#""
    weight: 50
If you want to add pages to an already existing menu item, you can skip this
step and just use that page as a parent in step 2.In the front matter of the page you want to add, put the following:menu:
  main:
    title: <What you want the name of the menu to be>
    parent: ""about-me""
    weight: <Lower numbers will appear higher up>
How tosHow to create a home page The first thing you will want to do is set up the home page of the website.
Create /content/_index.md (hugo new _index.md). This could contain a short
introduction of what is on the website or of yourself. A shortcode that can be
useful here is image, which adds an image with an optional frame. You can set
the width with the width option. Example usage:{{< image frame=""true"" width=""11em"" src=""/img/profile-picture.jpg""
alt=""Picture of me"" >}}
frame=""true"" adds a frame around the picture. You can also add a caption. See
further instructions in How to create a
blog.At this point you should also set the title for the web site, your name
and the text in the header, if you want it to be different from your
name. Example entries in config.yaml:title: ""My New Hugo Site""
params:
  author: ""John Doe""
  siteHeading: ""a header title""
If you don’t want to show the latest posts from your blog at the bottom
of the home page, set showBlogLatest to false in your site config.
You may also want to change the number of posts shown (default: 3) and
the heading above it (default “Latest from the blog”) In config.yaml, it
would look like this:params:
  showBlogLatest: true
  blogLatestHeading: ""Latests posts""
  nBlogLatest: 6
An alternative way to create the content for the homepage is to have a headless
bundle content/homepage. The content of the files in this directory will be
populate the the top of the homepage, like in the Hugo Basic Example.How to create a blog Add some posts with e.g. hugo new blog/post-1.md etc.hugo new blog/_index.md and create the blog menu item in the front
matter:---
menu:
  main:
    identifier: ""blog""
    name: ""Blog""
    weight: <lower number than your other menus for more leftward
    placement>
---
(Optional) Create a drop-down menu with links to tags, categories
and archive by creating pages in the style of hugo new tags/_index.md. It doesn’t need any content at all, just create a
front matter where you add it to the main menu with the identifier
of your blog menu entry as parent:---
menu:
  main:
    name: ""All Tags""
    parent: ""blog""
    weight: <lower number than your other menus for more upward
    placement>
---
In the case of archive, you may also need to set the layout to
archives in _index.md’s front matter: layout: archives.For those of you who do the third step, there is an option available to
remove the buttons with links to the archive (if you have an archives
page, see step 3), tags and category pages from the top of the blog list
page. Just set the following in your site config:params:
  showTaxonomyLinks: false
Menus in Hugo are a mess to program for a theme but this should work.
It’s the method that gives you, the user, the most freedom to choose the
structure of your content folder. There are other
methods
for theme developers but they would force the user to put all posts in a
folder with a specific name.If you don’t want a drop-down menu for listing categories or tags, just
skip step 3. You can still disable the links to the taxonomy pages. Your
readers can list all posts from a specific category or a tag by clicking
on that category or tag in any post instead, and you can link to
yourpage.com/categories from other places too.You can add images just as for the home page. Available options are those of the
built in figure shortcode of Hugo, and additionally:Parameter nameAllowed Valuesfloatright/leftframetrue/false/leave outwidetrue/falsewidthe.g. 10em, 50%, 70pxheighte.g. 10em, 50%, 70pxA difference from the built in shortcode is that width and height are for the
outer <figure> element. This allows text to wrap around the picture if you set
the float parameter.You can also use Hugo’s built in short code
figure (an
example: {{< figure src=""/img/picture.jpg"" width=""100%"" >}})Adding comments This theme supports Disqus comments. It goes against the philosophy of
the theme in some sense because it relies on external resources but you
can enable it if you want.Disqus is implemented the default Hugo
way so just
add your Disqus Shortname in the site config and all blog posts will
have a comments section.How to create a gallery There are four shortcodes for creating a gallery:gallery-categorygallery-photogallery-modalgallery-scriptThe first two are used in combination to create the actual gallery. Do
something like the following in one of your pages:{{< gallery-category >}}
    {{< gallery-photo fn=""<filename of first picture>"" caption=""<your caption>"">}}
    {{< gallery-photo fn=""<filename of second picture>"" caption=""<your caption>"">}}
    {{< gallery-photo fn=""<filename of third picture>"" caption=""<your caption>"">}}
    {{< gallery-photo fn=""<filename of fourth picture>"" caption=""<your caption>"">}}
{{< /gallery-category >}}
The pictures should be under static/img/thumbnails in your project.If you want a modal to pop up with a zoomed in version, add the other
two shortcodes at the bottom of your page:{{< gallery-modal >}}
{{< gallery-script >}}
And place corresponding full-size images under static/img/fullsize.
The file names need to be the same as for the thumbnails.Thumbnails should of course be small so that your page loads fast and
fullsize should be large enough that they don’t look pixelated when
covering the full space of a web browser. One way to resize images is
with (graphicsmagick)[http://www.graphicsmagick.org/]: gm mogrify -resize 1920x1920 *.jpg, which will resize all images in the current
folder to a maximum width/height of 1920 pixels (while maintaining the
aspect ratio).How to create a resume There are some shortcodes that can help you create a resume. These are:containerresume-sectionresume-categoryresume-entryContainer just creates aelement with a specific class.
resume-section needs a title which will be shown to the left of it’s
content (if it can fit on the screen, otherwise it’s on top). Within
this, you put one or more resume-entry shortcodes. This
shortcode takes the three parameters what, where and when (see
example usage below). It also takes raw HTML within the shortcode tags.
There is styling for <p>s, links, and unordered and ordered lists.
Apart from that, site-wide CSS is used. Example usage:{{< container >}}
    {{< resume-section title=""About Me"" >}}
        {{< resume-entry >}}
            <p>
            Some info about you.
            </p>
        {{< /resume-entry >}}
    {{< /resume-section >}}

    {{< resume-section title=""Education"" >}}
        {{< resume-entry what=""Bachelor's program of Computer Science""
                         where=""Sidney University""
                         when=""2010–2013"">}}
            <ol>
                <li> Some comment on what skills you learned</li>
                <li> Some other comment </li>
            </ol>
        {{< /resume-entry >}}
    {{< /resume-section >}}
{{< /container >}}
A tip is that you can also use the resume-entry shortcode with
markdown. Just switch use % instead of < and make sure that your
markdown doesn’t have any white space in front of it (or all of it will
be interpreted as code):        {{% resume-entry what=""Bachelor's program of Computer Science""
                         where=""Sidney University""
                         when=""2010–2013"" %}}
* Some comment on what skills you learned
* Some other comment
        {{% /resume-entry %}}
How to display social links There is a shortcode for creating a framed area with links to your
profiles called contact-box. The thing it does is to put a frame with
links to your social media or other contact info on the rights side of the page, and, if you
want, some text on the left side of the box, outside the frame. Put this
text within the shortcode tags.You decide what social media to include in your site config under
social under params, like this:params:
  social:
    github: <your github username>
    email: <email address>
For all available social icons, see the data/notrack/social.yaml file. There
are 65 of them. Then, to display the links somewhere on your page, use either
{{< contact-box >}} or, for an alternative design, use {{< social >}}.
Here is a screenshot with contact-box to the right and social
at the bottom:For contact-box, there are three optional parameters, float, width
and height. This is similar to the image shortcode. Float makes
text wrap around the box (can be right or left), and the other two
naturally set the dimensions of the <div>, using inline CSS. The
parameters defaults to floating to the right, the width defaults to
12em, and the height defaults to auto.How to set a footerIf you want to add a footer to your webpage, you can use the footer
key in your configuration, e.g:params:
  footer: ""This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.""
This will add a HTMLelement with a element with your
text in it.Other projects used in this themeThe theme does not secretly download any resources from other websites
or CDNs. It does, however, make use of a few other projects. These are
included in the theme files, so you’ll homepage will serve the
resources.Some of the fonts under static/fonts are parts of the project GNU
FreeFont. They are licenced
under “GPLv3 or later”. Licenses are also supposed to be included in the
.woff files themselves. Some of the fonts are edited by me to take up
less space by including fewer characters.The monospace font in the same directory, used for code in the theme, is
Mononoki. It is licensed under
SIL OFL 1.1
(https://scripts.sil.org/OFL).The icons used for the contact-box and social shortcodes are from
Font Awesome project.
It’s licence is SIL OFL 1.1
(https://scripts.sil.org/OFL). A HTML
comment is included in the contact-box shortcode to show the licence and
source.For matching the icons from Font Awesome with names for various social
networking services, I use the
social.yml
file from the LoveIt theme, which
uses the MIT license. I modified it to use the Font Awesome Solid font
for the email icon, because the one in the original file was using the
Font Awesome Regular font, which it seems only Pro users of Font
Awesome can use. The solid one also
looks better.All of the images in the example site are in the public domain.ContributionI have tried to test the theme on mobile as well as different screen
sizes. If you find a situation where fonts don’t have an appropriate
size or something else looks off, such as styles completely missing or a
page that seems to have the wrong layout, please open an issue. It’s
difficult to support every possible scenario, but I will see what I can
do.If some change could be made or something could be added that is in line
with the style and philosophy of the theme, and it doesn’t break anything,
feel free to make a pull request.See AlsoAcademicAdritian Free Hugo ThemeAnatoleAnubisArchieBy the Hugo AuthorsFile an IssueGet HelpDiscuss Source Code@GoHugoIO@spf13@bepsays a.show-on-hover{opacity:0}a.show-on-hover:hover{opacity:1}Hugo Sponsors The Hugo logos are copyright © Steve Francia 2013–2023.The Hugo Gopher is based on an original work by Renée French.NewsDocsThemesShowcaseCommunityGitHubTagsAllBlog (199)Responsive (187)Minimal (143)Light (94)Personal (90)Dark (86)Multilingual (46)Portfolio (36)Bootstrap (33)Dark mode (29)Landing (29)Docs (26)Company (19)Gallery (17)Contact (15)Menu
Tags",NA
Heksagon,32,2023-03-26,MIT,"Archive, Blog, Company, Contact, Dark, Dark Mode, Landing, Light, Minimal, Personal, Portfolio, Responsive",Piko,Piko is a minimalistic and fast theme powered by Hugo for building a blog or portfolio.,https://github.com/heksagonnet/piko,https://piko-heksagon.netlify.app/,"Piko | Demo | Lighthouse report (100%)


""Piko is a minimalistic and fast theme powered by Hugo for building a blog or portfolio.""Features Powered by Hugo Static Site GeneratorStyled by Pico CSSSASS/SCSSIcons by FeatherIconsGoogle analyticsMath typesetting KaTexMinified CSS and JSPredefined Netlify settingsPre-configured Forestry CMSEasy contact form using FormSubmit.io or Fabform.ioSearch by Fuse.jsCookie Notice, GDPR CompliantReading time calculation for postsMultiple author and single author availableGoogle page speed optimized (100%)Open graph meta tagTwitter card meta tagQuick Deploy Have a free/paid version:Github AccountNetlify AccountThen click:And click next for all.Local Development If you wish to develop in your local environment, make sure you have installed:HugoGitThen open command prompt in your development folder.# Clone the repository
$ git clone https://github.com/heksagonnet/piko.git

# cd in the project directory
$ cd piko/exampleSite/

# Start local dev server
$ hugo server --themesDir ../..
Forestry.io CMS Setup Visit Forestry.io and login with GithubClick ‘Add Site’Choose Hugo and click NextChoose Github and click NextChoose the repo that you have kept the Piko theme, type ’exampleSite’ in Config Path and click ‘Check For Config’. When it says ‘Config file Found!’, click Next.Click all ‘Mark as done’.Replace the BASEURL in Configure to your domain name or custom domain name set in Netlify as above.Edit your website to your heart’s content!Hire me Besides developing stunning and blazing fast website templates, I also provide web design services. My speciality is in creating high-quality static websites based on Hugo.If you are interested to know more, do not hesitate to contact me here.See AlsoAcademicPaigeHugoplateLightbiHugo Liftoff",NA
Christian Engel,32,2022-08-25,MIT,Blog,chringel,chringel - Privacy focused theme for Hugo using TailwindCSS,https://github.com/chringel21/chringel-hugo-theme,https://chringel.dev,"chringel - Privacy focused theme for Hugo 🕵️Based on the awesome Hugo Starter Theme with Tailwind CSS. Go check it out! 🚀This theme was created with privacy in mind. By default, Disqus and Google Analytics are disabled, but you are free to use them, if you want. Instead this theme comes with configuration options for Isso and umami.Quickstart Prerequisites Make sure to install postcss-cli and autoprefixer globally in your environment, as Hugo Pipe’s PostCSS requires it. This is mentioned in the Hugo Docs.
npm install -g postcss-cli
npm install -g autoprefixer
Make sure to use a minimum Hugo version of v0.69.0 and above.Set the writeStats option in your Hugo config file, so that purging of CSS classes works in production. See /exampleSite/config.toml as a guideline.[build]
  writeStats = true
For a new site # Create a new site
hugo new site my-site

# Change into your themes folder
cd my-site/themes

# Clone this theme
git clone https://github.com/chringel21/chringel-hugo-theme.git

# Change into your new theme's folder and install dependencies
cd chringel && npm install
Don’t forget to edit your config.toml to use your new theme# config.toml
theme = ""chringel-hugo-theme""
Create a new post Included is an archetype to help you get started with creating content. It’s a post bundle. Create it with:hugo new --kind post-bundle post/my-post
Create a new note If you want to dive into the IndieWeb, chances are you want to create notes. They are like tweets/toots/status updates, or can contain comments, likes and reposts. Take a look at the archetype. I would recommend creating notes like this:hugo new notes/`date +'%Y/%m/%d/%H%M'`.md
This will create a note in your content folder at content/notes/YYYY/mm/dd/HHMM.md.Features 🌝 /🌚 Automatic dark mode based on device setting💬 Isso commenting server similar to Disqus (self-hosted)📈 umami - simple, easy to use, web analytics solution (self-hosted)🐦 SVG (social) icons powered by ionicons, currently Twitter, Github, Mastodon and RSS are available, but more can be downloaded with a simple shell script🧑‍💻 Syntax highlighting with copy function🔗 Deeplinks to headings in a blog post📄 Resume from JSON data based on JsonResume schema🕸 IndieWeb implementation of microformats2 h-card and h-entryFull config.toml example title = ""chringel - Privacy focused theme for Hugo""
languageCode = ""en-us""
baseurl = ""http://example.com/""
theme = ""chringel""
themesDir = ""../..""

author = ""Christian Engel""
copyright = ""Copyright © 2022, Christian Engel, all rights reserved.""

pluralizelisttitles = false
paginate = 10
enableEmoji = true

[Params]
    name = ""chringel""
    description = ""A privacy focused theme for Hugo""

    github_user = ""chringel21""
    github_repo = ""https://github.com/chringel21/chringel-hugo-theme""
    github_banner = true

    favicon = ""favicon.ico""

    # Title to be displayed in header
    headerTitle = 'chringel@dev: ~/$'
    # User image
    titleImage = 'images/index.png'
    # Copyright text displayed in footer
    footerCopyrightText = 'Christian Engel 2022'

# Favicons config
# Get your favicons from https://realfavicongenerator.net/
# Put them in the 'static' folder
[Params.favicons]
  appleTouchIcon = '/apple-touch-icon.png'
  icon32 = '/favicon-32x32.png'
  icon16 = '/favicon-16x16.png'
  manifest = '/site.webmanifest'
  maskIcon = '/safari-pinned-tab.svg'
  msApplicationTileColor = '#5bbad5'
  themeColor = '#ffffff'

# Isso configuration
# https://posativ.org/isso/docs/configuration/client/
[Params.isso]
  enabled = true
  data = ""https://comments.exmaple.com/""
  id = ""thread-id""
  css = true
  lang = ""en""
  replyToSelf = true
  requireAuthor = true
  requireEmail = false
  avatar = true
  avatar-bg = ""#f0f0f0""
  jsLocation = ""https://comments.example.com/js/embed.min.js""

# Umami configuration
# https://umami.is/docs/install
[Params.umami]
  enabled = true
  websiteId = ""1234567-abcd-efgh-0000-abcdefg1234""
  jsLocation = ""https://analytics.example.com/umami.js""

# microformat2 h-card configuration
# All params except 'fullName' are optional
[Params.hcard]
  avatar = ""/images/index.png""
  fullName = ""Christian Engel""
  pronouns = [ ""he"", ""him"" ]
  nickname = ""chringel""
  showLocation = true
  city = ""My Town""
  region = ""My State""
  country = ""My Country""

[Params.indieweb]
  authorizationEndpoint = ""https://indieauth.com/auth""
  tokenEndpoint = ""https://tokens.indieauth.com/token""

[Params.webmention]
  webmentionUrl = ""https://webmention.io""
  webmentionEndpoint = ""/webmention""
  webmentionPingbackEndpoint = ""/xmlrcp""

# Social icons to be displayed on the front page
[[menu.social]]
  name = ""GitHub""
  url = ""https://github.com/chringel21""

[[menu.social]]
  name = ""Twitter""
  url = ""https://twitter.com/DeEgge""

[[menu.social]]
  name = ""RSS""
  url = ""http://example.com/index.xml""

# To make purging of CSS classes work in production
[build]
  writeStats = true

# syntax highlight settings
[markup]
  [markup.highlight]
    style = ""dracula""
See AlsoArcanaBootstrap FreelancerCalligraphyDPSGDen",NA
Potato Dark,31,2023-05-14,MIT,"Blog, Light, Minimal, Responsive",Potato Dark,"Potato Dark is a modern, simple and beautiful Hugo theme",https://github.com/surajmandalcell/potato-dark,NA,"Potato Dark Potato Dark is a modern, simple and beautiful Hugo theme.Overview Support for tagsResponsive designSupport for Related ContentAnalytics with Google AnalyticsModern, Simple and beautiful designMedium’s Image Zoom（zoom.js)Social links （most social networks available）Use short code for Image Zoom.{{% zoom-img src=""/images/default.jpg"" %}}
Installation Inside the folder of your Hugo site run:$ git submodule add https://github.com/surajmandalcell/potato-dark themes/potato-dark
Or download it from the release branchThen,replace your config.toml with the one provided in themes/potato-dark/exampleSite/config.tomlUsage Use hugo’s -t potato-dark or –theme=potato-dark option with hugo commands. Example:$ hugo server -t potato-dark -w -D
Configuration You may specify following options in config.toml of your site to make use of
this theme’s features.For getting started with potato dark, copy the config.toml file from the exampleSite directory inside Potato’s repository to your site repository.$ cp themes/potato-dark/exampleSite/config.toml .
Now, you can start editing this file and add your own stuff!Contributing Pull requests, bug fixes and new features are welcome!To start just fork the repository and consider creating an seperate random branch so it get easier for me to test and review pushed code! thanks.License Open sourced under the MIT license.See AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Lucas David Vadilho,10,2023-11-25,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Personal, Responsive",heyo,"heyo is a responsive, minimalist and pretty theme built for hugo, based on Alexander Bilz Anatole.",https://github.com/LucasVadilho/heyo-hugo-theme,https://heyo-theme.oioipio.com/,"heyo heyo is a responsive, minimalist, and pretty theme built for hugo, based on Alexander Bilz’s Anatole.Features Cover imagesPretty visualizations in the sidebarTable of Contents in the sidebarCallout shortcodeBadges shortcode Dark theme Support for custom CSS and JSMultilingual support (english and brazilian portuguese, for now)Open Graph supportQuickstartTo try the exampleSite you just need to:git clone https://github.com/LucasVadilho/heyo-hugo-theme heyo
cd heyo/exampleSite && hugo server --themesDir ../..
Live previewYou can check a live preview at heyo-theme.oioipio.com. Also, scan the QR code if you want to preview on mobile!Credits & thanksAll the images in exampleSite were graciously provided by TD Vadilho, you can check his work on the website and YouTube!Thanks to Alex Bilz, for the original AnatoleSee AlsoBlowfishCompostHugoplateLightbiPaige",NA
Ricardo N Feliciano,30,2023-01-05,MIT,Landing,Lean Launch Page,A simple launch page useful for validing an idea in The Lean Startup way.,https://github.com/felicianotech/hugo-theme-lean-launch-page,NA,"Hugo Theme: Lean Launch PageThis theme is to build a quick, single page launch site. You may want to build a site like this when you have a business/start up/product idea that you’d like to validate. This is a common practice nowadays by people following The Lean Startup Methodology.This theme allows you to announce a company or product, provide social media links, and a email form for users to signup which is hooked up to MailChimp.Getting Started An example of how to use this theme is provided in the ./exampleSite/ directory. Basically, you’ll want to use your Hugo config file as usual and customize all of the variables in the params section. The example Hugo config can be found at ./exampleSite/config.toml.Google Analytics You can provide your Google Analytics ID in the Hugo config to add GA tracking to your page. To measure your launch page’s effectiveness, this is highly suggested.Social Media You can set the social media URL for your accounts to your Hugo config file and the associated icons (and links) will show up on your launch page.
The following are supported:MastodonTwitterFacebookInstagramYouTubeLinkedInGitHubDiscordWhen enabling Mastodon, it will also allow you to verify your domain.MailChimp Set mailchimpURL in your Hugo config to enable an email form on your page allowing you to collect signups from visitors. This how is how you build your launch list for your product.Getting the URL To get the MailChimp URL, go to your “Audience” on MailChimp, click “Signup forms”, and select “Embedded forms”. In the “Copy/paste onto your site” text area, you’ll see HTMl that says <form action="". The URL that follows is what you want.Other Icon support is provided via Font Awesome v6.
Only webfonts (with CSS) is included in this theme.Contribute This theme is under active development. Found a bug? Have feedback? Let us know on GitHub.See AlsoAcademicAdritian Free Hugo ThemeAgnesBootstrap-BP-StartpageDoks",NA
"Tran Duy Canh, Calvin",29,2023-01-14,MIT,Blog,Maverick,Maverick is a minimal Hugo blog theme,https://github.com/canhtran/maverick,https://maverick.canhtran.me,"Demo: https://canhtran.github.io/maverick/Maverick is a minimal Hugo blog theme with introduction page and based on Listed by Ronalds Vilciņš.
This Hugo theme features several content sections, front page, dynamic pages creation and a Github comment.Home PageList PostsInstallation Method 1 Inside the folder of your Hugo site run:$ git clone https://github.com/canhtran/maverick.git themes/maverick --depth=1
For more information read the official setup guide of Hugo.Updating theme :$ cd themes/maverick
$ git pull
Method 2 Using as submodule$ git submodule add --depth=1 https://github.com/canhtran/maverick.git themes/maverick
Updating theme :$ git submodule update --remote --merge
Getting started After installing the successfully it requires a just a few more steps to get your site running.The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.toml. To use it, copy the config.toml in the root folder of your Hugo site. Feel free to change the strings in this theme.Github comment The theme is integrated with https://utteranc.es for Github comment. Utterance creates Github issue for each article. It uses Github issues for commentsGrant the access for Utterancs https://github.com/apps/utterancesModify the config file  [params.comments]
    githubRepo = 'canhtran/maverick'
    theme = 'github-light'
Front page To change the contain of the front page, you need to modify the _index.mdNearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing Did you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This theme is released under the Apache License 2.0 For more information read the License.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Jing Wang,7,2023-11-18,Apache-2.0,"Dark, Docs, Multilingual, Responsive",Dark Theme Editor,"A simple, editor-like theme for Hugo.",https://github.com/JingWangTW/dark-theme-editor,https://jingwangtw.github.io/dark-theme-editor/,"Dark Theme Editor | Hugo


Dark Theme Editor is a blog theme for Hugo.DEMO - https://jingwangtw.github.io/dark-theme-editor/⚠️ The theme needs at least Hugo v0.112.x.Main Features An editor-like theme for HugoMultilingual supportMermaid SupportLaTeX Math SupportGoogle/Bing SEO supportBetter code blockDraggable sidebarFully responsiveInstallation Approaches Download Manually You can simply download the theme from GitHub Repo and paste it into the themes/dark-theme-editor directory in the root directory of your Hugo site.Install Theme Locally # Under the root directory of your Hugo site

git clone https://github.com/JingWangTW/dark-theme-editor.git themes/dark-theme-editor
This will clone the theme repository directly into the themes/dark-theme-editor directory.Install Theme as Submodule # Under the root directory of your Hugo site  

git submodule add -f https://github.com/JingWangTW/dark-theme-editor.git themes/dark-theme-editor
This will install the theme repository as a submodule in the themes/dark-theme-editor directory.Usage General Config When using dark-theme-editor as the theme for your Hugo site, please remember to set the theme field in your config.toml file.Additionally, the theme provides many custom fields for you to configure as needed. Please refer to the config.toml file in the theme to find all available options. You can override these values by adding them to your own config.toml file or by directly modifying the file in the theme directory.Click to toggle the full list of configurations.# Theme parameters
[params]

    # Parameters applied in HTML <head>
    [params.site]
        # Website ICON
        faviconUrl = """"

        # Do you have any CSS in local? List them in an array.
        # They should be placed inside ""/assets"" dir.
        # Please list your files relative to the /assets directory.
        # Glob pattern is acceptable
        # If only a few pages need the extra style files, list them in the page metadata.
        localCss = []

        # Do you need to add any external CSS? List their URL in an array.
        # If only a few pages need the extra style files, list them in the page metadata.
        # These URLs will be inserted into <link> tags directly without any check.
        externalCss = []

        # Like the one above, but this will download a local copy and combine it with 
        # other CSS files into a single file while in production mode.
        externalCssDownload = []

        # Do you have any script in local? List them in an array.
        # They should be placed inside ""/assets"" dir.
        # Please list your files relative to the /assets directory.
        # Glob pattern is acceptable
        # If only a few pages need the extra script files, list them in the page metadata.
        localJs = []

        # Do you have any external Script need to add on? List their URL in an array.
        # If only a few pages need the extra script files, list them in the page metadata.
        # These URLs will be inserted into <script> tags directly without any check.
        externalJs = []

        # Like the one above, but this will download a local copy and combine it with 
        # other JS files into a single file while in production mode.
        externalJsDownload = []

        # The code you could get from Google Search Console.
        # Please patse the value of content xxx in the following items
        # <meta name=""google-site-verification"" content=""xxxxxxxxxxxxxxxxxxxxxxxxxx"" />
        googleVerification = """"

        # The code you could get from Microsoft Bing Webmater
        # Please patse the value of content xxx in the following items
        # <meta name=""msvalidate.01"" content=""xxxxxxxxxxxxxxxxxxxx"" />
        bingVerifivation = """"

    # Customized info shown in header of the page        # Customized info shown in header of the page
    [params.header]
        # Website title for header banner.
        title = ""My New Hugo Site""

        # Subtitle for this site, used in homepage only
        subtitle = ""A Site Built by Hugo""

        # Config about your's site logo, remove this item to hide the logo
        [params.header.logo]
            # Where is your site's URL
            imgUrl = """"

            # If the logo is clickable, where should it be linked?
            # In default, it will linked to the homepage of the site.
            logoLink = """"

    # Customized info shown in footer of the page
    [params.footer]
        # CopyRight string shown in the footer. Keep it an empty string or remove this item will hide it from the page.
        copyrightStr = ""All Rights Reserved ®.""

        # Should show the counter in the footer or not
        # In the home page, it will show the numbers of all pages
        # In the sections pages, it will show the numbers of pages within the section
        # In the taxonomy pages, it will show the numbers of pages belong to the taxonomy.
        # In the regular content pages, it will show the word count.
        counter = true

        # Should show the language of the page or not
        language = true

        # Should show the hugo version or not
        hugoVersion = true

        # Should show the theme info or not
        theme = true

        # Should show the edited time of the page or not
        modifiedTime = true

        # The format of the `modifiedTime`.
        # Refer to page https://gohugo.io/functions/format/ for more detail.
        # Below is the default format, please do not remove it, unless you set `false` in `modifiedTime` field.
        dateFormat = ""Jan 02 2006 15:04:05""

        # Should show the current git HEAD hash or not
        # To make this show up correctly, please follow the prerequisites in page
        # https://gohugo.io/variables/git/
        gitHash = true

        # Social link in the footer, listed items are supported, delete unwanted items to hide it.
        [params.footer.socialLink]
            github = """"
            facebook = """"
            twitter = """"
            email = """"
            linkedin = """"
            instagram = """"
            telegram = """"
            medium = """"
            vimeo = """"
            youtube = """"

    # Metadata of the site, value will be used in HTML <header>
    # These value would be used when they didn't appear in the frontmatter of a single page.
    # In other words, these value will be overwritten by the frontmatter in the single page.
    [params.globalFrontmatter]
        # The author of this site. This will be shown in 
        # 1. the footer of all page
        # 2. the author filed in the single page. (this could be overwritten by the frontmatter of the single page.)
        # Keep it an empty string or remove this item will hide it from the page
        author = ""Jing Wang""

        # Website description for RSS and SEO. Theme will generate a <meta> tag for this item
        description = ""This is my new hugo site""

        # Website keywords. Theme will generate a <meta> tag for this item.
        keywords = ""hugo,site,new""

    # Parameters applied in the homepage only
    [params.homePage]
        # Long Descripition shown in home page ""Start Block"". Is is recommended to have the paragraph shorter than 100 words.        
        siteLongDescription = ""Hugo is a fast and easy-to-use static website generator written in Go. It renders a complete HTML website from content and templates in a directory, utilizing Markdown files for metadata. It's optimized for speed and suitable for various website types.""

        # If you don't like the title of ""siteLongDescription"" be ""Start"" (default), 
        # you may change the value of this item to ""Description"" or something you like.
        siteLongDescriptionTitle = ""Start""

        # Param to decide whether to show the most recent blog posts or not. (Default: true)
        showRecentPostsBlock = true

        # Param to decide how many recent posts to show in the home page. (Default: 5)
        numOfRecentPosts = 5

        # Parameter to decide whether to show the URL behind the title.
        # It will be more like an editor if it is shown. However, in general, it can be messy if it is displayed.        
        # (Default: true)
        recentPostShowUrl = true


    # Paramater applied in the single page
    # These values could be overwritten by the frontmatter in the single page.
    [params.page]
        # Should include Table of Content in front of the page or not.
        includeToc = true

        # Should show the author of the page or not.
        # The author name will be shown in the single page if and only if 
        #   1. this items been set as true and
        #   2. ""aurthor"" filed been provided in the 
        #       A. single page frontmatter or
        #       B. ""author"" filed in above ""globalFrontmatter"" block
        showAuthor = true

        # Should show the date of the page or not
        showDate = true

        # The format of the date.
        # Refer to page https://gohugo.io/functions/format/ for more detail.
        # Below is the default format, please do not remove it, unless you set `false` in `showDate` field.
        dateFormat = ""2006.01.02""

        # Should show the estimate reading time in front of the page or not.
        showTimeToRead = true

        # Should show the breadcrumb in front of the page or not.
        showBreadcrumb = true

        # Should show the ""copy"" button in the codeblock or not.
        codeBlockCopible = true

        # Should include LaTeX support on a single page or not?
        # This parameter will be overwritten by the page front matter (if it has been set).
        # Since enabling this configuration loads some external JavaScript, 
        #   it will slow down the page loading speed. 
        # It's recommended to keep it turned off by default and only enable this configuration when required.
        useMath = false
Multilingual Config If your site is in multilingual mode, there will be a language select icon at the footer of the site. Additionally, there will be a navigator on each translated page.Please move the configuration fields that need to be translated under the corresponding language configuration blocks in your hugo.toml. There is an example hugo.multilang.toml file you could reference. Remember to rename it to hugo.toml when needed.Click to toggle example hugo.multilang.toml file# Multilingual Setting
[languages]

    [languages.en]

        # hugo multilingual setting
        languageCode = 'en-US'
        languageDirection = 'ltr'
        languageName = 'English'
        weight = 1

        # Configs that were originally in the ""params"" section but need to be translated.
        [languages.en.params]

            [languages.en.params.header]
                # Website title for header banner.
                title = ""My New Hugo Site""

                # Subtitle for this site, used in homepage only
                subtitle = 'A Site Built by Hugo'

            [languages.en.params.footer]
                # CopyRight string shown in the footer. Keep it an empty string or remove this item will hide it from the page.
                copyrightStr = ""All Rights Reserved ®.""

            [languages.en.params.globalFrontmatter]
                # The author of this site. This will be shown in 
                # 1. the footer of all page
                # 2. the author filed in the single page. (this could be overwritten by the frontmatter of the single page.)
                # Keep it an empty string or remove this item will hide it from the page
                author = ""Jing Wang""

                # Website description for RSS and SEO. Theme will generate a <meta> tag for this item
                description = ""This is my new hugo site""

                # Website keywords. Theme will generate a <meta> tag for this item.
                keywords = ""hugo,site,new""

            [languages.en.params.homePage]

                # Long Descripition shown in home page ""Start Block"". Is is recommended to have the paragraph shorter than 100 words.        
                siteLongDescription = ""Hugo is a fast and easy-to-use static website generator written in Go. It renders a complete HTML website from content and templates in a directory, utilizing Markdown files for metadata. It's optimized for speed and suitable for various website types.""

                # If you don't like the title of ""siteLongDescription"" be ""Start"" (default), 
                # you may change the value of this item to ""Description"" or something you like.
                siteLongDescriptionTitle = ""Start""

    # 設定為繁體中文
    [languages.zh]

        # Hugo 多語言設定
        languageCode = 'zh-Hant-TW'
        languageDirection = 'ltr'
        languageName = '繁體中文'
        weight = 2

        # 原本位於 ""params"" 區段但需要翻譯的設定
        [languages.zh.params]

            [languages.zh.params.header]
                # 頁首橫幅的網站標題。
                title = ""我的新 Hugo 網站""

                # 本站的副標題，僅用於首頁
                subtitle = '由 Hugo 建立的網站'

            [languages.zh.params.footer]
                # 在頁尾顯示的版權字串。將其保留為空字串或刪除此項目可將其從頁面中隱藏。
                copyrightStr = ""版權所有 ®.""

            [languages.zh.params.globalFrontmatter]
                # 本站的作者。將顯示於
                # 1. 所有頁面的頁尾
                # 2. 單頁的作者欄位中（可被單頁的前置資料覆寫）
                # 將其保留為空字串或刪除此項目可將其從頁面中隱藏
                author = ""王靖""

                # 用於 RSS 和 SEO 的網站描述。主題將為此項目生成 <meta> 標籤
                description = ""這是我的新 Hugo 網站""

                # 網站關鍵字。主題將為此項目生成 <meta> 標籤
                keywords = ""hugo,網站,新""

            [languages.zh.params.homePage]

                # 在首頁「開始區塊」中顯示的詳細描述。建議段落長度不超過 100 個字。
                siteLongDescription = ""Hugo 是一個快速且易於使用的靜態網站產生器，用 Go 語言編寫。它可以從目錄中的內容和模板呈現完整的 HTML 網站，利用 Markdown 檔案進行元數據。它針對速度進行了優化，適用於各種類型的網站。""

                # 如果您不喜歡 ""siteLongDescription"" 的標題是「開始」（默認值），
                # 您可以將此項目的值更改為「描述」或您喜歡的其他內容。
                siteLongDescriptionTitle = ""開始""


    # Spracheinstellung für Deutsch
    [languages.de]

        languageCode = 'de-DE'
        languageDirection = 'ltr'
        languageName = 'Deutsch'
        title = 'Projekt Dokumentation'
        weight = 3

        # Konfigurationen, die ursprünglich im Abschnitt ""params"" waren, aber übersetzt werden müssen.
        [languages.de.params]

            [languages.de.params.header]
                # Website-Titel für den Kopfzeilenbanner.
                title = ""Meine neue Hugo-Website""

                # Untertitel für diese Seite, nur auf der Startseite verwendet
                subtitle = 'Eine Website erstellt von Hugo'

            [languages.de.params.footer]
                # Urheberrechtszeichenfolge im Footer angezeigt. Lassen Sie es leer oder entfernen Sie diesen Eintrag, um sie von der Seite auszublenden.
                copyrightStr = ""Alle Rechte vorbehalten ®.""

            [languages.de.params.globalFrontmatter]
                # Der Autor dieser Website. Dies wird angezeigt in 
                # 1. im Footer auf allen Seiten
                # 2. dem Autorenfeld auf der Einzelseite. (dies kann durch das Frontmatter der Einzelseite überschrieben werden.)
                # Lassen Sie es leer oder entfernen Sie diesen Eintrag, um ihn von der Seite auszublenden.
                author = ""Jing Wang""

                # Website-Beschreibung für RSS und SEO. Das Theme generiert ein <meta>-Tag für diesen Eintrag
                description = ""Das ist meine neue Hugo-Website""

                # Website-Schlüsselwörter. Das Theme generiert ein <meta>-Tag für diesen Eintrag.
                keywords = ""hugo,website,neu""

            [languages.de.params.homePage]
                # Lange Beschreibung im ""Start Block"" auf der Startseite angezeigt. Es wird empfohlen, den Absatz kürzer als 100 Wörter zu halten.        
                siteLongDescription = ""Hugo ist ein schneller und benutzerfreundlicher statischer Website-Generator, der in Go geschrieben ist. Er rendert eine vollständige HTML-Website aus Inhalten und Vorlagen in einem Verzeichnis und verwendet Markdown-Dateien für Metadaten. Er ist optimiert für Geschwindigkeit und für verschiedene Arten von Websites geeignet.""

                # Wenn Ihnen der Titel von ""siteLongDescription"" nicht gefällt, der standardmäßig ""Start"" ist, 
                # können Sie den Wert dieses Elements in ""Beschreibung"" oder etwas ähnliches ändern, das Ihnen gefällt.
                siteLongDescriptionTitle = ""Start""

# Theme parameters
[params]

    # Parameters applied in HTML <head>
    [params.site]
        # Website ICON
        faviconUrl = """"

        # Do you have any CSS in local? List them in an array.
        # They should be placed inside ""/assets"" dir.
        # And don't named the file as ""index.css"" and ""style.css"".
        # These two files are used by the theme.
        localCss = []

        # Do you need to add any external CSS? List them in an array.
        externalCss = []

        # Do you have any script in local? List them in an array.
        # They should be placed inside ""/assets"" dir.
        # And don't named the file as ""index.js""
        # Theis file is used by the theme.
        localJs = []

        # Do you have any external Script need to add on? List them in an array.
        externalJs = []

        # The code you could get from Google Search Console.
        # Please patse the value of content xxx in the following items
        # <meta name=""google-site-verification"" content=""xxxxxxxxxxxxxxxxxxxxxxxxxx"" />
        googleVerification = """"

        # The code you could get from Microsoft Bing Webmater
        # Please patse the value of content xxx in the following items
        # <meta name=""msvalidate.01"" content=""xxxxxxxxxxxxxxxxxxxx"" />
        bingVerifivation = """"

    # Customized info shown in header of the page
    [params.header]
        # Config about your's site logo, remove this item to hide the logo
        [params.header.logo]
            # Where is your site's URL
            imgUrl = """"

            # If the logo is clickable, where should it be linked?
            # In default, it will linked to the homepage of the site.
            logoLink = """"

    # Customized info shown in footer of the page
    [params.footer]
        # Should show the counter in the footer or not
        # In the home page, it will show the numbers of all pages
        # In the sections pages, it will show the numbers of pages within the section
        # In the taxonomy pages, it will show the numbers of pages belong to the taxonomy.
        # In the regular content pages, it will show the word count.
        counter = true

        # Should show the language of the page or not
        language = true

        # Should show the hugo version or not
        hugoVersion = true

        # Should show the theme info or not
        theme = true

        # Should show the edited time of the page or not
        modifiedTime = true

        # The format of the `modifiedTime`.
        # Refer to page https://gohugo.io/functions/format/ for more detail.
        # Below is the default format, please do not remove it, unless you set `false` in `modifiedTime` field.
        dateFormat = ""Jan 02 2006 15:04:05""

        # Should show the current git HEAD hash or not
        # To make this show up correctly, please follow the prerequisites in page
        # https://gohugo.io/variables/git/
        gitHash = true

        # Social link in the footer, listed items are supported, delete unwanted items to hide it.
        [params.footer.socialLink]
            github = """"
            facebook = """"
            twitter = """"
            email = """"
            linkedin = """"
            instagram = """"
            telegram = """"
            medium = """"
            vimeo = """"
            youtube = """"

    # Parameters applied in the homepage only
    [params.homePage]
        # Param to decide whether to show the most recent blog posts or not. (Default: true)
        showRecentPostsBlock = true

        # Param to decide how many recent posts to show in the home page. (Default: 5)
        numOfRecentPosts = 5

        # Parameter to decide whether to show the URL behind the title.
        # It will be more like an editor if it is shown. However, in general, it can be messy if it is displayed.        
        # (Default: true)
        recentPostShowUrl = true


    # Paramater applied in the single page
    # These values could be overwritten by the frontmatter in the single page.
    [params.page]
        # Should include Table of Content in front of the page or not.
        includeToc = true

        # Should show the author of the page or not.
        # The author name will be shown in the single page if and only if 
        #   1. this items been set as true and
        #   2. ""aurthor"" filed been provided in the 
        #       A. single page frontmatter or
        #       B. ""author"" filed in above ""globalFrontmatter"" block
        showAuthor = true

        # Should show the date of the page or not
        showDate = true

        # The format of the date.
        # Refer to page https://gohugo.io/functions/format/ for more detail.
        # Below is the default format, please do not remove it, unless you set `false` in `showDate` field.
        dateFormat = ""2006.01.02""

        # Should show the estimate reading time in front of the page or not.
        showTimeToRead = true

        # Should show the breadcrumb in front of the page or not.
        showBreadcrumb = true

        # Should show the ""copy"" button in the codeblock or not.
        codeBlockCopible = true

        # Should include LaTeX support on a single page or not?
        # This parameter will be overwritten by the page front matter (if it has been set).
        # Since enabling this configuration loads some external JavaScript, 
        #   it will slow down the page loading speed. 
        # It's recommended to keep it turned off by default and only enable this configuration when required.
        useMath = false
Also, please add the corresponding i18n translation table according to the language you use, so the theme can translate to the language you use properly. I have placed an example file for English containing all the words required by the theme under the i18n folder. You should copy it and translate it to the language you need.Author Taxonomies Since Hugo will not merge the taxonomies config from theme config to site config by default, the author taxonomies pages need to be set in your site configuration.You could simply merge the theme config into site config.[taxonomies]
    _merge = ""deep""
Otherwise, you could define your taxonomies directly.[taxonomies]
    autor = ""author""
    tag = ""tags""
    category = ""categories""
Also, you need to set up the [params.page.showAuthor] according to your preference. params config will be merged from theme config into site config by default.LaTex Math Support This theme supports LaTeX Math interpretation and utilizes KaTeX as the rendering engine.To enable this feature, please add useMath = true in the frontmatter of the single page or in the site configuration. By default, this feature is turned off. The single page configuration will override the configuration in the site configuration.As turning on this feature will add the related dependency in each page, which will slow down the performance of page loading, it is recommended to turn on this feature in the pages that require it, rather than turning it on globally in the site configuration.By default, we support the following delimiters:$$ \LaTeX $$: This will render the formula in a single line.$ \LaTeX $: This will render the formula inline.\\( \LaTeX \\): This will render the formula inline.\\[ \LaTeX \\]: This will render the formula in a single line.Also, as Hugo will interpret \ as an escape character, remember to use \\\\ for line breaks.FYI, this is the configuraions passed to KaTeX by the theme.renderMathInElement(document.body, {
    // customised options
    // auto-render specific keys, e.g.:
    delimiters: [
        { left: ""$$"", right: ""$$"", display: true },
        { left: ""$"", right: ""$"", display: false },
        { left: ""\\("", right: ""\\)"", display: false },
        { left: ""\\["", right: ""\\]"", display: true },
    ],
    // rendering keys, e.g.:
    throwOnError: false,
});
Run & Build Develop hugo server
Then, you should be able to see your site at localhost:1313. From now on, all changes made locally will be reflected on the site, without the need to refresh your browser each time. Additionally, all files will not be minified or merged in this development mode, making it easier to debug any issues.Release hugo
This will build your site in release mode, where all .html, .css, and .js files will be minified and merged when possible.Feature Plan Share to Social Media ButtonBetter Code Block HighlightTab View SupportStore custom note in local storage.Accessibility SupportLaTex Math Rendering in Server Side.Acknowledgement This theme was originally inspired by the theme edidor.License This theme was released under the Apache License 2.0.See AlsoAcademicBootstrap Theme for Personal Blog and DocumentationsHB Starter Theme TemplateRelearnAmethyst",NA
Rahul Tiwari,27,2023-05-06,MIT,"Blog, Dark, Minimal, Personal, Portfolio, Responsive",Lekh,A text focussed and minimal personal portfolio theme with dark mode.,https://github.com/ba11b0y/lekh,NA,"LekhSimple, text-focussed and minimal personal portfolio theme based on https://github.com/vegarsti/vegarsti.github.ioScreenshot (Live Demo) Features Social media linksMarkdown supportedEasy to personalizeRSS feedDark mode (taken from https://www.gwern.net/ as it is.)GoatCounter counts(analytics). Know more about GoatCounter hereInstallation Installing Hugo # For Linux
sudo apt-get install hugo

# For Mac
brew install hugo

# Detailed instructions at https://gohugo.io/getting-started/installing#readout
Creating a new site hugo new site <site_name>
Adding lekh as a theme cd <site_name>
git init
git submodule add https://github.com/ba11b0y/lekh.git themes/lekh
echo theme = \""lekh\"" >> config.toml
Here’s Hugo’s official guide for more details.Personalization Hugo looks for a config.toml in the root of your site.
To personalize the theme, copy the default config shipped with the themecp themes/lekh/exampleSite/config.toml config.tomlAnd then customize accordingly.Or simply copy the below config and customize accordingly.
baseURL = ""https://example.com/""
languageCode = ""en-us""
title = ""Example Lekh Site""
theme = ""lekh""

[params]
Name = ""Agent Smith""
About = ""We're not here because we're free. We're here because we're __not__ free. There's no escaping reason. No denying purpose. Because as we both know without purpose, we would not exist.<br/> Read more [here](https://matrix.fandom.com/wiki/Agent_Smith)""
Email = ""agentsmith@thematrix.com""
Resume = """" # Add the filename with file extension.
PostLimit = 4 # Sets the number of posts to display on the front page
GoatCounterCode = """"

[[params.profiles]]
name = ""GitHub""
url = ""https://github.com/ba11b0y""

[[params.profiles]]
name = ""Twitter""
url = ""https://twitter.com/ba11b0y""

[[params.profiles]]
name = ""Goodreads""
url = ""https://www.goodreads.com/user/show/91520565-rahul-tiwari""

[[params.profiles]]
name = ""LinkedIn""
url = """"
Creating posts # This creates a new draft post in content/posts
hugo new posts/title-of-post.md
Serving it up # This will show up your draft posts as well.
hugo server -D
#OR

#This will show up only your published posts.
hugo server
Credits Thanks to Vegard’s personal site from which the theme was heavily inspired.Also to https://www.gwern.net/ for the dark mode.Feel free to contribute and open issues.See AlsoAcademicGokarnaHugo LiftoffLightbiPaige",NA
Adrián Moreno Peña,27,2023-04-07,MIT,"Bootstrap, Contact, Landing, Light, Minimal, Personal, Portfolio, Responsive",Adritian Free Hugo Theme,"A free Hugo Theme based on bootstrap, optimized for speed, SEO and accessibility.",https://github.com/zetxek/adritian-free-hugo-theme,NA,"Adritian Free Hugo ThemeAdritian Hugo Theme for Personal WebsitesThis free Hugo theme is a fork of Raditian Theme - a great Hugo theme created by Radity.It’s based on bootstrap (so it’s responsive), and the main changes have been upgrades on the web performance and accessibility of the template.Changes:removal of jQueryupgrade of bootstrap from v4 to v5assets pipeline supportsome basic i18n featureesadded more pages/templatesYou can see it live in https://www.adrianmoreno.info (my personal website)Download Clone the repo: git clone https://github.com/zetxek/adritian-free-hugo-theme.git.Download from Github.Installation Install Hugo To use adritian-free-hugo-theme you need to install Hugo by following https://gohugo.io/getting-started/installing/.
Create your personal website and run > hugo new site <your website's name>
> cd <your website's name>/themes/
Clone the adritian-free-hugo-theme (git clone https://github.com/zetxek/adritian-free-hugo-theme.git).
Replace the ""config.toml"" file that in the project's root directory with themes/adritian-free-hugo-theme/exampleSite/config.toml
> hugo server -D
The theme is alive on http://localhost:1313/ 
License Copyright 2020 Radity (https://radity.com/), 2022 Adrián Moreno Peña (https://www.adrianmoreno.info)Licensed under MIT (https://github.com/zetxek/adritian-free-hugo-theme/blob/master/LICENSE)Support If you have any problem please do not hesitate to contact us.See AlsoPaigeAcademicPikoHugo InitioHugo Liftoff",NA
Gleb Buzin,26,2023-10-24,MIT,"Blog, Company, Docs, Light, Minimal, Responsive",dead-simple,Dead simple Hugo theme.,https://github.com/barklan/hugo-dead-simple,NA,"Hugo Dead SimpleSimple hugo theme to be dead easy on the reader.Features Light and dark themesEverything is lazy loadedSite-wide searchKeyboard-friendly: h to home, t to tags, i to search, Tab to navigate posts and searchDynamic wiki-style table of contentsKatex math (inline and block)Info boxesExample site, overview of features and configuration.See AlsoAcademicBeautiful HugoHextraLightbiPiko",NA
Zhang Jet,26,2022-11-27,MIT,Blog,Icarus-Lite,A single-column Hugo theme based on the Hexo theme Icarus's card style,https://github.com/airinghost/hugo-theme-icarus-lite,https://icarus-lite.zhangjet.com,"Icarus-LiteA single-column Hugo theme based on the Hexo theme Icarus's card style中文说明Features Card style - Every post or note can be a card.Single HTML file - Fully inline or internal Style Sheet and JavaScript.Demo https://icarus-lite.zhangjet.com/Documentation Read exampleSite configuration.Please don’t hesitate to start Discussions in this repo if any questions or problems.Issues also welcomed if any bugs found.Tips (1) Front Matter Set hidden: true (YAML) / hidden = true (TOML) to hide the file from the index (homepage) view (i.e. posts using index.html template).Set date_hidden: true to remove the date from the article.Set title_hidden: true to remove the title from the article.Set read_more: true to add a button at the bottom left-hand of the article card in index or list views; the button text is set at [Params] section in Config file, you can change it globally.Set read_more_txt: customText to overwrite the text for the read-more button mentioned above.Set link_go: http://example.com and link_txt: customText to add a button at the bottom left-hand of the article card in index or list views; it would open the link you set in a new tab in the browser.Set link_same: true to open this link in the current tab.Set no_summary: true to disable the summary for the current post，i.e. to show the full content on the card（this can be set globally in the config）。(2) Body Text Don’t forget to insert <!–more–> manually to your post or page file to generate the preview (summary) of the article, and it would look better.Acknowledgments PPOffice’s beautiful Hexo theme Icarus.Pedro Lopez’s Creating a Hugo Theme From Scratch guided me to the basic structure of a Hugo theme.Janne Kemppainen’s Implemement Hugo List and Taxonomy Pages helped me a lot on pagination.Tencent’s 404 project.Jeremy Thomas’s minireset.css.Cai Jimmy’s Stack, a great card-style Hugo theme I like very much. And I made a use of some codes from his work, such as the main section at index template.Gimo’s futu. I made a use of some codes from his work at navbar template.GoHugo’s GoHugo Sites Theme. Its stylesheets for codeblock and table are useful.filament group’s The Simplest Way to Load CSS Asynchronously and Sukka’s Improve FCP for My Blog. I learnt a way of loading CSS files asynchronously from their posts.Aditya Telange’s PaperMod: Markdown Syntax test file。Oursky’s mockups generator.Wikimedia Commons’s external link icon and Yoksel’s Url encoder for SVG.P.S. Hugo’s list.html template enables us to build a list page in index(homepage) view. So if you are searching for the way to make Hexo generate pages like Hugo’s list template, then I would like to recommend Jamling’s work hexo-generator-index2.Repo Stats See AlsoArcanaBootstrap FreelancerCalligraphyDPSGDen",NA
Christian Olsen,5,2023-12-05,MIT,"Dark, Dark Mode, Light, Minimal, Responsive",L1nkr,Minimal linktree Hugo theme,https://github.com/chrede88/L1nkr,https://chrede88.github.io/L1nkr,"L1nkr - Simple LinkTree Hugo ThemeL1nkr is a simple LinkTree type Hugo theme. The theme is designed mobile-first, with a very intuitive interface. Get your L1nkr site up and running quickly by using the L1nkr template.Features Simple LinkTree theme, designed for mobile-first.Automatic dark mode (based on system setttings).Colorful or monochromatic link color scheme.Emoji support for a fun design.More than 40 supported brand links.Healthcheck endpoint (/healthcheck.json).Installation Make sure you have Hugo and Go installed on your local machine. Read the instructions here.Follow this link to the theme template.Follow the installation instructions in the template repo. They are listed below for reference.Template installation instructions (Only for reference) Use this template by pressing Use this template.Clone your version of the template to your local computer:git clone https://github.com/<username>/<reponame>
Change the module name to match your github repo in go.mod.Modify config/_default/hugo.yaml and config/_default/params.yaml according to the Configuration below.In a terminal/commandline window, move to the newly created folder using cd.Build a local version of your site by executing hugo server. You can see the site by navigating to localhost:1313 (actual URL will be outputted in the CLI) in a browser.Add a new image to the assets/ folder, using the same name as you specified in params.yaml.Add a new icon.png file to update the favicon. The png file should be 512px by 512px in size.Configuration All configuration is done in the two configuration files under config/_default/. The URL and site title can be set in hugo.yaml, all other parameters are set in params.yaml.hugo.yaml:baseURL: 'https://username.github.io/L1nkr'
title: 'L1nkr'
params.yaml:############################
## Author
############################

author:
  name: ""L1nkr""
  image: ""author.jpeg""
  greeting: ""A simple LinkTree theme for Hugo :evergreen_tree:""
  icon: "":wave:"" # outcomment (or remove) if you don't want to display the emoji

############################
## Links
############################

links:
  - github: https://github.com/username/
  - facebook: https://facebook.com/

############################
## Colunms of Links
############################

# between 2 & 6 columns are supported (both incl)
columns: 2

##############################
## Monochromatic color scheme
##############################

# all links will be slate-700 (or slate-50 in dark mode)
# https://tailwindcss.com/docs/customizing-colors
monochrome: true

###########################
## Icon text
###########################

# add the icon name to each icon
icontext: true

############################
## Tooltips
############################

# add tooltips (on hover) to all icons
tooltip: true

###############################
## OpenGraph & Twitter Cards
###############################

title: L1nkr
description: Demo site build with L1nkr & Hugo
images:
  - thumbnail.jpeg
Links are defined by the name (i.e. “github” or “facebook”). The names must match one of the supported link icons, see list below.Supported Link Icons Supported LinksSupported LinksSupported LinksSupported Linksamazonapplebandcampbitbucketblueskycheck-markcodependevdiscorddribbbleemailetsyfacebookflickrfoursquaregithubgitlabgoogleinstagramkeybasekickstarterlinklinkedinmastodonmediumorcidpatreonpaypalredditsignalskypeslacksnapchatsoundcloudspotifystack-exchangestack-overflowstravatelegramtiktoktumblrtwitchuntappdwebsitewhatsappwindowsx-twitteryoutubeCustom Link Icons Users can provide their own icons by placing a .svg image in ./assets/icons/ in their own repo. Creating folders when necessary. The image should be as circular as possible for the best result. Don’t use spaces in the filename! Find all current icons here.
If you’re using the colorful color scheme, the background color will be the tailwind color bg-indigo-500 (#6366f1) unless another color is specified. This can be done by placing the following css snippet in ./assets/css/custom.css:.link-nameOfIcon {
  background-color: #6366f1; /* Hex color code */
}
Where nameOfIcon is be the name of the custom .svg file.SVG Icon Cheatsheet Make sure that your custom svg icons doesn’t have a fixed size. I.e. set the width and height to:<svg width=""100%"" height=""100%"">
And make sure the icon doesn’t have any style elements that defines the color!Update the Theme Version This guide is left here for reference. Please check the template repo for the most up-to-date documentation.The theme version used to build the site is defined in go.mod file.The best practice is to update to released and tested versions. To update to a specific version execute the following command in a terminal/commandline (at the root path of your site repo):  hugo mod get github.com/Chrede88/L1nkr@vX.Y.Z
Replace X,Y & Z with the corresponding version numbers. You can find the releases here. Please check if any breaking changes are listed under the release you want to update to, before proceeding.See AlsoBlowfishCompostHugoplateLightbiPaige",NA
saadnpq,25,2023-03-27,GPLv3,"Blog, Contact, Dark, Personal, Responsive",npq hugo,hugo theme for personal sites,https://github.com/saadjsct/npqhugo,NA,"npq hugo themedemo here is a live demo you can seemain features darkresponsiveout of the box contact formavatar supportsyntax highlightingtable of contentcustomizableinstallation after you have installed hugo (see quick start) clone this repo in your site’s theme directory to install the theme. then use the example configuration provided as a reference to get started.configuration this is how your config.toml will look like after installation, change the values according to your site.baseURL = ""https://www.example.com""
languageCode = ""en-us""
title = ""title""
copyright = ""Copyright © 2008–2019, Steve Francia and the Hugo Authors; all rights reserved.""
theme = ""npq-hugo""
pygmentsUseClasses=true

[params]
  author = ""your name""
  description = ""your description""
  keywords = ""hugo blog""
  useAvatar = true
  microBlogSection = ""posts""
  displayMicroBlog = true
  displayRecent = true
  recentMax = 4
  mail = ""mail@example.com""
  phone = ""8888888888""
  formspreeID = ""yourformspreeID""

[menu]
  [[menu.main]]
    name = ""home""
    pre = ""<i class=\""fas fa-home fa-sm\""></i>""
    url = ""/""
    weight = -9 
  [[menu.main]]
    name = ""blog""
    pre = ""<i class=\""fas fa-keyboard fa-ms\""></i>""
    url = ""/blog/""
    weight = -8
  [[menu.main]]
    name = ""tags""
    pre = ""<i class=\""fas fa-tags fa-ms\""></i>""
    url = ""/tags""
    weight = -7 
  [[menu.main]]
    name = ""github""
    pre = ""<i class=\""fab fa-github fa-ms\""></i>""
    url = ""https://github.com/yourgithubusername23434""
    weight = -6 
  [[menu.main]]
    name = ""RSS""
    pre = ""<i class=\""fas fa-rss fa-ms\""></i>""
    url = ""/index.xml""
    weight = -4 
  [[menu.main]]
    name = ""contact""
    pre = ""<i class=\""far fa-envelope\""></i>""
    url = ""/contact""
    weight = -1 
for the contact page to work you have to make a free form at formspree and put your form id in the variable formspreeID in the configuration file.every menu entry has a corresponding section named [[menu.mail]] under [menu]. to add or change a menu entry add or change the corresponding section with name being the name displayed in the menu, pre is a text before the name (you can grap icons from fontawesome), url is the url that the menu item points to, and weight is an integer value that represent the order of the menu items (items with lower weight float)In order to see your site updating while changing it, run Hugo’s built-in local server.hugo server
micro blog posts in the directory “posts” (can be configured) in the contents directory will be displayed under the microblog section on the home page. if you want to pin a post to the top put pinned: true in the post’s front matter.
example front matter:---
pinned: true
date: 2020-04-09T00:16:00+02:00
---
License GPLv3See AlsoAcademicColor Your WorldHolyHugo LiftoffHugoplate",NA
nightswinger,25,2023-02-26,MIT,Blog,Coyote,Card-based blog theme for Hugo,https://github.com/nightswinger/hugo-theme-coyote,https://nightswinger.github.io/hugo-theme-coyote/,"Hugo Theme CoyoteDemo Example SiteQuick Start Install Clone this repo to themes folder:git clone https://github.com/nightswinger/hugo-theme-coyote.git themes/coyote --depth=1
Then, add the theme to your site config:echo theme = \""coyote\"" >> config.toml
Add Search Page Add the following to your config.toml[outputs]
  home = ['HTML', 'JSON']
Create a file with search.md in content directory---
title: ""Search""
layout: ""search""
---
Create Content You can create a new content file using archetype templatehugo new --kind post-bundle posts/my-first-post
Features Search supported by Fuse.jsGoogle Analytics supportedSee AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Benny Mei,25,2022-07-26,MIT,"Blog, Minimal, Personal",Elephants,Minimal theme using the Ubuntu font.,https://github.com/meibenny/elephants,NA,"ElephantsA minimal Hugo theme using the Ubuntu font.Features No JavaScriptHigh ContrastInstallation In the folder of your Hugo site, run:    git submodule add https://gitlab.com/meibenny/elephants.git themes/elephants
Dedication To Evelyn - the world’s most extraordinary woman.You’ve helped me through thick and thin.There’s no way I would have gotten so far without you.License Released under the MIT LicenseDocs Docker docker build . -t elephants
docker run -it elephants shell
cd example
hugo server
See AlsoCalligraphyMonday themeTatBanTheme2.0TechLabTranquilpeak",NA
John Siu,24,2023-03-22,MIT,"Blog, Minimal, Personal",SK1,"Fully functional basic Hugo theme with no css, no javascript.",https://github.com/J-Siu/hugo-theme-sk1,NA,"Hugo Theme - SK1 (Skeleton 1) Fully functional basic Hugo theme with no css, no javascript.Intended for learning hugo theme structure and functions.Table Of Content SK ThemesWalk ThroughDemoInstallTestingHugo Features ImplementedSite ConfigDefault FaviconContributorsChange LogLicenseSK Themes ThemeGitHubHugoDemoDescriptionSK1hugo-theme-sk1SK1sk1.jsiu.devFully functional basic Hugo theme with no css, no javascript.SK2hugo-theme-sk2SK2sk2.jsiu.devFully functional basic Hugo theme with minimum css.SK3hugo-theme-sk3SK3sk3.jsiu.devFull feature Hugo theme with Google AdSense support.Walk Through Hugo Theme SK1 Walk Through - A starting guide for creating Hugo theme.Demo SK1 demo site: https://sk1.jsiu.dev/ with content from hugoBasicExample.Install In site directory:Using clonegit clone https://github.com/J-Siu/hugo-theme-sk1 themes/sk1
Using submodulegit submodule add https://github.com/J-Siu/hugo-theme-sk1 themes/sk1
Update submodulegit submodule update --recursive --remote
Testing git clone https://github.com/J-Siu/hugo-theme-sk1 sk1
cd sk1

# Pull example site.
git submodule update --recursive --init

cd exampleSite
hugo server -D --bind :: \
--disableFastRender \
--theme sk1 \
--themesDir ../../ \
--config config.toml,../config.demo.toml \
--verbose
Hugo Features Implemented layouts_defaultbaseof.html No change, auto generated by Hugolist.html.Site.Params.mainSections for home page listing. Paginationsingle.html Content Date Next/Prev Related Tags ToCpartialsfooter.html Site.Params.copyrighthead.html No change, auto generated by Hugoheader.html Site.Params.subtitle404.html Text “Page Not Found.”index.html Deleted. Merged with list.htmlSite Config baseURL = ""https://sk1.jsiu.dev""
theme   = ""sk1""
title   = ""SK1""

[Params]
mainSections = ""post""
subtitle = ""A Hugo Theme""
Default Favicon SK themes come with default favicon.Disable default favicon:# At Hugo site root
touch static/favicon.ico
Override default favicon:# At Hugo site root
cp <your favicon.ico> static/favicon.ico
Contributors John Sing Dao SiuChange Log 1.0.0Initial Commit1.0.1Add imagesREADME.md updateUse site.Params.mainSections1.0.2Add default favicon.icoAdd walk throughChange toc start level to 1Update README.mdLicense The MIT License (MIT)Copyright (c) 2020 John SiuPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Anton Polishko,24,2022-08-22,MIT,NA,Stellar,a one page site for gohugo.io created by html5up,https://github.com/antonpolishko/hugo-stellar-theme,NA,"StellarStellar is a simple one page site originally created by HTML5UP. This Hugo theme is a port of theme inspired by another theme port HighlightsThis theme provides the following featuresGoogle AnalyticsresponsiveInstallation Inside the folder of your Hugo site run:$ cd themes
$ git clone https://github.com/antonpolishko/hugo-stellar-theme
For more information read the official setup guide of Hugo.Getting started After installing the Hugo Stellar Theme it requires a just few more steps to get your site running.The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.tomlAll icons are part of Fontawesome’s icon font. Look at the website of Fontawesome for more icons. The icons are represented by their corresponding CSS class of Fontawesome.Nearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing Did you found a bug or got an idea for features? Feel free to use the issue tracker to let me know.License The theme is licensed under the MITAcknowledgements Thanks toHTML5UP for creating this themeSteve Francia for creating Hugo and the awesome community around the project.Manuel Schneider for providing an example of porting html5up theme to hugo",NA
Patrick Collins,24,2022-07-03,MIT,"Blog, Dark, Light, Minimal, Personal, Portfolio, Responsive",Calligraphy,"Inspired by its namesake, Calligraphy aims to provide an elegantly simple canvas for high readability.",https://github.com/pacollins/calligraphy,http://hugo-calligraphy.netlify.app/,"CalligraphyDemo | SourceCalligraphy is a theme for Hugo static site generator focused on the beauty of it’s content.Getting Started There are two different methods to install the theme depending on how you plan on using it.1. Clone Repository I want to use this theme and might want to contribute to it.Navigate to the root directory of your site and do the following:git clone https://github.com/pacollins/calligraphy.git themes/calligraphy
2. Submodule I want to use this theme, but I have no plans to contribute or make a pull request.Navigate to the root directory of your site and do the following:git submodule add https://github.com/pacollins/calligraphy.git themes/calligraphy
git submodule update --init --recursive
You should now be able to navigate to themes/calligraphy and see all of the theme files.To update your site to the current version of the theme, navigate to the root directory and do the following:git submodule update --remote --merge
Modifying If you need to customize any aspect of the theme for personal use, simply create a duplicate file at the root directory. Note: You do not need to edit the theme files to customize theme. Refer to the Hugo documentation related lookup order.For example, if you wanted to change the template for the header (<my-project>/themes/layouts/partials/site/header.html) you would create a new file at <my-project>/layouts/partials/site/header.html and base it off of the theme file. Hugo will then use your file instead of the theme file. This is the proper way to adjust files for personal use so that you do not make your site incompatible with future versions of the theme.exampleSite Within the calligraphy folder, you will find another folder called exampleSite This folder is what is used to build the demo and should provide you with an example of how to structure your site files.Hugo’s Built-In Server To see a live version of your site locally, use the following command:hugo server
Hugo will build your site and host a server locally. You can view this live at
localhost:1313.About the Author Calligraphy is a theme created by Patrick A Collins
for Hugo. Inspired by its namesake, the theme aims to
provide a simple canvas that is elegant and ensures high readability for all
visitors.Please also refer to the project contributors list for everyone that has directly contributed to this theme.License This theme is released under the MIT License. Please read the license for more information.Special Thanks normalize.csstocbotPlayfair Display FontSource Sans Pro FontSee AlsoAcademicGokarnaHugo LiftoffLightbiPaige",NA
sped0n,3,2023-11-13,MIT,"Gallery, Minimal, Portfolio, Responsive",Bridget,Bridget is a minimal Hugo theme designed for photographers/visual artists.,https://github.com/Sped0n/bridget,https://bridget-demo.sped0nwen.com,"BridgetBridget is a minimal Hugo theme designed for photographers / visual artists.It’s based on the https://github.com/tylermcrobert/bridget-pictures-www.Demo Site To see this theme in action, here is a live demo site which is rendered with Bridget theme.Getting Started Head to this documentation for a complete guidance to get started with the Bridget theme.Features Blazingly fast: 99/100 on mobile and 100/100 on desktop in Google PageSpeed InsightsJS dynamic loading (powered by ES6 syntax)JS code splitting by rollup.jsImage Preloading/Lazy loadingDynamic resolution based on view modeMultiple analytics services supportedSearch engine verification supported (Google, Bind, Yandex and Baidu)Multilingual and i18n Bridget supports the following languages:EnglishSimplified ChineseTraditional ChineseJapaneseKoreanDeutschSpanishItalianContribute with a new languageCredits https://github.com/tylermcrobert/bridget-pictures-wwwhttps://www.youtube.com/watch?v=Jt3A2lNN2aEhttps://github.com/d4cho/bridget-pictures-cloneSee AlsoAcademicPaigeTailBlisshugo-theme-consoleAdritian Free Hugo Theme",NA
Jack Salici,22,2023-09-15,MIT,"Blog, Minimal, Portfolio, Responsive",Salinger,"Salinger is a clean, minimalistic, mobile-first, blazing-fast, fancy and lightweight theme for the Hugo framework built with TailwindCSS and DaisyUI",https://github.com/jacksalici/salinger-theme,NA,"Salinger Theme 📻Clean and minimalistic Hugo theme built with DaisyUI and TailwindCSS.Salinger is a clean, minimalistic, mobile-first, blazing-fast, fancy and lightweight theme for the Hugo framework.
Born as the theme for my website (demo), recently it has been completely rebuilt using Tailwind and DaisyUI.Why this name? During the design of the light mode homepage, I was inspired by the Italian edition cover by Einaudi of The Catcher in The Rye by J.D. Salinger.Features 🗂️  TailwindCSS and DaisyUI 🌼 framework Responsive and mobile-first 📲 Google Analytics 📈 Custom visibility of metaDark, Auto and Light Mode 🌚 2️⃣ hamburger Menu with custom iconTweemoji Emoji support 🐧 SEO support (100% score on PageSpeed) 🚀Quick Start ⚠️ Preview the example site # prerequisites: git, hugo, and npm.
git clone https://github.com/jacksalici/salinger-theme.git salinger
cd salinger
npm install
cd example-site
hugo server -t ../..
A demo usage can also be seen on my website.Install the theme Prerequisites: Please, check to have installed a recent version of hugo, git, and npm.Add the repository to your Hugo Project repository as a submodule:git submodule add https://github.com/jacksalici/salinger-theme.git themes/salinger
Configure your hugo.toml. I suggest copying the demo file present in the example site folder. Please note that some parameters are mandatory for the theme to work properly.Install the dependencies in the theme folder and the main folder.cd themes/salinger
npm install
cd ../..
hugo mod npm pack 
npm install
You can build your site with hugo server and admire the result at http://localhost:1313/.Update your installation If you want to get the latest update of the Salinger theme please execute this command:git submodule update --remote --merge
Please note that during the development of the new major version (v2.x.x - Jul 23) a rebase has been made and the commit history is not so clean. If you came from the legacy version, updating it can be a bit annoying. I suggest removing completely the submodule and adding it again.Usage 📐 Check out the wiki and the example site.License 📜 The Salinger theme code is licensed under the MIT license.See AlsoAcademicBeautiful HugoGokarnaHugo Blox - TailwindHugo Liftoff",NA
Matt Button,22,2023-08-23,MIT,"Blog, Bootstrap, Landing, Personal, Responsive",Silhouette Hugo,A responsive blog theme for Hugo.,https://github.com/mattbutton/silhouette-hugo,NA,"Hugo Silhouette ThemeA responsive blog theme for Hugo, created by Matt Button.Based on Bootstrap 4.1.Home Page Post without a feature image Post with a feature image Footer About the theme Hi I’m Matt Button, the creator of the Hugo Silhoutte theme.I’ve been a fan of Hugo for many years.Back in 2016, inspired by the theme on Troy Hunt’s blog, I hacked together a custom Hugo theme for my personal blog using Bootstrap 3.In 2018 I rebuilt the theme using Bootstrap 4.1, and decided to share it with the Hugo community under the name “Silhouette Hugo”.The silhouette image is taken from this photo by Karl Magnuson.Quickstart Create a new Hugo site by typinghugo new site <SITENAME>
Then clone this repository:cd <SITENAME>/themes
git clone https://github.com/mattbutton/silhouette-hugo.git
Add the theme to your site’s config file:cd ..
echo 'theme = ""silhouette-hugo""' >> config.toml
If you want some starter content, you can copy some from the exampleSite folder:cp -r themes/silhouette-hugo/exampleSite/* .
Then start up the site via:hugo serve -D
License This theme is provided under the MIT License.If you use this theme, please provide attribution.See AlsoHB Starter Theme TemplateHugo InitioPaigeUp Business ThemeAcademic",NA
NA,22,2022-09-20,MPL-2.0,"Bootstrap, Contact, Docs, Minimal, Multilingual, Responsive",UNICEF Inventory,"UNICEF Inventory theme, for use with Hugo. A simple knowledgebase to share information with others.",https://github.com/unicef/inventory-hugo-theme,https://unicef.github.io/inventory-hugo-theme/,"UNICEF Inventory themeUNICEF Inventory theme, for use with Hugo static site generator.
A simple knowledge-base to share information with others.:star2: Features The UNICEF Inventory theme is designed to be a knowledge-base for thematic, indexed information.
It was designed to meet a need for knowledge-transfer within the UNICEF Office of Innovation.
The theme includes the following features:General features Created with Bootstrap v4.Search bar with suggestions to perform simple searches across all contentBrand and identity customization (colors, fonts, logos managed in config file)Frequently Asked Questions (F.A.Q.) shortcode for a spoiler dropdown in any contentAdmonitions to call out specific information and details in an articleAuthor bylines to identify the author of an article and optionally their contact informationResponsive design for a mobile-friendly navigation and user experienceMultilingual support (U.S. English, Spanish/español included; others possible)Google Analytics supportContact form (e.g. Formspree)OpenGraph tag support (i.e. Twitter card metadata and other social media websites supported)Previous/Next buttons in articles for sequentially-ordered contentRedirect post types to redirect the user to a URL hosted on an external websiteUNICEF-specific features Team Profiles (example):
Create a special post for a UNICEF Venture Fund start-up company with an open source product description and other metadata.DPG Standard indicators (example):
Use two nested categories to highlight each of the nine Digital Public Goods Standard indicators, provide more information about the indicator, and show site articles that describe the indicator.Examples Browse other sites deployed using the UNICEF Inventory theme.
If you use the theme in your Hugo site, please add your website to this README section as an example.UNICEF Open Source InventorySustainOSS Design & UX knowledgebaseUNICEF Toolkits:UNICEF Data Science & A.I. ToolkitUNICEF Drones ToolkitUNICEF Software Development Toolkit:electric_plug: Installation See the installation guide.
The guide provides recommended practices for deploying the UNICEF Inventory theme to GitHub Pages.:nut_and_bolt: Configuration See exampleSite/config.yaml for the example site configuration file.:busts_in_silhouette: Contribute to the UNICEF Inventory theme See the UNICEF Inventory theme CONTRIBUTING.md for contribution guidelines, conventions and courtesies, and help with setting up a developer environments.:speaking_head: Share your feedback Notice a bug or have an idea on how to improve the site?
Consider opening a user story or use another GitHub Issue template to report bugs and request new features.:memo: Legal Originally forked from Dot, a Hugo theme by ThemeFisher.Licensed under MPL-2.0.
From choosealicense.com:Permissions of this weak copyleft license are conditioned on making available source code of licensed files and modifications of those files under the same license (or in certain cases, one of the GNU licenses).
Copyright and license notices must be preserved.
Contributors provide an express grant of patent rights.
However, a larger work using the licensed work may be distributed under different terms and without source code for files added in the larger work.See AlsoAcademicPaigehugo-arogya-themeAce documentationAdritian Free Hugo Theme",NA
Undus,1,2023-12-05,MIT,"Blog, Dark, Light, Minimal, Responsive",hugo-pure,NA,https://github.com/undus5/hugo-pure,https://undus5.github.io/hugo-pure/,"hugo-pureA simple and clean Hugo themeFeatures Dark mode support (auto)Responsive designNo JavascriptUsage git submodule add https://github.com/undus5/hugo-pure themes/hugo-pure
echo ""theme = 'hugo-pure'"" >> config.toml
See AlsoAcademicAnubisBlondeBlowfishBootstrap-BP",NA
Luke Morgan,1,2023-11-26,MIT,"Blog, Dark, Dark Mode, Light, Minimal, Responsive",Spaced Blog,"A beautifully simplistic blog theme. Mobile responsive, light/dark mode based on user system color scheme preference, a11y support and page search out of the box.",https://github.com/Morgscode/hugo-theme-spaced-blog,https://blog.luke-morgan.com,"Spaced Blog ThemeA beautifully minimalistic Hugo theme for blogs. With dark mode, page search and a11y out of the box.Main features:Dark mode supporta11y supportPage searchMobile responsiveBlog author accreditationConfigurable colorsConfigurable cover imagesInstallation Create a new Hugo site:$ hugo new site [path]
Clone this repository into themes/ directory:$ cd [path]
$ git clone https://github.com/Morgscode/hugo-theme-spaced-blog.git themes/spaced-blog
Or if you’re version controlling your website - you can add it as a submodule$ cd [path]
$ git submodule add https://github.com/Morgscode/hugo-theme-spaced-blog.git themes/spaced-blog
Add this line in the config.toml file:theme = ""spaced-blog""
Configuration Site params In your config.toml file, define the following variables in params:description = This will be the default html meta description for the blog and it’s homepage. It can be overridden by setting a description in the front-matter of any page or post.useCover: wether or not you want to use a cover images for the blog and its postscoverLocation: The location of the cover file you’d like to use for the blog[[params.author]][[params.author]]name: The name of the primary blog author[[params.author]]description: The primary blog author’s descriptionTo set the blog author’s avatar image - place an image named blog-author.jpg in your sites /content/images folder.To add a menu item, add the following lines in menu:[[menu.menu_name]]
  identifier = ""item-identifier""
  name = ""Item Name""
  url = ""/item-slug""
The basic menu structure you’ll need for this theme is:[menu]
  [[menu.main]]
    identifier = ""home""
    name = ""Home""
    url = ""/""
    weight = 1
  [[menu.main]]
    identifier = ""categories""
    name = ""Categories""
    url = ""/categories""
    weight = 2
  [[menu.main]]
    identifier = ""tags""
    name = ""Tags""
    url = ""/tags""
    weight = 3
Read the Hugo documentation for more informations about menus.Site colors You can customise the theme colors from your sites config.[params.colors]
  black = ""#222222""
  white = ""#fafafa""
  grey = ""#dcdde1""
  red = ""#e84118""
  blue = ""#00a8ff""
  green = ""#4cd137""
  yellow = ""#fbc531""
  purple = ""#9c88ff""
Site icon (favicon) The theme ships with a default site icon (favicon) that is used in the tab in your browser but also the shortcut icon on mobile devices. To use your own favicon, just add it
to your sites assets directory /assets/images/favicon.(png|ico).Favicons are best kept with an aspect ratio of 1:1.Cover images To use cover images for the blog: set the useCover param to true.[params]
  useCover = true
To add a default cover image for your entire blog, name your image blog-cover.(jpg|png) and place in assets/images.The cover-image.html template uses a cover image hierarchy which goes as:cover.(png|jpg) in page bundle.The coverLocation page param.The coverLocation site param.A .jpg image in the assets/images directory.a .png image in the assets/images directory.The templates use the coverLocation params with the resources.GetMatch Hugo template funcions which looks in the site’s /assets directory first and then the theme’s /assets directory.syntax highlighting This theme ships with a slightly altered monakai syntax highlighting stylesheet and more or less the default markup highlight configuration. To use it set the noClasses param to false in the markup highlight config.[markup]
  [markup.highlight]
    noClasses = false
The theme’s base layout pulls in a css stylesheet which is a tiny variation on the monokai theme to handle the highlighting styles: /assets/css/syntax.cssSidebar The theme ships with a sidebar comes with a search form which has %like% behaviour for all of your page names.To active the sidebar set the usesidebar site param to true in your config.toml[params]
  useSidebar = true
Google analytics, opengraph and twitter cards This theme ships with standard support for Hugo’s Internal templates.Load these into your site config like you would any other Hugo site.Read about Internal templates in HugoLicense This theme is released under the MIT License.TODOS: Add author social media icon supportAdd about the author block for single postAdd support for Github-like copy to clipboard for block-level code elementsAdd support for single post author overrideAdd support for multiple authors per postAdd support for lazyloading imagesSee AlsoBlowfishCompostHugoplateLightbiPaige",NA
NA,1,2023-11-13,GNU GPLv3,"Dark, Minimal, Personal",Coming Soon,Simple page with name and a countdown to your website's release date & time,https://github.com/mansoorbarri/coming-soon,https://cshugo.mansoorbarri.com/,"Coming Soon Coming soon is hugo theme which can be used before publishing your actual site to build hype or to just have something on your domain while you develop your site.Author: Mansoor Barridemo: https://cshugo.mansoorbarri.com Features MinimalCustomisableResponsiveSEO ReadyScreenshot Installation Detailed steps: wiki pagegit submodule add https://github.com/mansoorbarri/coming-soon.git themes/coming-soon
Performance Google PageSpeed InsightsLicence This code is licensed under GNU GPLv3See AlsoAcademicAnatoleAnubisAstatineBear Cub",Mansoor Barri
Michael Blum,21,2023-09-10,MIT,"Blog, Bootstrap, Responsive",Hugo Now,a Hugo port of Jekyll Now,https://github.com/mikeblum/hugo-now,NA,"Hugo NowA Hugo port of Jekyll Now. The Hugo implementation is inspired by Hemingway.Screenshots Home Page Posts Projects Table of Contents Features Bootstrap V4Update from Bootstrap 3 to 4Font AwesomeLatest Font Awesome iconsProgressive EnhancementDisabling Javascript should retain the same experience.Powerful StylingUsing the power of SASS to power our build pipeline. All major dependencies have .scss support.Modern Build PipelineWithout Jekyll's Asset pipeline, a Hugo theme needs a build system. I opted for gulp.jsEmoji :sunglasses:Support for emojis found here: Emoji CheatsheetAvailable for::white_check_mark: tags:white_check_mark: titles:white_check_mark: posts / .ContentSyntax HighlightingRather then using a JS library like hightlight.js I opt for server-side rendering with Pygments to keep in line with progressive enhamcements. Here is Hugo's opinion on the matter:The advantage of server side is that it doesn’t depend on a JavaScript library and consequently works very well when read from an RSS feed.I would argue site usability / robustness far out weighs build times.Google AnalyticsConfigure Google Analytics with `GoogleAnalytics`Table of ContentsHeadings are resolved into a styleable Table of ContentsEnabled via toc in your front matter:toc: true
true = show table of contentsfalse = hide table of contentsInstall Hugo Module - Preferred Add Hugo Now as a Module:# pygments
PygmentsCodeFences = true
PygmentsStyle = ""pygments""

[module]
  [[module.imports]]
    path = ""github.com/mikeblum/hugo-now""
Update to the latest version:hugo mod get -u github.com/mikeblum/hugo-now
Git Submodule Add Hugo Now as a submodule:git submodule add git@github.com:mikeblum/hugo-now.git themes/hugo-nowYour .gitmodules should now contain:[submodule ""themes/hugo-now""]
	path = themes/hugo-now
	url = git@github.com:mikeblum/hugo-now.git
Remember to commit your .gitmodulesConfigure config.tomlbaseurl = ""http://example.org/""
languageCode = ""en-us""
title = ""My New Hugo Site""

# use latest
[module]
  [[module.imports]]
    path = ""github.com/mikeblum/hugo-now""

# or use local fork at themes/hugo-now
[module]
  replacements = ""github.com/mikeblum/hugo-now -> ../..""
  [[module.imports]]
    path = ""github.com/mikeblum/hugo-now""



# analytics
# deprecated
GoogleAnalytics = ""UA-XXXXXX""
UmamiAnalytics = ""XXXX-XXXX-XXXX""

[taxonomies]
  category = ""categories""
  tag = ""tags""

[params]
  description = ""Hugo port of Jekyll Now""
  author = ""Hugo Now""
  keywords = [""hugo-now"", ""hugo""]
  avatar = ""/images/hugo.png""
  displayauthor = false
  # pygments
  PygmentsUseClasses = true
  PygmentsCodeFences = true
  # pagination
  paginate = 10
  paginatePath = ""page""
Content Use SVG rather than PNG / JPGthey style better and take less bandwidthPygments styles use SASSPygmentsStyle is configured by changing the sass/style.scssDefaults to default Pygments style - see Pygments StylesBuild Hugo hugo server
You can go to localhost:1313 and this theme should be visible.SASS Build SASS updates by downloading Dart SASSDevelopmentsass sass/style.scss static/css/style.cssProductionsass sass/style.scss static/css/style.css --style compressedSet the HUGO_ENV variable to production to use the minified CSS.License Hugo Now is licensed under the MIT License.Author Michael BlumCredits is based on Hemingway created by Asuka Suzuki.See AlsoBeautiful HugoBlogRaBootstrap Theme for Personal Blog and DocumentationsBootstrap-BPHB Starter Theme Template",NA
Humberto Rocha,21,2023-02-06,MIT,Blog,ColorDrop,"Customizable, monochromatic and minimalist hugo theme for personal blogs",https://github.com/humrochagf/colordrop,NA,"ColordropCustomizable, monochromatic and minimalist hugo theme for personal blogs.Installation (with git) To install colordrop theme using git you first must ensure your blog folder is already a git repository:git init
Then add it as submodule of your repository:git submodule add git@github.com:humrochagf/colordrop.git themes/colordrop
ORgit submodule add https://github.com/humrochagf/colordrop.git themes/colordrop
And add this configuration to your blog config.yaml:theme: colordrop
toml:theme = ""colordrop""
Version pinning You can pin a version of the theme by checking to a version tag:cd themes/colordrop
git checkout v1.5.0
cd ../..
git commit -m ""Pinning theme to version 1.5.0""
Installation (without git) You just need to download it at the version you want from the release page and extract it to the themes folder of your blog making sure it has the following structure:.
└── themes
    └── colordrop
And add this configuration to your blog config.yaml:theme: colordrop
toml:theme = ""colordrop""
Customize Colors The theme colors can be customized by changing the themeColor and themeInverseColor variables at params.yaml:params:
  themeColor: ""#000000""
  themeInverseColor: ""#ffffff""
toml:[params]
themeColor = ""#000000""
themeInverseColor = ""#ffffff""
Home page and Logo The website logo can be set with the variable siteLogo while the variable description will be the displayed at the website home page.yaml:params:
  description: Welcome to my blog...
  siteLogo: ""logo-photo.png""
toml:[params]
description = ""Welcome to my blog...""
siteLogo = ""logo-photo.png""
Custom CSS You can load your custom CSS files by adding them under the static folder, e.g. static/css/custom.css and then defining the parameters as a list.yaml:params:
  custom_css: [""css/custom.css""]
toml:[params]
custom_css = [""css/custom.css""]
Website Example You check my blog to see the theme fully running.Obs: This theme uses pipes to compile sass so you’ll have to use hugo extensions.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Xiaoliang Wang,0,2023-12-08,MIT,"Blog, Dark, Multilingual, Personal, Responsive",Tailwind,"Clean card Hugo theme for blog, created by using tailwindcss",https://github.com/tomowang/hugo-theme-tailwind,https://hugo-theme-tailwind.tomo.dev/,"Hugo Theme Tailwind
Hugo theme build using Tailwind CSS, mostly for bloggers.Check https://hugo-theme-tailwind.tomo.dev/ for demo.Features High Lighthouse scoreDark mode - switch between light and dark mode, or default by system prefers.SVG icons thanks to tabler iconsGoogle Analystics - add your Google Analytics ID to hugo.tomlComments settings for disqus and giscusSocial media link data settingsAdditional short code: bilibili, asciinemaResponsive designMultilingualDefault image process for lazy load and srcsetInstallation Git You can add the theme as a submodule by running the following command in the
root directory of your Hugo site:git submodule add https://github.com/tomowang/hugo-theme-tailwind.git themes/tailwind
# Or to update to the latest version
git submodule update --remote
Configuration You can use following configuration for basic usage.baseURL = ""https://examnple.com/""
title = ""Hugo Theme Tailwind Example Site""
author = ""Your Name""
copyright = ""Your Name""
paginate = 10
languageCode = ""en""
theme = ""tailwind""

[params]
  # dir name of your blog content (default is `content/posts`).
  # the list of set content will show up on your index page (baseurl).
  contentTypeName = ""posts""

  [params.header]
    logo = ""logo.webp""

  [params.footer]
    since = 2023
    poweredby = true

[menu]

  [[menu.main]]
    identifier = ""post""
    name = ""Post""
    pageRef = ""/posts""
    weight = 0

  [[menu.main]]
    identifier = ""about""
    name = ""About""
    pageRef = ""/about""
    weight = 10

[taxonomies]
category = ""categories""
tag = ""tags""
series = ""series""
For advanced usage, please refer to config directory config/_default and
exampleSite/config/_default.
Some of the configuration options are:markup: goldmark and options for markdown renderingparams.header: header settings (logo for now)params.footer: footer settings (copyright years, powered by, etc.)contentTypeName: dir name of your blog content (default is content/posts).params.taxonomies.icons: icons for taxonomies (categories, tags, series, etc.).params.giscus: giscus settingsparams.social_media: social media links shown in the footerFor social media link data, you can refer entries in params.social_media.items
(You can add more or disable exsited entries in params.social_media.items).[[social_media.items]]
enabled = false
title = 'Facebook'
icon = 'brand-facebook'
link = 'https://www.facebook.com/'
Development This theme use Tailwind CSS for styling. If you want to make some changes,
use pnpm install to install dependencies.The CSS process is inspired by hugo-tailwindcss-starter-theme.Development: npm run dev, this will generate css for theme users and start example site.exampleSite is fetched from https://github.com/gohugoio/hugoBasicExample
with some modifications.Add new icons Search the icon in tabler icons.
Download or Copy SVG and paste to theme/tailwind/assets/icons/.
Remember to remove width=""24"" height=""24"" in the SVG file. Use the icon file
name in your site configuration. Or if you want to update theme layout content,
you can use the following code.<i class=""h-6 w-6 flex-none"">
  {{ partial ""icon"" ""brightness-down"" }}
</i>
See AlsoAcademicAnubisBear CubBootstrap Theme for Personal Blog and DocumentationsColor Your World",NA
Gabriele Musco,0,2023-12-05,AGPL3,"Blog, Dark",Hugo Ficurinia,A prickly blog theme for Hugo,https://gitlab.com/gabmus/hugo-ficurinia,NA,"FicuriniaA prickly blog theme for HugoDemoCode for the demo website (really my personal website)Screenshot gallery showcasing 256 of the possible configurations that Ficurinia offers.CustomizationConfiguration These are some parameters you can use in your config.toml to customize Ficurinia:baseURL = ""https://example.com/""
theme = ""hugo-ficurinia""
title = ""My nice blog""
languageCode = ""en""
defaultContentLanguage = ""en""

# this will be included in the footer after the current year the site is last
# built, followed by the (c) symbol
# you can use markdown inside this field
copyright = ""Some copyright notice - [my license](https://example.com/license)""

paginate = 5  # number of articles per page in the index
summaryLength = 70  # number of words for article summaries


[params]
    author = ""Gabriele Musco""
    description = ""A description for my website""  # this will be added as metadata

    posts = ""posts""  # content directory where to find home page posts; default searches in ""posts"" and ""post""
    showPostsLink = true  # show or hide the link to the simple post list
    extraContentDirs = []  # other content directories to render similarly to the home page
    showcaseDir = ""showcase""  # create a content directory that shows a special showcase section in the home page

    # shows a specified single page as a home page, instead of the traditional articles list
    # requires setting `homeSinglePage`
    # goes well with extraContentDirs
    showSinglePageAsHome = false
    homeSinglePage = ""/home""

    # It's best to put these icons in the ""static"" folder of your site
    logo = ""/logo.svg""
    favicon = ""/favicon.png""  # 32x32
    faviconIco = ""/favicon.ico""  # 32x32
    appletouch = ""/apple-touch-icon.png""  # 180x180
    svgicon = ""/logo.svg""
    icon512 = ""/icon512.png""  # 512x512 png image

    logoRightOfTitle = false  # positions the logo to the right of the title; default: false

    showTags = true  # show the Tags menu item; default true
    showRss = true  # show the link for the RSS feed; default true

    imageInArticlePreview = false  # show images in article preview; default false
    fitImageInArticlePreview = false  # make article preview images fit the article preview instead of getting cropped
    articleSummary = true  # show a summary in article preview; default true
    
    fontFamily = ""JetBrains Mono""  # changes the font, default ""JetBrains Mono""
    titleFontFamily = ""JetBrains Mono""  # font used for titles and headings
    monospaceFontFamily = ""JetBrains Mono""  # changes the monospace font for code, default ""JetBrains Mono""

    # multipliers applied to font sizes, useful for custom fonts that may be too big or too small
    titleFontSizeMultiplier = 1.0
    mainFontSizeMultiplier = 1.0
    monoFontSizeMultiplier = 1.0

    contentWidth = ""1000px""  # maximum width of the site content, css syntax

    paperCards = false  # enable paper card style; default false
    buttonTags = false  # enable button tag style; default false
    tagsInArticlePreview = true  # enable tags list in the article preview card
    gridView = false  # show post list as a grid. goes well with paperCards
    bigArticleTitle = false  # makes the title in the single article view bigger
    navtype = ""standard""  # changes the style of the pagination, available styles are: ""standard"", ""circles""
    enableShadow = false  # shows a shadow around some elements
    menuStyle = ""standard""  # changes the style of the main site navigation menu, available styles are: ""standard"", ""buttons""
    inputStyle = ""standard"" # changes the style of inputs (like the searchbar), available styles are: ""standard"", ""buttons""

    enableSearch = true  # enable search page
    searchbarEverywhere = true  # if the searchbar should be shown in every page; requires enableSearch
    searchMenuLink = false  # add a search link to the navigation menu; requires enableSearch
    mobileHamburgerNav = false  # alternative hamburger menu layout for the main nav menu when screen is small

    enableFeatured = false  # enable a particular view for articles marked as featured (featured: true in the article frontmatter)

    underlineTitleLinks = false  # show an underline also for links that are titles

    # enable comments support with commento using the script from your server
    commento = ""https://example.com/js/commento.js""

    # enable comments support with cactus comments (cactus.chat)
    cactusCommentsSiteName = ""example.com""
    cactusCommentsServerName = ""cactus.chat""
    cactusCommentsHomeserver = ""https://matrix.cactus.chat:8448""

    # enable analytics using Plausible
    plausibleScriptUrl = ""https://something.com/...""
    plausibleDomain = ""example.com""

    # enable analytics using Umami
    umamiScriptUrl = ""https://something.com/...""
    umamiWebsiteId = ""example-tracking-code""

    enableShareOnFediverse = false  # enable a button at the end of an article to share it on the fediverse
    tocBeforeImage = false  # show the table of contents before the main article image; default false

    # WARNING: deprecated! Use [[menu.icons]] instead, look below
    # links = [
    #     [""GitLab"", ""https://gitlab.com/gabmus""],
    #     [""GNOME"", ""https://gitlab.gnome.org/gabmus""],
    #     [""YouTube"", ""https://youtube.com/TechPillsNet""]
    # ]

    # you can customize all of the colors in this theme
    # Colors are defined in data/colors.yml

    # alternative sidebar layout
    enableSidebarLayout = false
    tocInSidebar = false  # if the sidebar is enbabled, show the TOC in the sidebar

    # redirect to baseURL if current URL host doesn't match
    # useful if deploying in gitlab pages with custom domain and don't want
    # the username.gitlab.io/website url to persist
    # this requires you to set baseURL (see above)
    forceRedirect = false

    infiniteScrolling = false  # activates infinite scrolling instead of regular pagination
    enableFooterColumns = false  # activates footer columns, as described below
    enableJumbotron = false  # enables jumbotron, as described below
    # related articles will be selected randomly based on tags and shown at
    # the bottom of the article, after the comments
    enableRelatedArticles = false
    relatedArticlesNum = 2  # how many related articles to show
    randomRelated = false  # sorts related articles in random order (randomized at built time)

[menu]
    # these links will be added to the main navigation menu, sorted by weight
    # other elements in this menu are added automatically from the ""pages"" folder
    # the folder it will look into can be customized with the pages variable
    # in params above
    [[menu.main]]
        identifier = ""about""
        name = ""About""
        url = ""/about/""
        weight = 10
    # these links (menu.icons) will be added as icon links below the main nav
    [[menu.icons]]
        identifier = ""gitlab""
        name = ""GitLab""
        url = ""https://gitlab.com/gabmus""
        weight = 10
    [[menu.icons]]
        identifier = ""gnome""
        name = ""GNOME GitLab""
        url = ""https://gitlab.gnome.org/gabmus""
        weight = 20

# this section is necessary if you want infinite scrolling
# it allows to output the article list as paged JSON so that ""pages"" can be retrieved via javascript
[outputs]
    home = [""HTML"", ""JSON""]
Supported icons For the [[menu.icons]] menu. They match identifier, name and url can be whatever. Here’s a list of supported identifiers:discordemailfacebookgithubgitlabgnomeinstagramlinkedinmastodonmatrixpeertubephonepleromarsssteamtelegramtwitterxmppyoutubeColors Colors are completely customizable. They are defined in data/colors.yml. Just copy that file over to yoursite/data/colors.yml and customize it to your liking.Footer columns You can add various columns of links in the footer using the data/footer_columns.yml file.Following is an example configuration:- title: My other projects
  links:
    - title: HydraPaper
      link: https://hydrapaper.gabmus.org
    - title: Ada UI
      link: https://gitlab.com/gabmus/ada-ui
- title: About me
  links:
    - title: My personal website
      link: https://gabmus.org
    - title: My GitLab
      link: https://gitlab.com/gabmus
    - title: My GNOME GitLab
      link: https://gitlab.gnome.org/gabmus
Jumbotron You can add a jumbotron at the beginning of the home page using the data/jumbotron.yml file.Following is an example configuration:title: My awesome website
hugeTitle: false
subtitle: Some fancy subtitle
image: /jumbotron_image.svg
imagePosition: left  # values: left, right, top, bottom
background: /img/jumbotron_bg.png
backgroundVideo: /jumbotron_video.mp4  # will replace the background image
# it's best to provide both an mp4 and a web source for the video for better compatibility
backgroundVideoMp4: /jumbotron_video.mp4
backgroundVideoWebm: /jumbotron_video.webm
videoOpacity: 1.0
textShadow: false
fullscreen: false
downArrow: false
whiteText: false  # force white text in the jumbotron
links:
  - title: About me
    link: /pages/about
  - title: Read my blog
    link: /posts
Post parametersEvery post can have various parameters in the frontmatter, here are some that you may find usefultitle: the title of the articledate: usually automatically populated, holds the date and time of the post creationdescription: a brief description of the post, useful for SEO optimizationtags: an array of tags, useful for searching similar articlesimage: a link to a feature image for the article, shown in the preview as wellalt: alternative text to be shown if image is not available or fails to downloadimageCaption: a markdown text rendered as a caption for the article image described abovefeatured: boolean, indicate if the post should be shown as featuredcomments: boolean, if true it enables comments for the current post, if false it disables them (default is true)showDate: boolean, true by default, if false hides the date. Useful for non-article pages where the date isn’t importantshowTitle: boolean, true by default, if false hides the title.showShare: boolean, true by default, if false hides the share button.norss: boolean, if set to true the page will be skipped in the rss feednosearch: boolean, if set to true the page won’t show up in searchestoc: boolean, if set to true a table of contents will be shown for the articleTable of contents settings You can tweak the TOC settings in your config.toml:[markup]
  [markup.tableOfContents]
    endLevel = 5
    ordered = false
    startLevel = 1
Generate iconsIt’s best to use the provided generate_icons.sh script to generate all necessary icons for your website. This script requires ImageMagick, that you will need to install separately.For the best results, place your logo in svg format inside the static directory of your website, rename it to logo.svg and then call ./themes/hugo-ficurinia/generate_icons.sh static/logo.svg.The script will take care of generating all the icons you need.Finally, make sure to edit your config.toml to include the following:# ...
[params]
    logo = ""/logo.svg""
    logoAltText = ""Logo""
    favicon = ""/favicon.png""
    faviconIco = ""/favicon.ico""
    appletouch = ""/apple-touch-icon.png""
    svgicon = ""/logo.svg""
    # ...
Inject custom contentFicurinia supports injecting custom content into the theme. There are several files you can create in layouts/partials/inject that will be included inside the theme in different places.PartialPlacementlayouts/partials/inject/body.htmlBefore closing the body taglayouts/partials/inject/content-after.htmlAfter a post or page contentlayouts/partials/inject/content-before.htmlBefore a post or page contentlayouts/partials/inject/footer.htmlAt the beginning of the footerlayouts/partials/inject/head.htmlBefore closing the head taglayouts/partials/inject/header-after.htmlBefore closing the headerlayouts/partials/inject/header-before.htmlAt the beginning of the headerDoes Ficurinia mean anything?It’s Sicilian for Indian fig, also known as prickly pear cactus.See AlsoAcademicAnatoleAnubisAstatineAutoPhugo",NA
NA,0,2023-11-27,MIT,"Bootstrap, Dark, Minimal, Responsive",Glim Midnight,A minimal links page made with Hugo,https://github.com/mansoorbarri/glim-midnight,http://glim-midnight.pages.dev/,"Glim Midnight A minimal links page made with Hugo.Author: Maheen WarisMansoor Barridemo: https://glim-midnight.pages.dev Features BootstrapDarkMinimalResponsiveScreenshot Installation Make a new hugo site & clonehugo new site {sitename}
cd {sitename}
git clone https://github.com/mansoorbarri/coming-soon.git themes/coming-soon
Full guide can be found here: https://github.com/mansoorbarri/glim-midnight/wikiPerformance Google PageSpeed InsightsLicence This code is licensed under MITSee AlsoBootstrap-BPLightbiLotus DocsPaigeTikva","Maheen Waris, Mansoor Barri"
Isak Solheim,0,2023-11-21,MIT,"Blog, Light, Personal, Responsive",cyberscape,A lively and fun Hugo theme for creating personal websites 🌐,https://github.com/isaksolheim/cyberscape,NA,"CyberscapeA lively and fun Hugo theme for creating personal websites 🌐💻 Demo site🔨 Demo site repoOverview Cyberscape is designed to be a vibrant and engaging theme, perfect for those who enjoy the process of building personal websites.Install To get started with Cyberscape, use the following command:git submodule add https://github.com/isaksolheim/cyberscape themes/cyberscape
Then, open hugo.toml and change the theme to ""cyberscape"":theme = ""cyberscape""

# Enable this for tailwind in markdown files
[markup.goldmark.renderer]
unsafe=true

# Add menu links to things from /content/ here (eg. markdown.md)
[[menu.main]]
name = ""markdown""
url = ""/markdown/""
weight = 1
Navigate to the themes directory and install dependencies:cd themes/cyberscape
npm i
A Note on Tailwind Cyberscape uses Tailwind CSS for styling. To ensure styles are up to date during development, run the following command from the themes directory:npm run watch
This command will compile your Tailwind CSS as you make changes, keeping your development process smooth and streamlined.The tailwind.config.js comes configured like the following:/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [""content/**/*.md"", ""layouts/**/*.html"", ""../../content/**/*.md""],
  theme: {
    extend: {},
  },
  plugins: [],
};
If you wish to write Tailwind in any additional directories, add their relative path from the config file to the content field.Contributing Feel free to contribute!License MITSee AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
CNCF,20,2023-10-05,MIT,"Archive, Blog, Company, Light, Multilingual, Responsive",Dot-Org,"This modern, accesible, performant theme is ideal for powering the website of a small organization",https://github.com/cncf/dot-org-hugo-theme,https://dot-org-hugo-theme-demo.netlify.app/,"Dot-Org theme for HugoThis Hugo theme is ideal for powering the website of a small organization. It was built initially for the TODO Group and has the following strengths:Modern - simple yet effective modern designAccessible - design and markup comply with WCAG 2.1 AA guidelinesPerformant - HTML/CSS/JS written from scratch to be as fast as possible without relying on frameworks or librariesMultilingual - ready to support multiple languages of contentMega Menu - large menu with dropdown sectionsFAQ accordion - FAQ page with accordion structureView demo siteInstallationThere are two main methods of installing this theme to an existing Hugo site:1) Download it Inside the folder of your Hugo site, run:git clone https://github.com/cncf/dot-org-hugo-theme themes/dot-org-hugo-theme
This downloads the repo from GitHub and puts the contents in your themes folder.To update your theme to future versions:cd themes/dot-org-hugo-theme
git pull
2) Use git submodule Inside the folder of your Hugo site run:git submodule add https://github.com/cncf/dot-org-hugo-theme.git themes/dot-org-hugo-theme
This downloads the repo from GitHub and puts the contents in your themes folder as a git sub-module.To update your theme to future versions:git submodule update --remote --merge
Installing dependencies Copy (at least) the following files from the themes exampleSite to the root folder of your project.themes/dot-org-hugo-theme/exampleSite/package.jsonthemes/dot-org-hugo-theme/exampleSite/postcss.config.jsFor ease you can run from the command line:cp themes/dot-org-hugo-theme/exampleSite/package.json .
cp themes/dot-org-hugo-theme/exampleSite/postcss.config.js .
We recommend a config directory approach to replace your config.toml or hugo.toml file. To get up and running quickly with the default config, you can copy the following folder to the root of your site:themes/dot-org-hugo-theme/exampleSite/config/From the command line in your project root, you can run the following to copy the themes exampleSite config to your project:cp -r themes/dot-org-hugo-theme/exampleSite/config ./config
After that, run this command to install dependencies (requires node.js).npm install
You can then run a local server using:npm run start
or you can build your site using:npm run build
Config files See /exampleSite/config/ for example configuration files.You should copy these across or merge them with your existing config.Custom front matter We have created custom front matter to use in your markdown files:Hide the page title / article header showHeader: false
Custom shortcodes You can use our custom shortcodes to quickly style your website in markdown. Due to the way Hugo deals with nested content, particularly nested shortcodes, you may find that shortcodes that are children of other shortcodes do not render as they should. If this happens to your site, this can often be resolved by allowing Hugo to render “unsafe” HTML. Add the following to your config YAML file:markup:
  goldmark:
    renderer:
      unsafe: true
Button There is a button ready to be inserted in to markdown files:{{< button link=""/path/to/page"" text=""Default Button"" >}}
{{< button link=""/path/to/page"" style=""secondary"" text=""Secondary Button"" >}}
{{< button link=""/path/to/page"" style=""tertiary"" text=""Tertiary Button"" >}}
Options:link # (required) the button linktext # (required) the button textstyle # (optional) secondary, tertiaryCards An outlined box that is useful for highlighting information or using to wrap list elements.{{< cards count=2 >}}
{{< card >}}
## Special Feature 1
Lorem ipsum dolor sit amet consectetuer adipiscing elit aenean commodo
{{< spacer >}}
[Download](#)
{{< /card >}}
{{< card >}}
## Special Feature 2
Lorem ipsum dolor sit amet consectetuer adipiscing elit aenean commodo
{{< spacer >}}
[About us](#)
{{< /card >}}
{{< /cards >}}
Options:count # (optional) number of columns on desktop; 2,3,4. Default: 3.Columns A responsive column structure.{{< columns >}}
{{< column >}}
Column 1
{{< /column >}}
{{< column >}}
Column 2
{{< /column >}}
{{< /columns >}}
Options:count # (optional) number of columns on desktop; 2,3,4. Default: 3.Current Year Insert the current year easily with this shortcode:{{< current_year >}}
Useful for copyright notices and evergreen blog content.iFrame Insert an iFrame with your desired content.{{< iframe title=""My slides"" src=""https://www.slideshare.net/slideshow/embed_code/key/vTNvkwIXN4pmr8"" >}}
Options:src # (required) the page to displaywidth # (optional)height # (optional)title # (optional) the title of the iframe for accessibilityloading # (optional) defaults to lazyImg Inserts an image in a more advanced format than standard Hugo syntax.{{< img src=""/img/blog/image-name.png"" >}}
Options:src # (required) the image linkalt # (optional) describing the image, defaults to filenamewidth # (optional) recommendedheight # (optional) recommendedcaption # (optional) markdown is acceptedloading # (optional) defaults to lazy, use eager above the foldLinebreak Sometimes markdown can bunch paragraphs together. You can force a line return using the linebreak shortcode.{{< br >}}
Responsive Table Wrap your large tables with this shortcode so they overflow on mobile:{{< responsive_table >}}
| Option | Option | Description |
| ------ | ------ | ----------- |
| one    | data   | path to data files to supply the data that will be passed into templates. |
| two    | engine | engine to be used for processing templates. Handlebars is the default. |
| three  | ext    | extension to be used for dest files. |
{{< /responsive_table >}}
Spacer A spacer is useful for spacing out content on your page. By default our spacer inserts a 50px height space. Our spacer is responsive, so on mobile devices the value is reduced by 50% (i.e. 50px space becomes 25px space).{{< spacer >}}
{{< spacer 100 >}}
Table of Contents (TOC) Insert a Table of Contents automatically in to your page. Picks up on all H2 elements on the page.{{< toc >}}
YouTube Enhanced A privacy friendly and fast YouTube embed.{{< youtube_enhanced id=""9oVr7rrNZVI"" >}}
For embedding playlists, a singular video id must be mentioned as playlists do not have a thumbnail.{{< youtube_enhanced id=""xPSXtoJNGLs"" title=""Play Videos from Kubecon"" playlistid=""PLj6h78yzYM2PyrvCoOii4rAopBswfz1p7"" >}}
Options:id # (required)title # (optional) defaults to Play Videoplaylistid # (optional) your playlist IDautoload # (optional) defaults to falsestart # (optional) the start time in seconds, default 0Setting up a local instance for improving this theme If you want to create improvements for this theme for everyone, follow these instructions to launch the exampleSite.git clone https://github.com/cncf/dot-org-hugo-theme.git
cd dot-org-hugo-theme/exampleSite
npm install
npm run dev
Showcase Check out some themes that are using the Dot-Org theme for Hugo:TODO GroupDeepCausalitySee AlsoAcademicBeautiful HugoBootstrap Theme for Personal Blog and DocumentationsLightbiPiko",NA
leafee98,20,2023-09-11,MIT,"Blog, Dark, Light, Personal, Responsive",Flat,A theme with light color and multi-section support,https://github.com/leafee98/hugo-theme-flat,https://leafee98.github.io/hugo-theme-flat/,"hugo-theme-flatThis is a theme I personally use.Features Dark theme support (auto switch by css media query)Muti-Section supportsSide card to display recent updated sectionsResponsive layoutSub-menu supportMulti Section Supports If you use multi sections (with the concept from hugo), the RSS at bottom and Recent at side are ready for displaying those content. However, you will need to set up your menu at config.toml to point the hyperlink to proper destination.If you want to re-order those sections, you need a _index.md at the directory of the section to set proper weight at front matter, just alike what was done at the exampleSite, see /exampleSite/content/essays/_index.md. See the predefined variable weight at docs.Note that separating taxonomies according to different sections is not implemented yet. So better to only use taxonomies inside a specific section.For a better understand, if you have to posts A and B in section S1 and S2, both of the posts has the same tag T1, like the follow.post A: section S1, tag T1, tag T2
post B: section S2, tag T2
When you open the index page of T1, there will be two posts, rathor than post A when you are in section S1 and post B when you are in section S2.tag T1: post A, post B
tag T2: post A
Special Thanks The wordpress theme Allium, and here is its home page. I like this theme very much when I’m using wordpress, but I don’t have it on hugo, so I try my best to write a theme similar with it. There are many designs in this theme refers to it.The hugo theme jane and mini, this is my first time to write a hugo theme, I referred this two themes’ project structure and way of handling problems.See AlsoAcademicAnubisBlondeBlowfishBootstrap Theme for Personal Blog and Documentations",NA
Sebastian Pech,20,2023-07-09,MIT,"Blog, Dark, Light, Minimal, Multilingual, Responsive",Materialize-BP,MaterializeCSS based Hugo theme which supports out of the box best practices.,https://github.com/spech66/materialize-bp-hugo-theme,NA,"Materialize-BP hugo themeMaterializeCSS based Hugo theme which provides out of the box best practices like performance and SEO readiness. Featured images will be resized automatically. This is based on the Hugo docs, hugo-best-practices, Front-End Checklist and the Front-End Performance Checklist.Other themes by Sebastian Pech: Bootstrap-BP, Materialize-BP,
Bootstrap-BP hugo startpage.Table of contents Materialize-BP hugo themeTable of contentsFeaturesInstall the themeUpdate the themeRun example siteConfiguration and theme specific settingsScreenshots of cofigurationsGoogle AnalyticsPage templates / archetypesSchema.org supportImages, Open Graph and Twitter CardsMenusSocial IconsCustom CSS/JSFeatures Color themesSEO best practices supported (Schema.org, open graph, meta information, &mldr;)Automatically resizing of imagesOne minified file per ressource only (js, css)CDN font support (Google Fonts, &mldr;)Optional masonry-like mode for startpageSettings for easy customization of layouts and featuresMultiple page templates / archetypes supportedIcons for Social MediaCustom css/jsMultilingual and i18n support&mldr;Install the theme With Git installed, run the following commands inside the Hugo site folder. If Hugo has not yet been installed, read the setup guide here.mkdir themes
cd themes
git clone https://github.com/spech66/materialize-bp-hugo-theme.git
You can get a zip of the latest version of the theme from the home page and extract it to the themes folder.Update the theme Go to the themes folder as in the installation and run the following command.git pull
Run example site Go to the exampleSite folder from the theme themes/materialize-bp-hugo-theme/exampleSite and run the following command.hugo server --themesDir ../..
Configuration and theme specific settings Most settings should be done with hugo specific variables. There are only a few (optional) additional [params].
Use the config.toml from the exampleSite subdirectory as base.startPageColumns = true will show the start page in a Masonry-like mode.customDateFormat = ""02.01.2006"" to override the date format.showListsGrouped = true to add headers for every year.showPostSummary = true to only show a summary on index and lists.alwaysExpandMenu = true to expand the menu on non-mobile devices otherwise the mobile button is shown on all devices. (WiP - Only in bootstrap at the moment)hideReadingTime to hide reading time.Theme colors might be changed using the main colors from Materialize color palette.
Might be like one of this: red, pink, indigo lighten-2, cyan, blue, light-green, amber, &mldr;themeColor1 used by main buttons and navbar. (default=light-blue)themeColor1text used by headlines. (default=light-blue-text)themeColor2 used by footer. (default=orange)themeColor2text used by footer and card actions. (default=orange-text text-lighten-3)Currently the link color, pagination and blockquote color needs to be adjusted according to main.css too.
Overwrite in your /assets/css/custom.css file.Screenshots of cofigurations startPageColumns = falsestartPageColumns = trueGoogle Analytics This theme uses the internal asynchronous template for Google Analytics tracking. You only have to provide your tracking id in your configuration file.googleAnalytics = ""UA-123-45""
Page templates / archetypes This theme has support for the following archetypes. Based on the specified types the layout and functionality of a page is slightly changed.Page (not on the startpage)Post (regular post/blog pages)Audio (shows spotify in the header)Video (shows youtube in the header)Quote (highlights a quote and the author)Link (show a link with the page title)Schema.org support Provide one author to enable the Schema.org support.[Author]  
  name = ""Sebastian Pech""
Images, Open Graph and Twitter Cards This theme uses Hugos feature/cover name method to set the optimized feature image. The image named *feature* or *cover* is used for the posts featured image and get resized. This will also be in the Twitter Cards and Open Graph block.The header image is automatically added if there is a file called *feature* or *cover*. The first wildcard is prefered over the second one. If there are multiple images the first one is used.# Site Config toml
title = ""My hugo site""

[params]
  description = ""Text about the site""

# Post yaml
---
title: ""{{ replace .Name ""-"" "" "" }}""
date: {{ .Date }}
publishdate: {{ now.Format ""2006-01-02"" }}
lastmod: {{ now.Format ""2006-01-02"" }}
draft: true
description: ""Text about this post""
tags:
    - ""tag 1""
---
Menus There are two menus in the theme. main and footer. Specify the entries in the config or the header of the content.[menu]

  [[menu.main]]
    identifier = ""about""
    # name = ""About""  # Material Icons are displayed as block so use the icon only
    url = ""/about/""
    weight = 10
    pre = ""<i class='material-icons'>speaker_notes</i>"" # Material Icons
    # pre = ""<i class='fas fa-heart'></i>"" # FontAwesone has more love ;-)

  [[menu.footer]]
    identifier = ""Imprint""
    name = ""Imprint""
    url = ""/imprint/""
    weight = 10

  [[menu.footer]]
    identifier = ""categories""
    name = ""Categories""
    url = ""/categories/""
    weight = 20

  [[menu.footer]]
    identifier = ""tags""
    name = ""Tags""
    url = ""/tags/""
    weight = 30
---
[...]
menu = ""main""
---
Social Icons Icons for Social Media. Add the block to the config.# Sets Social Media icons to appear and link to your account. Value should be your
# username unless otherwise noted.
# Code from https://themes.gohugo.io/future-imperfect/ theme
[social]
  # Coding Communities
  github           = """"
  gitlab           = """"
  stackoverflow    = """" # User Number
  bitbucket        = """"
  jsfiddle         = """"
  codepen          = """"
  # Visual Art Communities
  deviantart       = """"
  flickr           = """"
  behance          = """"
  dribbble         = """"
  # Publishing Communities
  wordpress        = """"
  medium           = """"
  # Professional/Business Oriented Communities
  linkedin         = """"
  linkedin_company = """"
  foursquare       = """"
  xing             = """"
  slideshare       = """"
  # Social Networks
  facebook         = """"
  googleplus       = """"
  reddit           = """"
  quora            = """"
  youtube          = """"
  vimeo            = """"
  whatsapp         = """" # WhatsApp Number
  instagram        = """"
  tumblr           = """"
  twitter          = """"
  skype            = """"
  snapchat         = """"
  pinterest        = """"
  telegram         = """"
  discord          = """" # invite link
  # Email
  email            = """"
Custom CSS/JS The theme provides two ways for custom css/js. The first way is writing your styles to /assets/css/custom.css and scripts to /assets/js/custom.js. This will merge and minify the styles/scripts with the theme specific files resulting in only one file for the whole website.The second way is using the Site configuration or the post metadata to target specific files in the /assets/ folder. This will result in one import line per script/style.[params]
  js=[""/js/test_site.js""]
  jscdn=[""https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js""]
  css=[""/css/test_site.css""]
  csscdn=[""https://fonts.googleapis.com/css?family=Roboto&display=swap""]
---
js:
    - /js/test.js
jscdn:
    - https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js
css:
    - /css/test.css
csscdn:
    - https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900
---
See AlsoAcademicAnubisBootstrap-BPColor Your WorldHugoplate",NA
sudorook,20,2023-03-28,GPL-2.0,Responsive,capsule,A CSS-only theme for Hugo using Bulma and Font-Awesome,https://github.com/sudorook/capsule,NA,"CapsuleA CSS-only Hugo theme using the Bulma CSS
framework and Font-Awesome
icons.InstallFrom the base of your website, run:git submodule add https://github.com/sudorook/capsule themes/capsule
You can then either build Hugo on the command line and pass the -t capsule
flag, or you can add theme = ""capsule"" to your config.toml file.Note: Any additional documentation will be added to the Capsule
Demo site, not here.Notes: 1. Syntax highlighting (via pygments) For code blocks, pick the highlighter style in config.toml by setting:pygmentsstyle = ""<style>""
For dark highlighter themes, you should rebuild capsule CSS with
build/extra/syntax.sass. Uncomment it from the capsule.sass file and run
npm run build.Without that file, the background color will default to Bulma’s light
background-color, and light colored elements meant to be displayed against dark
backgrounds from dark themes will be hard to read.2. Unused classes in Bulma Capsule is set to only compile the classes it needs. To enable more Bulma
classes, uncomment the relevant sass files in build/bulma/bulma.sass.3. Enable automatic generation of nav menus In your config.toml files, set:SectionPagesMenu = ""main""
With this set, capsule with automatically generate a navigation menu in the
navbar based on all the sections (the directories inside the content/
directory) present in your site.4. Add git metadata to your pages If you host your site on a public git vc server, you can set capsule to build a
“Last edited on &mldr;” note to each page that uses git metadata to display the
date of the last commit and add a link to its blob on your public repo.In your config.toml file, set:enableGitInfo = true

[params]
  repo = ""https://github.com/<user>/<repo>
The repo variable should point to the url of your repo for your website. The
above example uses GitHub, but GitLab and any other site that follows the
format of <siteurl>/<user>/<repo>/commit/<hash> will work, too.5. Add custom javascript or CSS to a page In the toml header, add:css = """"""
<style>
 ...
</style>
""""""

js = """"""
<script>
 ...
</script>
""""""
Any CSS or JS specified here will add to the site <head> when Hugo renders
the page.6. Enable table of contents To generate a table of contents for a specific page, add to the toml header:toc = true
The table of contents will contain all the header items defined in the
markdown. The nesting levels for each match the header weight (h1, h2, etc.).BuildTo (re)build the CSS, you need to have npm and installed. Clone the
capsule repository and once in it run:npm install
and then build by:npm run build
You can enable/disable sass components by editing build/sass/capsule.sass
before building. To use your own customized version of capsule, a) fork this
repository and set the Git submodule to use it, or b) make a symlink to your
custom build in the Hugo themes/ directory, assuming your build system allows
this.See AlsoAcademicAce documentationAdritian Free Hugo ThemeAmethystAnanke Gohugo Theme",NA
4s3ti,19,2023-08-26,MIT,"Blog, Dark, Light, Minimal, Multilingual, Personal, Responsive",hello-4s3ti,A simple theme for Hugo. That's it.,https://github.com/4s3ti/hugo-theme-hello-4s3ti,NA,"Hello Friend 4s3tiGeneral informations This theme is a mix between hello-friend-ng and the original hello-friend considering both have features I like and lack others, I’ve decided to roll up my sleeve and tweak it a bit, the biggest change is most likely a dependency on fontawesome kits.You can see it in action here: https://4s3ti.netTable of Contents FeaturesHow to startHow to configureMoreBuilt in shortcodesimageCode highlightingFaviconAudio SupportSocial IconsHide Title and Language on single pagesKnown issuesHow to edit the themeChangelogSponsoringLicenceFeatures Original features Theming: dark/light mode, depending on your system preferences or the users choiceGreat reading experience thanks to Inter font, made by Rasmus AnderssonNice code highlighting thanks to PrismJSAn easy way to modify the theme with Hugo toolingFully responsiveAudio support for posts (thanks to @talbotp)Support for CommentoChanged by this theme Support for FontAwesome kitsSupport for social iconsSocial Icons can be either in the footer or in the main content area just like the originalSupport for sharing buttons (Depends on FontAwesome Kits)Support for latest posts on front pageSupport for submenusBuiltin (enable/disable) multilanguage menuShows Language flagsMenu will show alternative languages instead of current languageWhen only 2 languages available no sub-menu will be displayed, it will switch between them insteadOptional overlay that darkens a bit the BackgroundOption to choose between read more in text instead of a buttonPage title can be different than site titleOption to hide page title in single pagesOption to hide language selection in Single pagesHow to start You can download the theme manually by going to https://github.com/4s3ti/hugo-theme-hello-4s3ti.git and pasting it to themes/hello-4s3ti in your root directory.You can also clone it directly to your Hugo folder:$ git clone https://github.com/4s3ti/hugo-theme-hello-4s3ti.git themes/hello-4s3ti
If you don’t want to make any radical changes, it’s the best option, because you can get new updates when they are available. To do so, include it as a git submodule:$ git submodule add https://github.com/4s3ti/hugo-theme-hello-4s3ti.git themes/hello-4s3ti
How to configure The theme doesn’t require any advanced configuration. Just copy the following config file.
To see all possible configurations, check the docs.Note: There are more options to configure. Take a look into the config.toml and config.yaml in exampleSite directory.baseurl      = ""localhost""
title        = ""My Blog""
languageCode = ""en-us""
theme        = ""hello-4s3ti""
paginate     = 10

[params]
  dateform        = ""Jan 2, 2006""
  dateformShort   = ""Jan 2""
  dateformNum     = ""2006-01-02""
  dateformNumTime = ""2006-01-02 15:04""

  # Subtitle for home
  homeSubtitle = ""A simple and beautiful blog""

  # Set disableReadOtherPosts to true in order to hide the links to other posts.
  disableReadOtherPosts = false

  # Enable sharing buttons, if you like
  enableSharingButtons = true

  # Metadata mostly used in document's head
  description = ""My new homepage or blog""
  keywords = ""homepage, blog""
  images = [""""]

[taxonomies]
    category = ""blog""
    tag      = ""tags""
    series   = ""series""

[languages]
  [languages.en]
    title = ""Hello Friend NG""
    subtitle = ""A simple theme for Hugo""
    keywords = """"
    copyright = '<a href=""https://creativecommons.org/licenses/by-nc/4.0/"" target=""_blank"" rel=""noopener"">CC BY-NC 4.0</a>'
    readOtherPosts = ""Read other posts""

    [languages.en.params.logo]
      logoText = ""hello friend ng""
      logoHomeLink = ""/""
    # or
    #
    # path = ""/img/your-example-logo.svg""
    # alt = ""Your example logo alt text""

  # And you can even create generic menu
  [[menu.main]]
    identifier = ""blog""
    name       = ""Blog""
    url        = ""/posts""
More things Built-in shortcodes Of course you are able to use all default shortcodes from hugo (https://gohugo.io/content-management/shortcodes/).image Properties:src (required)alt (optional)position (optional, default: left, options: [left, center, right])styleExample:{{< image src=""/img/hello.png"" alt=""Hello Friend"" position=""center"" style=""border-radius: 8px;"" >}}
Code highlighting By default the theme is using PrismJS to color your code syntax. All you need to do is to wrap you code like this:
``` html
  // your code here
```
Favicon Check the docs.Audio Support You wrote an article and recorded it? Or do you have a special music that you would like to put on a certain article? Then you can do this now without further ado.In your article add to your front matters part:audio: path/to/file.mp3
Social Icons: FontAwesome To use the Social Media icons and the Share Icons you are required to have at least a free FontAwesome Icon KitGo to FontAwesomeCreate an accountGo to kits, create new kitAdd the Kit Link to your configA large variety of social icons are available and can be configured like this:[[params.social]]
  name = ""<site>""
  url = ""<profile_URL>""
If the icon is not available or you wish to use another icon, you can also override the icon by specifying the Icon value.[[params.social]]
  name = ""<site>""
  url = ""<profile_URL>""
  icon = ""<Icon>""
Hide Title and Language on single pages +++
Title = ""Ferramentas""
hideTitle = true
hidelanguage = true
+++
How to edit the theme Just edit it. You don’t need any node stuff. ;)Sponsoring If you like this fork and think it is worth your support, you can always &mldr;However, please consider doing it to the guys that did most of the hard work, I only moved some bits of code here and theredjodjeatlialppanrLicence The theme is released under the MIT License. Check the original theme license for additional licensing information.See AlsoAcademicAnubisColor Your WorldHugoplateLightbi",NA
michimani,19,2023-05-26,MIT,"Blog, Minimal",simplog,simplog is a simple theme for personal blog.,https://github.com/michimani/simplog,https://michimani.github.io/simplog/,"simplog simplog is a simple blog theme for Hugo.Demo site is here.Features Google AnalyticsDisqusSome theme colorsResponsiveCustom CSSAdobe FontsLazy load imageSupport tags, categories and archives pageShow related tags and categories postsInstallation git submodule add https://github.com/michimani/simplog.git ./themes/simplog
Updating git submodule update --remote --merge
Detail of features Google Analytics You can insert the Google Analytics tracking code into top of head tag. If you insert the tag, set tracking ID at config.toml.googleAnalytics = ""<your tracking ID>""
Disqus You can set the comment form via Disqus. If you set the comment form, set disqus short name at config.toml.disqusShortname = ""<your disqus short name>""
And if you enable comment form, set true at config.toml and each post file.config.toml[params]
    [params.enabled]
        comment = true
each post file+++
# some
# settings
# of
# post
comments = true
+++
The comment form will be enabled when both of them are true.Custom CSS If you want to use your own CSS, set value that is path to your CSS file at config.toml[params]
  customCSS = """"
Adobe Fonts If you use Adobe Fonts in your site, set value that is Adobe Fonts Kit ID at config.toml. In this case you will need to set custom css as well.[params]
  adobeFontsKitId = ""<your adobe fonts kit ID>""
Some theme colors You can change theme color easily. Set the value one of default, dark, red, green and blue at config.toml.[params]
  colorTheme = ""default""
DarkRed/Green/BlueLazy load image You can easily set up an image tag for lazy loading by using the shortcode below.{{< lazy src=""image-file-name.jpg"" alt=""attribute for this image"" >}}
In the above case, the image files under the images directory will be displayed. (e.g. /images/image-file-name.jpg)If you want to specify another path or a path with a different domain, write the full path to the image file and add abs ="" y "".{{< lazy src=""https://michimani.github.io/simplog/images/featured_image.jpg"" alt=""attribute for this image"" abs=""y"" >}}
Mermaid You can use the mermaid language in Markdown code blocks.```mermaid
sequenceDiagram
    participant Alice
    participant Bob
    Alice->>John: Hello John, how are you?
    loop Healthcheck
        John->John: Fight against hypochondria
    end
    Note right of John: Rational thoughts <br/>prevail...
    John-->Alice: Great!
    John->Bob: How about you?
    Bob-->John: Jolly good!
``
Developmet Install nodenv and install node 18.xbrew install nodenv
nodenv install 18.14.2
Install the node module for development such as CSS generation.npm install
Generate CSS from SCSS To generate CSS from SCSS, run the following command.npm run css:scss
If you want to monitor SCSS changes, run the following command.npm run watch:scss
License See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Trevor Bergeron,19,2022-09-25,Creative Commons Attribution 3.0 Unported,"Blog, Company, Responsive",Arcana,A Hugo port of the HTML5 UP Arcana template,https://github.com/half-duplex/hugo-arcana,https://sec.gd/hugo/themes/arcana/,"Hugo HTML5 UP ArcanaThis is a Hugo port of the
Arcana template from
HTML5 UP.
Check out the live demo.Configuration See the exampleSite folder. The elements on the homepage are defined in
data/homepage.yml, where you can choose which appear and configure them.
The mostly-empty _index.md files are required for marking of the active menu
item to work correctly.You can add your own styles in your site’s assets/sass/custom.scss, which is
included at the end of the theme’s main.scss.Showcase If you use this theme, let me know, and I’ll list your site here!Theme Demo SiteOdesa Regional Organization of Red Cross Society of UkraineContributing Pull requests welcome! This is my first Hugo theme, and I expect there are some
things I’ve done sub-optimally.Thanks I borrowed a good amount of structure and useful bits from
hugo-html5up-alphaSee AlsoAcademicBeautiful HugoDot-OrgHugo Blox - TailwindLightbi",NA
Olivier DOSSMANN,18,2023-08-31,MIT,"Docs, Minimal",Adam & Eve,A simple wiki in its original formal state,https://github.com/blankoworld/hugo_theme_adam_eve,https://olivier.dossmann.net/wiki,"Adam & EveI migrated my wiki from Dokuwiki to Hugo and created a new theme to reconcile both: Adam & Eve was born.This theme is special: it comes with its more simple formal dress.Why ? Because it is:simplecleanresponsiveI was enormously inspired by Note Plugin for notes. And Dokuwiki for external and internal links.Community They use Adam & Eve:Weekly Supervised Object Detection in ArtworksRecueil d’astucesScreenshot This is a single page from the wiki, showing:a simple menu to go to the homepagea table of contentsinternal shortcode (the green link)note shortcode (the 4 models)nolink shortcode (the red link)remote shortcode (the link with a globe before)Installation In your Hugo root folder, do something like:mkdir themes
cd themes
git clone https://github.com/blankoworld/hugo_theme_adam_eve.git
Check Hugo Installation Guide for more information.Configuration It’s hardly recommended to check the config.toml.example file. Especially to configure the table of content via [markup] section, the name of each menu, enable Emoji, etc.Table of content To configure the table of content, edit your config.toml file and add something like:[markup]
  [markup.tableOfContents]
    endLevel = 6
    ordered = false
    startLevel = 1
It means you start the Table of Content from h1 to h6. You can find more info about table of content configuration on official Hugo documentation.Use git commit date as last modification date If you keep an history of your Hugo website, you can use git commit date as last modification date of each page (as explained in Hugo documentation about EnableGitInfo).To enable this option, edit your config.toml file to add:EnableGitInfo = true
This will enable this explained option.Choose code colorization theme Regarding list of available themes for Chroma plugin, you can customize your preferred code colorization theme using this line in your config.toml file:pygmentsstyle = 'monokai'
Getting Started The config file You can either copy config.toml.example from this repository to your Hugo root directory (and rename it config.toml). Or copy those included in exampleSite directory.Just adapt the content to your needs.The _index.md files _index.md files are used to display content of a specific category. A category is a directory you add in content directory.Check exampleSite directory content for some examples.Tip: If you need to make a link to a category called design, to go to its _index.md file, you need to create an empty index.md file and make a link like that:[My category]({{< relref ""mycategory/index.md"" >}})
Special features Specific links In order to have a similar behaviour to Dokuwiki, I created 3 types of links:Remote link: display a little globe at the left. Permit to reader immediately understand that it’s a remote linkInternal link: between page that are in your wikiWord without link: sometimes you planned to make a link on a word. To not forget, I created a specific nolink word to make a specific displayLet’s have some example.For remote links:{{< remote ""Wiki"" ""http://fr.wikipedia.org/wiki/Wiki"" >}}
With remote shortcode, you have many other possibilities by playing with parameters:{{< remote ""Panda"" ""https://best.panda.domain.tld"" ""What a panda looks like"" >}}
which add a title to your link (when user keep cursor on it).{{< remote ""http://perdu.com/"" >}}
which display the link at it is. But with the globe before ;)For internal links:{{< internal ""Magic potion"" ""section/my_internal_page.md"" >}}
And for nolink word:{{< nolink ""How to create a flower bread"" ""page/I/want/to/create/later.md"" >}}
Tip: Check exampleSite/content/_index.md file to have some examples.Search bar There is several steps to add a searchbar on your website.First edit the config.toml file to add withsearchbar option:[params]
    withsearchbar = true
You also need to add JSON as output format. Search something like this:[outputs]
  home = [""HTML"", ""RSS"", ""JSON""]
Finally create the content/search.md file with this content:---
title: ""Search result""
sitemap:
  priority: 0.1
layout: ""search""
---

Some content you want to add if any JS script was disabled by your subscribers.
Notes Display a sidebar with a specific background color to show readers something important.We have 4 sidebar models:warning (red)important (yellow)tip (green)normal (blue)Example:{{< note warning >}}
Pay attention to read this **entire page** before applying what you read!
{{< /note >}}
Homepage menu By default a menu is displayed on Homepage. You can disable it. Use nohomebar in config.toml like this:[params]
    nohomebar = true
Homepage posts list By default a list of post from post directory is shown on Homepage. You can disable it. Use NoHomepagePostList in config.toml like this:[params]
    NoHomepagePostList = true
Contributing Did you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.License This theme is released under the MIT License. For more information read the License.See AlsoAcademicAce documentationDoksHextraHinode",NA
weastur,18,2023-07-04,MIT,"Blog, Light, Minimal, Responsive",TeXify2,"A minimal, latex-style hugo theme for personal blogging",https://github.com/weastur/hugo-texify2,https://texify2.io,"TeXify2

A minimal, latex-style hugo theme for personal blogging.
The successor of the original TeXifyFeatures Social sharing buttonsAny comment engine (giscus, remark42, hyvor, etc.)Word Counter and Reading TimeMermaid supportDuckDuckGo searchConfigurable root font sizeBuymeacoffee widgetAuto numbered subtitlesSimplified configHugo modules supportTested on Chrome, Safari, Edge, FirefoxDisqus & Google Analytics includedResponsive design for mobile devicesCustomize the site with your stylesheetsMath equations powered by KaTeX
(MathJax has been deleted)Minimal CSS, No JavaScript, Blazing Fast!* Diff with the origianl texify is boldVisit the demo site.Note: All the features are enabled on the demo site,
but you can turn them off on your own project.
Check both config.toml of the theme and of the exampleSite.Usage Install as git submodule Install:git submodule add https://github.com/weastur/hugo-texify2.git themes/hugo-texify2
echo ""theme = 'hugo-texify2'"" >> hugo.toml
Upgrade:git submodule foreach git pull origin master
Install as hugo module Initialize hugo modules, if not done yet:hugo mod init github.com/<username>/<projectName>
add [module] section to your config.toml:[module]
[[module.imports]]
  path = 'github.com/weastur/hugo-texify2'
load/update theme modulehugo mod get -u github.com/weastur/hugo-texify2
See config.toml
for an example configuration.Development Install pre-commitpre-commit install
make dev
Acknowledgement The following software inspires the design of this theme:https://github.com/vincentdoerig/latex-csshttps://github.com/7ma7X/HugoTeXhttps://theme.typora.io/theme/Academic/https://github.com/queensferryme/hugo-theme-texifyhttps://sharingbuttons.ioSupport If you want to support the development or say thanks, become a GitHub Sponsor orSee AlsoAcademicAnubisBareBeautiful HugoBlonde",NA
Christian Hollinger,18,2023-06-20,MIT,"Blog, Dark, Minimal, Personal, Portfolio, Responsive",ink-free,"Crisp, minimal personal website and blog theme Hugo.",https://github.com/chollinger93/ink-free,NA,"Ink-FreeCrisp, minimal personal website and blog theme Hugo, designed for a collaborative, open-source, privacy conscious blog.Forked from knadh with custom adjustments. Originally forked from Ezhil.Ink-Free vs Hugo-Ink This repository is a purely local (i.e., no CDNs1), simplified version of hugo-ink with several simplifications for the sake of privacy:Removed all references to Google’s font-CDNRemoved Analytics code, even if it was controlled by a variableAs well as some additional features:Added a Back button to all postsAdded a Table of Contents (TOC), controlled by a variable, to all postsThe TOC can either be static at the topOr floating on the sideAdded a word count, tags, and an approximate read time to the overviewAdded random footer messagesAdded “Edit this on GitHub” buttonAdded inlineimg shortcode to render images (e.g. SVGs) in-lineAdded support for ![](image title=""title"") syntax for image titlesRandom, somewhat humorous messages at the end of each postAnd some bugfixes:Modified the CSS toOrder all tags inline, as opposed to as a listChange the background color for Syntax Highlighting, otherwise we’re looking at grey code on a grey backgroundAdded some classes for a Back buttonDemo Overview Table Of Contents Options Floating Static Both Truncated Mobile Run the example cd exampleSite
hugo serve  --themesDir ../..
Features Syntax highlightingRSS feedsCustom CSS/JSMultilingual months supportCustom TOCIn-Line images w/ TitlesRandom footer messages“Edit this on GitHub” buttonWord count, tags, and an approximate read time in the overviewInstallation cd into your hugo site’s root directory and:cd themes
git submodule add https://github.com/chollinger93/ink-free 
For more information read the official setup guide of Hugo.Content type You can specify content type with field type in your content. For example static pages can be set as type page which are excluded from recent posts and all posts page. You can use site params mainSections and disableDisqusTypes to control which page types are excluded from recent posts and Disqus comments respectively.---
title: ""About""
date: 2019-04-19T21:37:58+05:30
type: ""page""
---

This is some static page where you can write about yourself.
Language Settings for the month Due to the currently unavailable feature for multilingual dates in .Date from
Go. It is possible to create a month.yaml in the data folder of your
Hugo site root directoy. There is also an example file in
exampleSite/data/.cat > month.yaml << EOF
1: ""Jan""
2: ""Feb""
3: ""Mar""
4: ""Apr""
5: ""May""
6: ""Jun""
7: ""Jul""
8: ""Aug""
9: ""Sep""
10: ""Oct""
11: ""Nov""
12: ""Dec""
EOF
Credits knadh, who created hugo-inkEzhil theme from which Ink was forkedLicense Licensed under the MIT license.Note that the Feather CDN can still be enabled, but you can also host it statically. ↩︎See AlsoAcademicGokarnaHugo LiftoffLekhLightbi",NA
NA,18,2022-07-28,GPL-2.0-only,"Blog, Responsive",DPSG,Hugo theme based on the DPSG theme for German scout websites. Forked from the Mainroad theme,https://github.com/pfadfinder-konstanz/hugo-dpsg,NA,"DPSG Hugo ThemeDPSG is a responsive, simple, clean and content-focused
Hugo theme that imitates the official Wordpess
theme
featured by the DPSG German scout association. It’s forked from the
Mainroad Hugo theme.The reference implementation is visible on the website of DPSG Stamm Bruder
Klaus Konstanz.Features:Hugo internal templates (Open Graph, Schema, Twitter Cards)No inclusion of third-party libraries, but all hosted locally (fonts, JS etc.)Responsive menuSecondary menusSVG iconsTheme options (Sidebar position, Author Box, Post Navigation, highlight color)
available through config.toml file parametersTable of ContentsBrowser support:Desktop: IE11+, Chrome, Firefox, SafariMobile: Android browser (on Android 4.4+), Safari (on iOS 7+), Google Chrome, Opera miniOther browsers (like Opera on Blink engine) are also supported, but not tested.Installation Before starting, please be sure that you have
installed Hugo and
created a new site.
After that, you ready to install DPSG.In your Hugo site themes directory, run:git clone https://github.com/pfadfinder-konstanz/hugo-dpsg
Or, if you don’t plan to make any significant changes, but want to track and
update the theme, you can add it as a git submodule via the following command:git submodule add https://github.com/pfadfinder-konstanz/hugo-dpsg
Next, open config.toml in the base of the Hugo site and ensure the theme
option is set to hugo-dpsg:theme = ""hugo-dpsg""
For more information read the official setup guide of Hugo.Configuration Config.toml example baseurl = ""/""
title = ""Hugo DPSG""
languageCode = ""de""
DefaultContentLanguage = ""de""
paginate = ""10"" # Number of posts per page
theme = ""hugo-dpsg""

[Author] # Used in authorbox
  name = ""Scout Master""
  bio = ""The Scout Master is the leader of this local scout group""
  avatar = ""img/avatar.png""

[Params]
  description = ""Welcome to our scout group!"" # Site description. Used in meta description
  copyright = ""DGSP local group"" # Footer copyright holder, otherwise will use site title
  opengraph = true # Enable OpenGraph if true
  schema = true # Enable Schema
  twitter_cards = true # Enable Twitter Cards if true
  readmore = false # Show ""Read more"" button in list if true
  authorbox = true # Show authorbox at bottom of pages if true
  toc = true # Enable Table of Contents
  pager = true # Show pager navigation (prev/next links) at the bottom of pages if true
  indexPager = false # Show pager navigation on index page
  post_meta = [""author"", ""date"", ""categories"", ""translations""] # Order of post meta information
  mainSections = [""post"", ""blog"", ""news""] # Specify section pages to show on home page and the ""Recent articles"" widget
  photosSections = [""photos""] # Specify section pages to show on home page and the ""Recent photos"" widget
  photoTag = ""photos"" # Specify one tag to show on home page and the ""Recent photos"" widget. Similar as photoSections, but with 1 tag instead of 1 or multiple sections
  dateformat = ""02.01.2006"" # Change the format of dates
  customCSS = [""css/custom.css""] # Include custom CSS files, can also be used per-page as front matter attribute
  customJS = [""js/custom.js""] # Include custom JS files
  customPartial = ""piwik.html"" # Include custom partials at the end of the page, e.g. tracking codes
  belowTitlePartial = ""alert.html"" # Include custom partial below the pages title

[Params.style.vars]
  highlightColor = ""#003056"" # Override main theme color

[Params.logo]
  image = ""img/placeholder.png"" # Logo image. Path relative to ""static""
  image_alt = ""Logo image"" # alt text for logo image, be screen reader friendly!
  header = ""img/header.jpg"" # Header image. Path relative to ""static""
  title = ""DPSG local group"" # Logo title, otherwise will use site title
  subtitle = ""Welcome to our group site"" # Logo subtitle

[Params.sidebar]
  home = ""right"" # Configure layout for home page
  list = ""left""  # Configure layout for list pages
  single = false # Configure layout for single pages
  # Enable widgets in given order
  widgets = [""search"", ""recent"", ""recent_photos"", ""recent_photos_tags"", ""categories"", ""taglist"", ""social"", ""languages""]
  # alternatively ""ddg-search"" can be used, to search via DuckDuckGo
  # widgets = [""ddg-search"", ""recent"", ""categories"", ""taglist"", ""social"", ""languages""]

[Params.footer]
  text = ""[Imprint and Privacy](/imprint)"" # Extra text in footer row, understands markdown
  right = ""Donate!"" # Right-aligned text in footer row, optional, understands markdown

[Params.widgets]
  recent_num = 5 # Set the number of articles in the ""Recent articles"" widget
  tags_counter = false # Enable counter for each tag in ""Tags"" widget

[Params.widgets.social]
  # Enable parts of social widget
  facebook = ""username""
  twitter = ""username""
  instagram = ""username""
  linkedin = ""username""
  telegram = ""username""
  github = ""username""
  gitlab = ""username""
  bitbucket = ""username""
  email = ""example@example.com""

# Custom social links
[[Params.widgets.social.custom]]
  title = ""Youtube""
  url = ""https://youtube.com/user/username""
  icon = ""youtube.svg"" # Optional. Path relative to ""layouts/partials""

[[Params.widgets.social.custom]]
  title = ""My Home Page""
  url = ""http://example.com""
A good idea is not to copy all these settings without understanding how it
works. Use only those parameters that you need.For more information about all available standard configuration settings, please
read All Hugo Configuration
Settings.Front Matter example ---
# Common-Defined params
title: ""Example article title""
date: ""2017-08-21""
description: ""Example article description""
categories:
  - ""Category 1""
  - ""Category 2""
tags:
  - ""Test""
  - ""Another test""
menu: main # Optional, add page to a menu. Options: main, side, footer

# Theme-Defined params
thumbnail: ""img/placeholder.jpg"" # Thumbnail image
thumbnail_alt: ""Thumbnail"" # alt text for thumbnail image, be screen reader friendly!
thumbnail_hide_post: false # Hide thumbnail on single post view
lead: ""Example lead - highlighted near the title"" # Lead text
authorbox: true # Enable authorbox for specific page
pager: true # Enable pager navigation (prev/next) for specific page
toc: true # Enable Table of Contents for specific page
sidebar: ""right"" # Enable sidebar (on the right side) per page
widgets: # Enable sidebar widgets in given order per page
  - ""search""
  - ""recent""
  - ""taglist""
sitemap_hide: false # Do not add this page to the sitemap
scripts_head: # optional: include some literal <head> matter, e.g. for page-specific JS imports; safeHTML-filtered
  - ""<!-- -->""
scripts_body: # optional: include some literal html just before <body/> tag, e.g. JS initialization; safeHTML-filtered
  - ""<!-- -->""
---
For more information about front matter variables read Hugo Front
Matter from Hugo official
documentation.Sidebar Hugo DPSG comes with a configurable sidebar that can be on the left, on the right, or
disabled. The default layout can be specified in the [Params.sidebar] section
of the configuration. The position can be specified for home, list and single
pages individually. Use the keys home, list and single with values
""left"", ""right"" or false. The layout can be configured per page, by
setting the sidebar parameter with one of the same values in the page’s front
matter.The sidebar consists of multiple widgets. Widgets can be enabled individually
using the widgets key with a list of widget names as value. You can add your
own widgets, by placing a template under layouts/partials/widgets/<name>.html.
The list of widgets can be overwritten from a page’s front matter.Some widget respect optional configuration. Have a look at the
[Params.widgets] and [Params.widgets.social] sections in the example
configuration above.Menus Hugo DPSG supports multiple menus. The main menu is fully responsive and displayed right
under the site header. The secondary menus side and footer are displayed in
a sidebar widget and the page footer. To add a page to a menu, add a `menu:` parameter to the page's front matter:menu: main # Add page to a main menu
You can also add a page to multiple menus by providing a list:menu: [""main"", ""side"", ""footer""] # Add page to a main, side, and footer menu
Note: Don’t forget to enable the sidemenu widget in the widgets
configuration param if you want to use the side menu.Note: Please keep in mind that the menus don’t support nested items
i.e. submenus.Social Widget: custom links Hugo DPSG contains built-in social links in the social widget. In addition,
you can also set custom social links by adding Params.widgets.social.custom to
your config.toml. Here is an example.[[Params.widgets.social.custom]]
  title = ""Youtube""
  url = ""https://youtube.com/user/username""
  icon = ""youtube.svg""
Note: You need to put your icon file in layouts/partials directory under your
project’s root if you want to display an icon of your social link. The icon
field, which is optional, should be a path relative to layouts/partials.Note: Only SVG files are supported to be used as custom social icons in the current
version. If you use any files of another format, PNG for example, a compile
error will be raised by Hugo.Note: Not every SVG icon can be used. For better results, it should be one-color SVG
file with a special class attribute {{ with .class }}{{ . }} {{ end }} and
24x24 size. At a minimum, custom SVG icon needs these attributes:<svg class=""{{ with .class }}{{ . }} {{ end }} icon"" width=""24"" height=""24"">...</svg>
Contributing Have you found a bug or got an idea for a new feature? Feel free to use the
issue tracker to let
me know. Or make directly a pull
request.License This theme is released under the GPLv2 license (GPL-2.0-only).See AlsoArcanaCalligraphyDenDigital GardenEd","Max Mehl, Vimux"
Leon He,18,2022-06-25,MIT,"Blog, Bootstrap, Minimal, Personal, Responsive",eiio,personal blog&project theme,https://github.com/leonhe/hugo_eiio,NA,"Hugo blog themeThis is a hugo static blog engine theme, if you like 😍 💗 this theme,please give me star🌟🌟 ~_~Features ✏️ Blog ️🎩 Modern、Responsive🅾️ Syntax highlightEmoji 😄 ,Disqus 🌐🏙 🎇 🌆 Post thumbnail imagesSee DemoInstallationInside the folder of your Hugo site run:cd themes
git clone https://github.com/leonhe/hugo_eiio
ConfigModify your configuration:baseurl = ""site url""
title = ""Site Name""
languageCode = ""site language code""
copyright = ""Copyright right infomation.""
themesdir = ""themes""
theme = ""hugo_eiio""
Paginate=15 
MetaDataFormat = ""toml""
PaginatePath=""page""
pygmentsuseclasses = true
disqusShortname = ""user id""
googleAnalytics='google analytics code'

hasCJKLanguage = true
preserveTaxonomyNames = false
disablePathToLower =false 
enableEmoji = true
enableInlineShortcodes = true
enableRobotsTXT = true

[taxonomies]
  category = ""categories""
  tag = ""tags""
  summaryLength = 250 # default 70
[params]
  hljsStyle=""github"" #code highlightjs css style . See [Style List](https://github.com/highlightjs/highlight.js/tree/master/src/styles ""CSS Style list"")

  showNextAndPrePost = false #Is Show Next and Previous Post Button
  description = ""site description""
  keywords = ""site keywords use seo""
  googleSiteVerification = ""google site verification key""
  author = ""your name""
  github =""github username""
  email=""your email""
  twitter=""your twitter name"" 
  securityPolicy = false #disable https content security policy
  footerRight=""Your tips content"" #footer right content
  mainSections = ['page']
[sitemap]
  changefreq = ""monthly""
  priority = 0.5
  filename = ""sitemap.xml""
Use post’s thumbnailHome thumbnail of post: if you need in home page list display thumbnail of post,write head of post keywords,see below code👇:
+++
title = ""Post Title""
categories = [""Categories""]
tags = [""tags""]
date = ""write datetime""
draft = false
header_images=""post home list thumbnail""
+++
..............
Content thumbnail of post: if you need in post content to display different thumbnail,see below code 👇{{< figure  class=""floatright|floatleft"" src=""your image path"" alt="""" >}}
LicenseThis theme is released under the MIT License.See AlsoTatBanTheme2.0LightbiPaigeCalligraphyTicky Tacky Dark",NA
Marcelo Canina,17,2023-10-12,MIT,"Bootstrap, Responsive",SimpleIT,Responsive Hugo theme displaying articles by directory,https://github.com/marcanuy/simpleit-hugo-theme,NA,"SimpleIT Hugo ThemeResponsive Hugo theme displaying articles by directory.Homepage displays the full directory tree structure and each
section/“subsection” its own articles and nested sections.Table of ContentsSimpleIT Hugo ThemeFeaturesNested subcategoriesAdding contentAdding posts without imagesAdding posts with imagesAdding images used in many postsAdding pages in multiple languagesInstallationAs a git submoduleIf you don’t have Hugo with gitUpdating the themeRun locallyTheme configWebsite in subdirectoryCustomizing styles for your websiteNotes for developersBuildScreenshotsContributingWebsites using themeReferenceLicenseFeaturesFeatures:mobile-first designtwo main layouts:single pageAutomatic TOCs based in content headers placed in sidebarChoose Share Buttons typestatic buttons optimized for loading speedgenerated with https://sharingbuttons.io/ (fast, minimal footprint)Commenting systemDisqusdirectory/category listsIf /static/img/cover.jpg exists, it is added as the background
of the homepage header sectionSEOHugo internal templatesOpen Graph{{- template ""_internal/opengraph.html"" . -}}Schema metatags{{- template ""_internal/schema.html"" . -}}When an article is updated, it automatically generates
dateModified itemprop and shows the Last Updated info in
the article. It obtains the data from the git repo.Twitter Cards{{- template ""_internal/twitter_cards.html"" . -}}producesminified HTMLSASS compiled in one CSS fileOne javascript fileMultilingual:In head: Each page specifies other languages versions in meta as specified in Tell
Google about localized versions of your
page
like:
- <link rel=""alternate"" hreflang=""lang_code"" href=""url_of_page"" />In footer: Show alternative page translations, falling back to
site available languages if a specific page doesn’t have translationAnalyticsGoogle AnalyticsBingMonetization:Google Adsense:Page levelAutomatic ads just setting up config keyOptional support buttons in articles:Buy me a coffeeKo-fi idContent in tree directory structure of arbitrary depth supportednested directories, each directory having its own articles and
possible other directoriesThird-party appsTwitter Bootstrap 4Icons: Fontawesome 5Author box for each article.Only shown in pages if bio is set at [params.author] in configuration.Can be hidden with frontmatter: hide_author: trueAbout me page in footer if page_about_me_relurl set in
configuration for each language. [languages]
   [languages.en]
   page_about_me_relurl = ""/about/""
Previous/Next article buttons when displaying a single article.Generates an rss+xml Atom
file, an XML-based Web content and metadata syndication format, for
each directory/subdirectory.Example for URL: https://simpleit.rocks/python/django/index.xml""
includes the link: <link href=""https://simpleit.rocks/python/django/index.xml"" rel=""alternate"" title=""Simple IT 🤘 Rocks"" type=""application/rss+xml""/>Nested subcategories The nested subcategories (aka.:sections/nested sections) get the same
URLs as the directory structure, for example, the following
directory/files would be available at these URLs:PATH                                            URL

exampleSite/content/
|-- en
|   |-- _index.md                               /
|   |-- a-root-level-article.md                 /a-root-level-article/
|   |-- about.md                                /about/
|   |-- bar-first-level-section                 /bar-first-level-section/
|   |   `-- bar-page-in-section.md              /bar-first-level-section/bar-page-in-section/
|   |-- baz-first-level-section                 
|   |   `-- _index.md                           /baz-first-level-section/
|   `-- foo-first-level-section                 
|       |-- _index.md                           /foo-first-level-section/
|       |-- foo-second-level
|       |   |-- _index.md                       /foo-first-level-section/foo-second-level/
|       |   |-- foo-third-level
|       |   |   |-- _index.md                   /foo-first-level-section/foo-second-level/foo-third-level/
|       |   |   `-- page-at-foo-third-level.md  /foo-first-level-section/foo-second-level/foo-third-level/page-at-foo-third-level/
|       |   `-- page-at-foo-second-level.md     /foo-first-level-section/foo-second-level/page-at-foo-second-level/
|       `-- page-at-section-level.md            /foo-first-level-section/page-at-section-level/
`-- es
    |-- _index.md                               /es/
    `-- foo-seccion-primer-nivel
        |-- _index.md                           /es/foo-section-primer-nivel
        `-- foo-segundo-nivel                   
            |-- _index.md                       /es/foo-section-primer-nivel/foo-segundo-nivel
            `-- pagina-en-segundo-nivel.md      /es/foo-section-primer-nivel/foo-segundo-nivel/pagina-en-segundo-nivel/
Adding content$ hugo new <sections>/<article>.md
There are two types of Posts, with and without images. The cleanest
way to have them is to create a directory for those posts that have
images, and put all post’s images in that directory.Adding posts without images A post without a cover image should be created with the slug as the
filename inside the directory you want, for example, to create the
post
http://example.com/foo-first-level-section/page-at-foo-first-level
you should create the file /content/foo-first-level-section/foo-second-level/page-at-foo-second-level.mdslug will be obtained from post’s filename---
title: ""Post example without images""
date: 2019-01-10
subtitle: ''
description: ''
---

## Overview

Here I don't use any image!
Adding posts with images Posts with images can have two types of images:Cover imageDisplayed at the top section of the postUsed in Facebook’s OpenGraph / Twitter cards metadata (a.k.a.
the
image that will be displayed when sharing the post in those Social
Networks)Should be defined at post’s frontmatter.Content imagesImages used along the post contentFor example, to create the post
http://example.com/foo-first-level-section/page-at-foo-first-level
you should create the directory with the slug name and content
inside the directory as an index.md file
/content/foo-first-level-section/foo-second-level/page-at-foo-second-level/index.md.All images used by this post goes inside the above directory (/content/foo-first-level-section/foo-second-level/page-at-foo-second-level/)And slug will be obtained from post’s directory name.To add the cover image, so it can be displayed by OpenGraph and
Twitter, add the metadata to the resources frontmatter section and
put the image in the newly created directory
/content/foo-first-level-section/foo-second-level/page-at-foo-second-level/victor_hugo.jpg.The featured image resource name must be cover so it will be
used as the featured image of the article.This follows the standard name name defined by Hugo for Twitter Cards
featured image.Rest of images should be configured in an images array in front
matter, being the first one the featured image. This will be used in
Facebook’s OpenGraph metadata and Twitter Cards image section, so it
is displayed when sharing them.In images array, the full path after content directory preppended
to image name should be used, as Hugo loads them preppending the
website’s domain.Then other images in same directory and used in content /content/foo-first-level-section/foo-second-level/page-at-foo-second-level/dcu_models.jpg---
title: ""Post example with images in cover and content""
date: 2019-01-10
subtitle: ''
description: ''
images:
- foo-first-level-section/foo-second-level/page-at-foo-second-level/victor_hugo.jpg
- foo-first-level-section/foo-second-level/page-at-foo-second-level/dcu_models.jpg
resources:
- name: cover # this should be the name if you want it to appear as article's featured image and used by OpenGraph and Twitter cards
  src: victor_hugo.jpg
  title: ""Portrait photograph of Victor Hugo""
  params: #can be ommited
    license: ""Public Domain""
    original: ""https://commons.wikimedia.org/wiki/File:Victor_Hugo_by_%C3%89tienne_Carjat_1876_-_full.jpg""
---

## Overview

Hey! I have an image that it is not featured, look:

<img class=""img-fluid"" alt=""model diagram"" src=""dcu_models.jpg"" /> 
Tree directory structure of
/content/foo-first-level-section/foo-second-level/page-at-foo-second-level/
would look like:.
|_ index.md
|_ dcu_models.jpg
|_ victor_hugo.jpg
Adding images used in many posts You can also add images to site’s root at /assets/img/ and then use
it directly referring them with full path /img/.....For example, for my_image.png at /assets/img/
then it can be used in multiple posts:
<img class=""img-fluid"" alt=""example image"" src=""/img/my_image.png"" />.Adding pages in multiple languages To add a new language, just specify it in the [languages] section of
config.toml and create a subdirectory in /content as specified at
Translation by content directory
.Then for each page or section:Set translationKey for _index and pages and their slug as
directory or filename. I use the slug of the section/page I am
translating as the translation key, for example for
/content/en/foo/_index.md:EN: /content/en/foo/----
translationKey = ""foo""
----
ES: /content/es/foo-slug-in-spanish/----
translationKey = ""foo""
----
Same process for pages.Then each level of the hierarchy will have its corresponding page in
the other language, and subdirectories will also be translated.InstallationAs a git submodule $ git submodule add -f https://github.com/marcanuy/simpleit-hugo-theme themes/simpleit-hugo-theme
If you don’t have Hugo with git Inside the folder of your Hugo site run:$ cd themes
$ git clone https://github.com/marcanuy/simpleit-hugo-theme
Updating the themeAfter installing the theme, if you added it as a git submodule, you
can update it with:git submodule update --remote --merge
Run locallyIn order to see your site in action, run Hugo’s built-in local server.$ hugo server -t simpleit-hugo-theme
Now enter localhost:1313 in the address bar of your browser.Or just set theme=""simpleit-hugo-theme"" in your configuration.Theme configHave a look at
/exampleSite/config.toml
for theme customization options.Website in subdirectory If the website is located in a subdirectory like example.com/blog/
then URLs should be generated with an absolute path with the following
configuration:canonifyURLs = true
Customizing styles for your websiteIf you want to change some styling to fit your own website needs, copy
the following files to your website instance and edit them:assets/sass/custom_variables.scss: customize variables used by
Bootstrap.assets/sass/styles.scss: your main website styles with all
Bootstrap variables avaiable.Or include them with a SCSS include:for custom_variables.scss:@import ""../../themes/simpleit-hugo-theme/assets/sass/custom_variables.scss"";
and for styles.scss@import ""../../themes/simpleit-hugo-theme/assets/sass/styles.scss"";
Notes for developersIf you plan to change something or contribute to theme development
keep in mind that this theme uses
npm to handle
packages, to install its dependencies:$ cd themes/simpleit-hugo-theme
$ make install
All Bootstrap and Fontawesome SASS variables are available tocustomizing the variablesIn assets/sass/custom_variables.scss
you can customize Bootstrap.use variables in assets/sass/styles.cssFor example, using Fontawesome variables like $fa-var-twitter, in assets/sass/styles.scss:.twitter {
    @include fa-icon;
    @extend .fab;

  	&:before {
  		content: fa-content($fa-var-twitter);
  	}
  }
or using Bootstrap variables like $kbd-bg , in assets/sass/styles.scss:.shell {
  background-color: $kbd-bg;
}
Build Building or serving the website:$ cd themes/simpleit-hugo-theme
$ make build
Serving the theme with changes:$ cd themes/simpleit-hugo-theme
$ make serve
ScreenshotsSingle page screenshot:ContributingDid you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a pull request.Websites using themeHugo websites using this theme:https://simpleit.rockshttps://therunningsecret.comAdd your own website here with a Pull Request!ReferenceGithub repo: https://github.com/marcanuy/simpleit-hugo-theme.gitPage at Hugo themes site: https://themes.gohugo.io/simpleit-hugo-theme/Hierarchical content demo: https://marcanuy.github.io/simpleit-hugo-theme/Flat demo: https://themes.gohugo.io/theme/simpleit-hugo-theme/LicenseThis theme is released under the MIT License. For more information read the License.See AlsoAce documentationAdritian Free Hugo ThemeBeautiful HugoBlogRaBootstrap Theme for Personal Blog and Documentations",NA
Bjørn Erik Pedersen,17,2023-08-06,MIT,"Gallery, Responsive",Galleries Deluxe,Multi gallery theme suitable for large galleries.,https://github.com/bep/galleriesdeluxe,https://galleriesdeluxe.netlify.app/,"Note: The photos in this repo are not for reuse. They are used for demo purposes only.See the demo at galleriesdeluxe.netlify.app.This is built on top of and the plural version of gallerydeluxe.I will create a starter template for this theme later, but for now see the exampleSite folder.Pre-requisites By default, you need Dart Sass installed to build a site using this theme.We’re however currently not using any of the new features in Dart Sass, so you can also use the old libsass embedded into the extended Hugo version by setting the following in your config.toml:[params]
    [params.galleriesdeluxe]
        # One of dartsass or libsass.
        sass_transpiler = ""libsass""
The default and recommended value is dartsass.Configuration See vars.scss for a list of Sass variables.These can be overriden either in order of presedence:The Hugo configAdding a assets/scss/galleriesdeluxe/vars-custom.scss file to your project.See AlsoAcademicAutoPhugoBilberry Hugo ThemeBridgetDoors",NA
Aziz N,17,2023-04-15,BSD 2-Clause License,Blog,Hugo Cat,Hugo Blog Portofolio Dark theme CSS only,https://github.com/httpsecure/hugo-cat,https://hugo-cat.pages.dev/,"hugo-catHugo v0.111.3demohttps://hugo-cat.pages.dev/This a hugo theme based on hugo red rose and rewrite without bootstrap .Make it your own.If you like this themes dont forget ⭐ .Also free to contribute making this theme complete, writing scheme json or dark mode etc.Installation Install Hugo and create a new site & dir struct. See the Hugo documentation for details.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
akatiggerx04,17,2023-01-20,GPLv3,"Dark, Minimal",Graysx,A minimal responsive gray Hugo theme.,https://github.com/akatiggerx04/graysx-hugo,NA,"GraySX | Demo | Page Speed (91%)A Minimal Gray Hugo ThemeInstallation Create a new Hugo site (Skip if already done) hugo new site example && cd example
Download and install GraySX git clone https://github.com/akatiggerx04/graysx-hugo/ && mv graysx-hugo themes/graysx && cp -r themes/graysx/exampleSite/* .
Credits This theme is forked and ported to Hugo from: https://github.com/startbootstrap/startbootstrap-grayscale.See AlsoAcademicAnatoleAnubisAstatineAva",NA
tylerjlawson,17,2022-09-27,MIT,"Bootstrap, Personal, Portfolio",Port Hugo,Web Developer Portfolio,https://github.com/thegitduck/port-hugo,https://compassionate-kepler-de5af1.netlify.app/,"Port-Hugo (A simple portfolio)This theme is a simple, customizable portfolio for designers or web developers.Features Responsive portfolioEasy sections to useHugo image processing for optimizationPostCSS for autoprefixingSCSS for easy stylingHugrid based portfolio sectionSomrat based designInstall theme on your hugo site hugo new site your-site-name # if you already have a site ignore this line and the next
cd your-site-name
cd themes
git clone https://github.com/tylerjlawson/port-hugo.git
Once you have done this, you may use the exampleSite folder as an example for how to set your project up. The two main things to pay attention to is to first set this in your config.toml file:theme = ""port-hugo""
Then you will need to replicate the data used in the exampleSite/data/content.yaml file to fill in the fields for your portfolio. Please also see the exampleSite/config.toml for guidance on setting up the more general site configurations.Credits I’d like to express gratitude to somrat and hugrid for creating wonderful themes that I have used as a jumping off point. You may notice this theme is very similar in design to somrat, however it has distinct differences by using a manipulated version of hugrid for the portfolio section. I have also trimmed down the features of somrat, to only include what I wanted for a simple theme.Contributing Please feel free to post issues or make pull requests at any time. I am always open to collaboration.See AlsoAdritian Free Hugo ThemeHugo InitioLightbiPaigeUp Business Theme",NA
Yannic Haupenthal,16,2023-06-23,MIT,"Minimal, Personal",linkshrubbery,"A fast, minimal, responsive Hugo theme similar to Linktree.",https://github.com/tohn/linkshrubbery,https://ls.uxg.ch,"LinkshrubberyA fast, minimal, responsive Hugo theme similar to
Linktree.Features All of Hugo’s builtin Content
ManagementFast loading with a 95-100 score on Google
PageSpeedAbility to use Bootstrap
4
CSS classes via HTML/CSS in MarkdownAbility to use Font Awesome iconsAbility to customize the theme styles via SassAbility to customize the following items via Hugo
configuration fileMeta descriptionSubtitleAvatarLogoBackground colorFont colorUsage This following guides installation, configuration, and updating of the
Linkshrubbery Hugo theme.Installation Before installing this theme, be sure to install
Hugo
and create a new
site.To install the theme, run the following from the root directory of your
Hugo site:git submodule add https://github.com/tohn/linkshrubbery.git themes/linkshrubbery
Configuration Next, open the config.toml file in the root of your Hugo site and set
the theme:theme = ""linkshrubbery""
Example config.toml file with all configuration features filled out:baseURL = ""https://example.org""
title = ""Linkshrubbery""
languageCode = ""en-us""
theme = ""linkshrubbery""
relativeURLs = true
enableEmoji = true
enableRobotsTXT = true
copyright = ""&copy; Year, Your Name""
disableKinds = [""taxonomy"", ""term""]

# Configuration Features
[params]
  description = ""Your meta description""  # Your meta description of the site
  avatar = ""/images/avatar.png""          # Path to avatar image starting from the static directory
  logo = ""/images/logo.png""              # Path to logo image starting from the static directory
  [params.style]                         # CSS style overrides
    backgroundColor = ""#f8f9fa""
    fontColor = ""#212529""
Adding content This theme uses Data
Templates for content. If
you want to add a “page”, create two files:data/shrubberies/new_page.yamlcontent/new_page.mdThe file new_page.yaml could contain the following content:---
name: ""Test""
description: ""Test.""
avatar: ""/images/avatar.png""
social:
  - name: ""GitHub""
    link: ""https://github.com/test""
    icon: ""github""
  - name: ""Website""
    link: ""https://example.org""
    icon: ""link""
    icon_set: ""fas"" # if it's not a brand, you have to provide the icon_set
  - name: ""Instagram""
    link: ""https://www.instagram.com/test/""
    icon: ""instagram""
shrubberies:
  - name: ""Ni!""
    link: ""https://www.youtube.com/watch?v=2UbtcmjfKa8""
    icon: ""youtube""
    icon_set: ""fab"" # here it's the other way around: if it's not a brand, you have to provide the icon_set
The file content/new_page.md could contain the following content:---
title: ""Test""
---
Test.
Updating To get updates to the theme, run the following from the root directory
of your Hugo site:git submodule update --remote themes/linkshrubbery
Adding Custom Styles Adding custom styles to the linkshrubbery theme is simple. There are two
options available for doing so.Option 1 In the config.toml file of your website, you can set the following
custom style parameters:[params.style]
  backgroundColor = ""#f8f9fa""
  fontColor = ""#212529""
If you’d like to see other custom styles available as config parameters,
please open an issue.Option 2 To add custom Sass styles to the linkshrubbery
theme, you’ll need to add the following file to the
assets
directory of your site:assets/sass/custom.scssIn the file, you can use Sass syntax to
declare your custom styles. After doing so, you should see custom
styling added to your linkshrubbery based Hugo site.Demo To run a live demo of the theme on your laptop, run the following from
the exampleSite directory of the linkshrubbery theme:hugo server --themesDir ../.. --watch --logLevel info --cleanDestinationDir --disableFastRender
For a live demo of the theme, see at:ls.uxg.chContributing If you have an idea for a new feature or found a bug, please feel free
to use Github issues
to let me know.License MITCredits Thanks a lot! :blush:CreditsTODO use next-gen formats for images, like webpprovide automatic width and height for imagesSee AlsoAcademicAdritian Free Hugo ThemeAnatoleAnubisArchie",NA
Aditya Telange,16,2023-06-07,MIT,NA,Index,NA,https://github.com/adityatelange/hugo-index,NA,"Hugo Index | DemoDocs Variables VariableValueDescriptionparams.showDescriptioninHometrueparams.hideAllTagsinHometrueparams.titleIconindex.pngparams.headers.keyTitleparams.headers.valueTagspermalinks.tags@:slugPowered by Hugo - The world’s fastest framework for building websites.Fuse.js - Lightweight fuzzy-search, in JavaScriptQuicklink - Faster subsequent page-loads by prefetching in-viewport links during idle time",NA
Hauke Stieler,15,2023-07-29,MIT,"Blog, Minimal, Multilingual, Responsive",hamburg,Simple and clean blog theme for hugo,https://github.com/hauke96/hugo-theme-hamburg,NA,"HamburgHamburg is a simple and clean blog theme for Hugo based on the vienna-theme from keichi.ScreenshotsDesktop Mobile OverviewNotable features I would tell somebody are:Consistent designClean and flat designEasy to customizeResponsive design (mobile friendly)Font Awesome iconsNavigationTagsMenuSupport for multiple authorsMultilingual (in every way! Author information, menus, pages, posts, tags)Analytics with any JavaScript-Snipped based service (Google Analytics, Matomo/Piwik, &mldr;)Addional shortcodesInstallationIn your hugo site directory, run:git clone https://github.com/hauke96/hugo-theme-hamburg.git themes/hamburgThe theme should now be in themes/hamburg/.ConfigurationYou may specify following options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features:baseurl = ""http://your-site.com""
defaultContentLanguage = ""en""
defaultContentLanguageInSubdir = ""true""
title = ""Your site title""
theme = ""hamburg""

[params]
    # Short subtitle/tagline. This is displayed in the header.
    themecolor = ""#hexcolor"" # Defines the tab color in Chrome for Android.
    # To load additional CSS styles
    customCSS = ['hamburg.css']
    # Show this very user-friendly and absolutely not annoying GDPR notice at the bottom of the page
    ShowGDPRNotice = true
	subtitle = ""The great example site of the hugo-hamburg-theme""
	# Since 0.57.0 there's the concept of ""main sections"". The files for the section ""posts"" are in ""./content/posts/"".
	mainSections = [""posts""]

[languages]
    [languages.en]
        languageCode = ""en""
        languageName = ""English""
        subtitle = ""A simple subtitle""
        # Copyright notice. This is displayer in the footer.
        copyright = ""&copy; some license""
        [languages.en.menu]
            [[languages.en.menu.main]]
                name = ""About""
                identifier = ""about""
                url = ""pages/about""
    [languages.de]
        languageCode = ""de""
        languageName = ""Deutsch""
        subtitle = ""Ein einfacher Untertitel""
        copyright = ""&copy; eine Lizenz""
        [languages.de.menu]
            [[languages.de.menu.main]]
                name = ""Über""
                identifier = ""about""
                url = ""pages/about""
Additional vienna-theme params There’re some other params from the original vienna theme I’ve not used so far. Most of them might not work anymore, so there’s no guarantee:[params]
    # Social accounts. Link to these accounts are displayed in the header and
    # footer.
    twitter = ""Your Twitter username""
    github = ""Your GitHub username""
    gitlab = ""Your GitLab username""
    linkedin = ""Your LinkedIn username""
    googleplus = ""Your Google+ user id""
    facebook = ""Your Facebook username""
    reddit = ""Your Reddit username""
    hackernews = ""Your Hacker News username""
    stackoverflow = ""Your Stackoverflow user id (number)""
    keybase = ""Your keybase.io username""
    instagram = ""Your Instagram username""
    # Disqus shortname
    disqus = ""Your disqus shortname""
    # Google Analytics API key.
    ga_api_key = ""Your Google Analytics tracking id""
    # Mixpanel API key.
    mixpanel_api_key = ""Your Mixpanel API key""
UsageParams of posts (front matter) There’re some options you can set in the header of a post or page:# The date will be at the bottom of the page at the ""Posted on ..."" label
date = ""2018-08-13T15:38:27+02:00""
title = ""Erster Eintrag""
draft = true
author = ""hauke""
# The summary will be shown at the start page or other page/post lists
summary = ""Dies ist nur ein Testbeitrag um die Website zu testen.""
 # This will ensure that the date is not printed
noshowdate = true
Shortcodes There’re some simple shortcodes to make things easier.Link to a tag Creates a simple link to a tag page:I like {{< linkTag veggy-food ""yummi vegetarian food"" >}}.
Include images Includes images and opens them in a new tab when clicked:{{< img ""photo.png"" ""What a lovely picture"" >}}
Get URL to an image Creates a link to the given image{{< imgUrl ""photo.png"" ""link text"" >}}
Embed scaled image Scales an image to the given size and embeds it like the shortcode img does.{{< imgUrl ""photo.png"" ""What a lovely picture"" ""500x"" >}}
(This image is scaled to 500 pixels in width, the height is determined automatically)Multiple authors This theme will read the information of an author based on the language code of a page.To support multiple authors, create a data/<lang>/authors/name.toml file (so e.g. data/en/authors/hauke96.toml). This file contains information about the author:name = ""Your name""
avatar = ""/images/avatar.jpg""
contact = ""mailto:mail@foobar.com""
bio = ""Something about you""
To support multiple languages, create multiple directories in the data directory. So for German as second language (languageCode would be de) the above example would also have a data/de/authors/hauke96.toml file.Tracking You can use the above configuration with e.g. Google Analytics or use your own JavaScript snippet to do so.For a custom JavaScript snippet you have to create a layouts/partials/tracking.html file and put the necessary code into this file. The file (if it exists) will be embedded into the footer next to the other tracking mechanisms.I tested this with the Matomo analytics software, which provides a JavaScript or image-based snipped that I put into the tracking.html.See AlsoAcademicAnubisBear CubBeautiful HugoBootstrap-BP",NA
wlh,15,2023-05-03,MIT,"Blog, Dark",hulga,A simple hugo blog theme based on bulma,https://github.com/wlh320/hugo-theme-hulga,NA,"hugo-theme-hulgahugo + bulma = hulgaScreenshot build hugoBasicExample without any config of this themeDemo build hugo site with configsDemo siteMy BlogFeatures small & fastbasic functions:category list&term pagestag list&term pagesarchives pagestable of contents (TOC) sidebarprefers-color-scheme media supportPWA supportInstall clone to hugo site themes foldergit submodule add https://github.com/wlh320/hugo-theme-hulga.git themes/hulga
enable it in config.tomltheme = ""hulga""
and then config it.to use postcss, you should have hugo extended version installed, then copy package.json and postcss.config.js to the root of your site folder, then npm installIf your language is not en or zh-cn, you may need to add i18n files in i18n folder to show some i18n strings in this theme.Ensure the to put all content in a directory titled “post” for the theme to populate the articles. Ex. content\postConfig An example of avaliable params:baseURL = ""https://example.com""
languageCode = ""zh-cn""
DefaultContentLanguage = ""zh-cn""
title = ""My New Hugo Site""
paginate = 10
theme = ""hulga""

[params]
  # show in HTML meta tag
  author = ""xxx""
  keywords = ""HTML, hugo, CSS""
  description = ""xxx's blog, xxx xx xxxx""

  # change bulma's primary color
  primaryColor = ""#1793d0""

  # subtitle on homepage
  subtitle = ""This is a subtitle""

  # copyright text on footer
  copyright = ""Copyright © 2020 wlh. All rights reserved.""

  # enable katex rendering on every post page, default false
  math = false

  # enable postcss, mainly for css purge (129kB->20kB->4.8kB gzipped, but this makes build slower), default false
  postcss = true

  # enable showing content summary below post title in home page, default false
  showSummary = true

  # set paginate on taxonomy term page (tags or categories), default 10
  termPaginate = 3

  # enable toc on every post page, default false
  toc = true

  # enable TOC auto collapse, default false
  autoCollapseToc = true

  # enable prefers-color-scheme:dark, default false
  darkMedia = true

  # enable hero section's is-bold effect, default false
  heroBold = false

  # enable hero section that looks like steam deck's home page, default false
  heroSteamDeck = false

  # enable PWA, prepare your icons and DON'T forget to modify manifest.json, default false
  pwa = true

  # disable jsdelivr cdn, default false
  noCDN = false

# to enable different hightlight themes in light/dark mode 
[markup]
  [markup.highlight]
    noClasses = false

[menu]
  [[menu.main]]
    identifier = ""index""
    name = ""首页""
    url = ""/""
    weight = 1
  [[menu.main]]
    identifier = ""archives""
    name = ""归档""
    url = ""/archives/""
    weight = 2
  [[menu.main]]
    identifier = ""about""
    name = ""关于""
    url = ""/about/""
    weight = 3
  [[menu.main]]
    identifier = ""tags""
    name = ""标签""
    url = ""/tags/""
    weight = 4
  [[menu.main]]
    identifier = ""categories""
    name = ""类别""
    url = ""/categories/""
    weight = 5

[taxonomies]
category = ""categories""
tag = ""tags""
Acknowledgement 本项目的诞生离不开以下开源项目：hugo 静态页面生成bulma CSS框架bulmaswatch 借用了其中的 dark 主题purgecss cssnano 缩减CSS文件大小katex $\LaTeX$ 公式渲染anchorjs 添加锚链tocbot 生成目录vanilla-back-to-top 回到顶部 (好懒，这都不自己写)See AlsoAcademicAnatoleAnubisAstatineAutoPhugo",NA
guangmean,15,2023-04-05,MIT,"Blog, Dark, Minimal, Personal, Responsive",Niello,A clean and elegant dark Theme for Hugo,https://github.com/guangmean/Niello,https://www.angularcorp.com,"NielloNiello is a clean and elegant Hugo dark theme that is perfect for showcasing your content. It supports Google Analytics, Adsense, and other features to help you grow your online presence.[Note: master branch is unstable, only tags version are stable.]FeaturesSimple, CleanSyntax Highlight with highlight.jsGoogle AdsenseGoogle AnalyticsHTML5 BoilerplateDark ModeScreenshotInstallationIn the root of your Hugo site directory run:git clone https://github.com/guangmean/Niello.git themes/Niello
ConfigurationThis is an example of site config.toml (Note: Nginx bypass based config):defaultContentLanguage = ""en""
languageCode = ""en-us""
defaultContentLanguageInSubdir = true
baseURL = ""https://www.angularcorp.com/"" # Must end with splash
languageCode = ""en-us""
title = ""{CodeTrace} - Discover Issues, Share Solutions.""
disqusShortname = ""yourDisqusShortname"" // Add third-party comments system

staticDir = [""static"", ""themes/Niello/static""]

theme = ""Niello""

[languages]
	[languages.en]
		#baseURL = ""Don't write baseURL here for each language, will cause issue.""
		title = ""{CodeTrace} - Discover Issues, Share Solutions.""
		languageCode = ""en-us""
		LanguageName = ""🇺🇸English""
		contentDir = ""content/en""
		weight = 1
	[languages.zh]
		title = ""{码途轨迹} - 发现问题，分享解决.""
        languageCode = ""zh-cn""
        LanguageName = ""🇨🇳中文""
        contentDir = ""content/zh""
        weight = 2
        
[params]
keywords = """"   //SEO keywords
description = """"    //Site description
copyright = ""&#xA9; 2019 - 2022 by guangmean. All Rights Reserved.""
google_ad_client = ""ca-pub-******""  //Optional, replace ca-pub-****** with your content
ga = ""UA-******"" //Optional, replace UA-****** with your Google Universal Analytics   
ga4 = ""G-******"" //Optional, replace G-****** with your Google Analytics GA4
sharethis = """"  //Optional, Add hou ShareThis appid here

[menu]
    # English
    [[languages.en.menu.niello]]
    identifier = ""home""
    name = ""Home""
    url = ""/en/"" 
    weight = 1 

    [[languages.en.menu.niello]]
    identifier = ""tags""
    name = ""Tags""
    url = ""/en/tags/""
    weight = 2 

    [[languages.en.menu.niello]]
    identifier = ""contact""
    name = ""Contact""
    url = ""/en/post/contact/""
    weight = 3 

    # Chinese
    [[languages.zh.menu.niello]]
    identifier = ""home""
    name = ""首页""
    url = ""/zh/""
    weight = 1 

    [[languages.zh.menu.niello]]
    identifier = ""tags""
    name = ""标签""
    url = ""/zh/tags/""
    weight = 2 

    [[languages.zh.menu.niello]]
    identifier = ""contact""
    name = ""关于""
    url = ""/zh/post/contact/""
    weight = 3
    
Google Adsense & Google AnalyticsNiello support Google Adsnese code by configure the google_ad_client param in [params] block and Google Analytics code by the ga param in the site config.toml as abover.ShareThisNiello support share your content to other platforms by ShareThis.DemoA fully demo is available here: https://www.angularcorp.comSee AlsoAcademicAnatoleAnubisAstatineBear Cub",NA
wamo,14,2023-07-28,MIT,"Dark, Light, Minimal, Personal, Responsive",VNovel,Pixiv-like theme for novels.,https://github.com/opera7133/vnovel,https://vnovel.pages.dev,"VNovelPixiv-like theme for novels.The demo can be seen here: https://vnovel.pages.devFeatures ResponsiveSupport tagsSwitch Light / DarkGoogle AnalyticsYandex MetricaRSS FeedsSupported i18n (en/ja)Lighthouse 100/100Installation Method 1 Inside the folder of your Hugo site run:$ git clone https://github.com/opera7133/vnovel themes/vnovel
Updating theme:$ cd themes/vnovel
$ git pull
Method 2 Inside the folder of your Hugo site run:$ git submodule add https://github.com/opera7133/vnovel.git themes/vnovel
Updating theme:$ git submodule update --remote --merge
Install dependencies Copy at least the following files from themes/vnovel/exampleSite to the root folder of your site.package.jsontailwind.config.jspostcss.config.jsAfter that, run this command.$ npm install
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.Update config file Copy the config.toml in the exampleSite to the root of your Hugo site. Change strings as you like.Check your site In order to see your site in action, run Hugo’s built-in local server.$ npm run start
Now enter localhost:1313 in the address bar of your browser.Build your site $ npm run build
Contributing If you find a bug or have an idea for a feature, feel free to write an issue or make a PR.License This theme is released under the MIT license.See AlsoAcademicAnubisBlondeBlowfishColor Your World",NA
JIANGYY,14,2022-09-14,MIT,"Blog, Dark, Light, Personal",OneLou,A simple hugo theme.,https://github.com/jyygithub/hugo-theme-onelou,https://onelou.netlify.app/,"Hugo Theme OneLouDemo exampleSiteInstall Create a hugo site.hugo new site myblog
Clone themecd themes

git clone https://github.com/jyygithub/hugo-theme-onelou.git
Use myblog/themes/config.yaml instead of myblog/config.tomlRun, start https://localhost:1313/hugo server -D
See AlsoCalligraphyAcademicAnubisBlondeBlowfish",NA
xsling,14,2022-09-10,CC BY-NC-SA 4.0,"Blog, Dark, Light, Responsive",Vno,A Simple and Responsive blog theme for Hugo.,https://github.com/xslingcn/Vno-Hugo,https://vno-hugo.netlify.app/,"Vno - HugoVno Hugo is a simple, responsive theme for Hugo, it’s a port of onevcat’s Vno - Jekyll.See demo here.Installation Inside the folder of your Hugo site run:git submodule add https://github.com/xslingcn/vno-hugo.git themes/vno-hugo
Copy everything in the exampleSite folder to the root of your hugo site, then run hugo serve. Your site with Vno Hugo enabled should be accessible in http://localhost:1313/.For more information about Hugo, please visit Hugo’s site.Configuration All configuration could be done in config.yml. Everything in the config file should be self-explanatory.If you want to enable MathJax support, set math param in the front matter to true.Background image and avatar You could replace the background and avatar image in static/images folder to change them.Licence Great thanks to onvcat who made such a great theme. Vno Hugo is followed with Vno Jekyll/Uno and be licensed as Creative Commons Attribution 4.0 International. See the link for more information.See AlsoCalligraphyAcademicAnubisBlondeBlowfish",NA
Youssef Hesham,13,2023-09-05,GPL-v3,"Blog, Minimal, Personal, Responsive",Kaslaanka,kaslaanka is a minimalist theme for Hugo,https://github.com/M1cR0xf7/kaslaanka,https://m1cr0xf7.github.io/kaslaanka,"KaslaankaA minimalist theme for Hugo.Live Demo at: m1cr0xf7.github.io/kaslaankathis theme is a fork of Hugo-tanka theme.this theme is a “do it yourself” theme, you probably want to change the css to make it your taste,
use custom.css to do it.Description minimalist themeeasily customizableeasy to setupdoes not need any javascript (javascript is optional)works as a blog or/and a personal websitegives you a space to be creativenew features remove the bloat (utterances comments, progressivly, highlight.js)scriptless by default.removed bootstrap.changed how the index, single pages and blog posts look.blog list on the home page is limited, if the users want to see more
they go to /blog/listing projects on the home page.brief about me on the home page.support unlisted articles.better favicons.better tagsadd categoriesadd multiple languages supportHUGE first letter paragraph (if you want)Brief description under blog post titleInstallation Install hugo using the
setup guide.Create a new Hugo sitehugo new site .
add the theme to your Hugo site# first initialise your repository with git
git init
# then fetch the theme and put it inside themes/ directory
git submodule add https://github.com/M1cR0xf7/kaslaanka.git themes/kaslaanka
use the theme by adding this line in your config (config.toml) filetheme = 'kaslaanka'
to get your site ready add the following params to your config:[params]
sitename = ""Kaslaanka Theme""
copyrights = ""John Doe""
defaultList = ""global""
paginationLen = 3
projectsURL = ""https://example.com""
brief_about = ""<center>Kaslaanka theme demo made with ❤️️</center>""
run this in your terminal to see progress:hugo serve
it usually serves on http://localhost:1313/. Now you’ve are half way there.Let’s add some of our awesome projects to the homepage. add the following under [params][[params.myprojects]]
name = ""Totally Awesome Project""
description = ""Machine Learning Magic!!!""
url = ""https://example.com""

[[params.myprojects]]
name = ""Kaslaanka""
description = ""The best hugo theme ever!!!""
url = ""https://github.com/M1cR0xf7/kaslaanka""
Let’s add some nav links:[[menu.primary]]
name = ""Home""
url = ""/""
weight = 1

[[menu.primary]]
name = ""About""
url = ""/about""
weight = 2

[[menu.primary]]
name = ""Subscribe""
url = ""/index.xml""
weight = 3
Now you are done installing the theme. Read Hugo’s
documentation and continue your
journey. i will use yaml to write the rest of the README, it’s easy
to convert between them, just use whatever you like. Check out
config.yml annotated with comments.you should check out exampleSite/. don’t copy it fully, there are
some workaround used in layouts/blog/ to deploy on github pages,
please ignore it.Customization custom.css add your custom css here /static/css/custom.css/* <span class=""first-letter"">H</span>ello World! */
.first-letter {
	font-family: ""Roboto Serif"";
}
custom.js add your custom javascript here /static/js/custom.js// be creative
for(;;){alert(""HAHAHAHAHAH"")}
external scripts you can add external scripts in /layouts/partials/scripts.html<script src=""..."" ... ></script>
meta & link tags you can add as much <meta> and <link> as you like in
/layouts/partials/meta.htmltags tags:
  - hello
  - ok
this post will be listed at /tags/hello/ and /tags/ok/categories categories:
  - travel
this post will be listed at /categories/travel/config.yml sitename: ""Site Name!""
baseURL: ""/""
languageCode: en-us
title: ""Kaslaanka Theme""
author: John Doe

enableEmoji: true
hasCJKLanguage: false
# You can change code highlight theme
pygmentsstyle: ""tango""
pygmentscodefences: true

# if you want to add html to your markdown
markup:
  goldmark:
    renderer:
      unsafe: true

# Links of the navbar
menu:
  primary:
    - name: Home
      url: /
      weight: 1
    - name: About
      url: /about
      weight: 2
    - name: Subscribe
      url: /index.xml
      weight: 3

# You can add languages!
# do not expect it to work out of the box
# https://gohugo.io/content-management/multilingual/
defaultContentLanguage: en
languages:
  en:
    LanguageName: English
    # contentDir: content/english
  ru:
    LanguageName: русский
    # contentDir: content/russian

params:
  sitename: ""Kaslaanka Theme""
  # it will produce: copyrights (c) 2022 joe
  copyrights: John Doe
  # set default homepage list (what section to list pages from)
  # default: global
  # currently available options (global, blog)
  defaultList: global
  # list 3 items of every section
  # you can use a section specific list
  # to list n items of that section.
  # see ./layouts/partials/bloglist.html for example
  paginationLen: 3
  # path to the favicon directory
  # see ./layouts/_defaults/baseof.html line #30 to line #37
  # faviconpath: ""/img/favicon""
  # projects will show in the index page
  myprojects:
    - name: ""Totally Awesome Project""
      description: ""Machine Learning Magic!!!""
      url: https://example.com
    - name: ""Kaslaanka""
      description: ""The best hugo theme ever!!!""
      url: https://github.com/M1cR0xf7/kaslaanka
  # link to more projects
  # show your github repositories as example
  # or create your own page.
  projectsURL: https://example.com

  # a brief about me
  brief_about: <center>Kaslaanka theme demo made with ❤️️</center>

# and don't forget
theme: kaslaanka
config.toml sitename = ""Site Name!""
baseURL = ""/""
languageCode = ""en-us""
title = ""Kaslaanka Theme""
author = ""John Doe""
enableEmoji = true
hasCJKLanguage = false
pygmentsstyle = ""tango""
pygmentscodefences = true
defaultContentLanguage = ""en""
theme = ""kaslaanka""

[markup.goldmark.renderer]
unsafe = true

[[menu.primary]]
name = ""Home""
url = ""/""
weight = 1

[[menu.primary]]
name = ""About""
url = ""/about""
weight = 2

[[menu.primary]]
name = ""Subscribe""
url = ""/index.xml""
weight = 3

[languages.en]
LanguageName = ""English""

[languages.ru]
LanguageName = ""русский""

[params]
sitename = ""Kaslaanka Theme""
copyrights = ""John Doe""
defaultList = ""global""
paginationLen = 3
projectsURL = ""https://example.com""
brief_about = ""<center>Kaslaanka theme demo made with ❤️️</center>""

  [[params.myprojects]]
  name = ""Totally Awesome Project""
  description = ""Machine Learning Magic!!!""
  url = ""https://example.com""

  [[params.myprojects]]
  name = ""Kaslaanka""
  description = ""The best hugo theme ever!!!""
  url = ""https://github.com/M1cR0xf7/kaslaanka""
posts you can make a post unlisted by adding the following---

unlisted: true

---
add a brief description to a single blog page.---

brief: ""This is my demo brief!""

---
if you want to add an edit counter, see edit in the front matter.
you increment it every time you edit the post. where 3 is the
number of edits.---

edits: 3

---
LICENSE GPL-3.0 LICENSE.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Mani Kumar,12,2023-08-23,GPL-3.0,"Blog, Contact, Dark, Light, Minimal, Personal, Portfolio, Responsive",xterm,Hugo theme designed for reading and printing text with dark and light modes.,https://github.com/manid2/hugo-xterm,https://manid2.github.io/hugo-xterm/,"hugo-xtermHugo theme designed for reading and printing text with dark and light modes.

Demo Demo example site manid2.github.io/hugo-xterm.Support Kindly support this theme development by donating at Buy me a
coffee.Screenshots Dark mode:Light mode:CV template:Features:Features Distinguishing features Designed for reading and printing text.Print: any page in light theme mode for readability.CV: or resume template to reduce vertical space by using 2 columns
and shortcodes to list the experiences and skills.Slides: support using reveal.js (improvement is WIP).Lists: separate view and pagination for simple list items and post
entries.GitInfo: show the latest git commit short hash and subject message for
each page (requires Hugo GitInfo config enabled).Fonts:“Roboto Slab (serif)” for title (heading) text.“Fira Sans (sans-serif)” for normal text.“Ubuntu Mono (monospace)” for code.Colors: in the theme are derived using a single primary color (blue)
from the HSL colors.Website banner is supported.Adopted features Minimal configuration.Switchable dark and light themes with automatic selection based on system
theme.SEO friendly OpenGraph and twitter cards supportCustomizable using configurations for: “full width:, “centered”.Taxonomies and posts RSS.Responsive tested on desktop and on smart phones.Responsive menus for desktop and mobile screens.Accessibility tested using WAVE Web Accessibility Evaluation Tool.Code blocks are highlighted using Hugo built-in blazing fast Chroma.Copy code, see code language and file name (optional).Tightly coupled with Hugo extended latest version (v1.110.0) to compile and
generate asset bundles with pipelines, fingerprinting and minification.Other features These are supported due to panr/terminal theme base code but not
tested as I don’t use them myself:Post cover image.Images in post with caption.Comments.Installation Follows the same steps for installing and updating a Hugo theme such as this
link for installing and updating PaperMode theme
adityatelange/hugo-PaperMod/wiki/Installation.Local development # add to go.mod for local development
# replace github.com/manid2/hugo-xterm => ../hugo-xterm
hugo server --source exampleSite

# generate tags
ctags -R assets/ layouts/ config.toml theme.toml

# generate tags for exampleSite
ctags -R exampleSite/layouts/ exampleSite/scripts/ exampleSite/config
Credits This theme was initially based on panr/terminal theme but is re-written
from scratch to optimize for reading and print text heavy web pages.Parts of the features in this theme are either taken directly or based on the
features from popular themes and websites as listed below:panr/terminal: most styles, menus and starter code.adityatelange/hugo-PaperMod features: breadcrumbs and copy code.kaitlinmctigue/kaitlinmctigue.github.io: dark and light theme modes.License GNU General Public License v3.0See AlsoAcademicHugo LiftoffPaigePikoColor Your World",NA
Hotjuice,12,2023-07-18,MIT,"Blog, Responsive",JuiceBar,NA,https://github.com/hotjuicew/hugo-JuiceBar,NA,"JuiceBarEnglish | 简体中文JuiceBar is a concise, elegan blog theme powered by Hugo.This theme drew a lot of inspiration from PapermMod and LoveIt, and credit is due to their excellent work.⭐Demo → juicebar-demo.add1.devOverview Features Theming: dark/light mode, depending on your system preferences or the users choiceAn easy way to modify the theme with Hugo toolingFully responsiveSupport for social iconsSome beautiful CSS animationsEasy-to-use and self-expanding table of contentsAutomatically highlighting codeCustom script shortcodegiscus comment system supported by giscusHow to start You can install the theme either as a clone or submodule.I recommend the latter. From the root of your Hugo site, type the following:$ git submodule add https://github.com/hotjuicew/hugo-JuiceBar.git themes/JuiceBar
Now you can get updates to hugo-JuiceBar in the future by updating the submodule:$ git submodule update --remote themes/JuiceBar
How to configure The theme doesn’t require any advanced configuration. Just copy the following config file.config.tomlbaseURL = 'http://example.org/' 
languageCode = 'en-us'
theme = ""JuiceBar""
title = ""your_blog_title""

[params]
author = ""your_name""
description = ""My site description""
authorImage = ""/images/profile.jpg""
paginate = 5 
Title = ""your_blog_title""
content = ""I'm JuiceBar, nice to meet you(ˊ˘ˋ*)♡""
imageUrl = ""/images/avatar.jpg""

# To add a new social icon 
# More social icons can be found in JuiceBar\layouts\partials\svg.html.
[[params.social]]
name = ""Github""
url = ""https://github.com/hotjuicew""
[[params.social]]
name = ""telegram""
url = ""https://t.me/Hotjuice""
[[params.social]]
name = ""twitter""
url = ""https://twitter.com/hotjuicee""
[[params.social]]
name = ""email""
url = ""mailto:hotjuicew@outlook.com""
[[params.social]]
name = ""instagram""
url = ""your_url""
[[params.social]]
name = ""mastodon""
url = ""your_url""
[[params.social]]
name = ""reddit""
url = ""your_url""
[[params.social]]
name = ""stackoverflow""
url = ""your_url""

[taxonomies]
category = ""categories""
tag = ""tags""

# To add a new navigation link
[[menu.main]]
name = ""About""
url = ""/about""
[[menu.main]]
name = ""Blog""
url = ""/post""
[[menu.main]]
name = ""Categories""
url = ""/categories""

# If using the giscus commenting system
#[params.giscus]
#repo = ""ENTER REPO HERE""
#repoID = ""ENTER REPO ID HERE""
#category = ""ENTER CATEGORY NAME HERE""
#categoryID = ""ENTER CATEGORY ID HERE""
#mapping = ""og:title""
#reactionsEnabled = ""1""
#emitMetadata = ""0""
#inputPosition = ""bottom""
#lang = ""en""
#loading = ""lazy""

# Used for outputting the documentation (required).
[outputs]
home = [""HTML"", ""RSS"", ""JSON""]
Note: There are more options to configure. Take a look into the config.toml in exampleSite.After installation, take a look at the exampleSite folder inside themes/hugo-JuiceBar.To get started, copy the config.toml file inside exampleSite to the root of your Hugo site:$ cp themes/hugo-JuiceBar/exampleSite/config.toml .
Now edit this file and add your own information. Note that some fields can be omitted.I recommend you use the theme’s archetypes so now delete your site’s archetypes/default.md.Finally, just run $ hugo new content/about.md to create your ‘About’ page, and $ hugo new content/post/title.md to create your first blog post.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Julien Maury,12,2023-01-16,MIT,"Blog, Dark, Minimal, Responsive",Ava,Ava is a light theme for your blog with essential features you might dig in.,https://github.com/jmau111/hugo-theme-ava,https://hugo-theme-ava.netlify.app/,"Hugo Ava Theme


See online demoCode source demoInstallation Install Hugo Follow the official installation guideYou need the extended versionCreate a new Hugo site hugo new site my-site
This will create a fresh Hugo site in the folder my-site.Install theme with Git Clone this repo into the themes foldercd my-site
git clone https://github.com/jmau111/hugo-theme-ava.git themes/hugo-theme-ava
Copy example content You can use contents generated for the demo:cp -a themes/hugo-theme-ava/exampleSite/. .
SVGs It’s not the best practice, but I like to keep things simple.That’s why I call svgs in templates now.Images Default image Use absolute URLs:[params]
  defaultImage = ""https://raw.githubusercontent.com/jmau111/hugo-theme-ava/main/images/default.jpeg""
Default og & meta image Use absolute URLs:[params]
  [params.meta_tags]
    meta_og_image = ""https://raw.githubusercontent.com/jmau111/hugo-theme-ava/main/images/default.jpeg""
Subheader and featured images Use the image parameter in your frontmatter (posts). If you want to use an external image use an absolute path.If you host your images on the same installation, create a folder for your post in the content/ directory:content
   my-post/
    index.md
    images/
      myfeatured.jpg
Then, use relative path in your frontmattter:---
title: ""Example 8""
description: ""This is desc 8""
date: 2023-01-05T11:11:11+01:00
type: ""post""
draft: false
image: ""images/myfeatured.jpg""
---
It’s a bit more constraining, but it allows a better organization, as all resources of the same page are grouped in the content folder.These few changes should not impact previous installations too much. If so, please open an issue.Change colors Feel free to change colors for both light and dark mode. See themes/hugo-theme-ava/assets/scss/_mode_light.scss or themes/hugo-theme-ava/assets/scss/_mode_dark.scss.You can customize other CSS variables in themes/hugo-theme-ava/assets/scss/_variables.scssIcons The theme uses feather icons, a beautiful and free set of svg icons. The /assets/images/ folder contains everything.It’s probably a bit too much, so do not hesitate to delete unused files.Don’t forget to change the favicon You don’t have to remove the one set in the theme but ensure you replace the one in the /static/ folder at the root or your project.humans.txt I’ve included the humans.txt file cause I care about this file. Use custom params to customize it: [params.humans_txt]
    dev_team = """"
    dev_github = """"
    thanks = """"
    standards = """"
    software = """"
    other_notes = """"
Using the config.toml Copy the config.toml file into the root folder of your Hugo site, then you can modify the copy.Run Hugo Run dev server:hugo server
Then you can go to localhost:1313.Build:hugo
Configuration Change baseURL baseURL = ""https://www.mysite.com/""
Google Analytics Add you google analytics ID to the config.toml// config.toml
[params]
  ga_id=""UA-XXXXXXXX-X""
Menu You can edit and add main menu links in the config.toml under [[menu.main]]Images You can set a default image in config.toml:  [params.meta_tags]
          meta_og_image = ""https://raw.githubusercontent.com/jmau111/hugo-theme-ava/main/images/default.jpeg""
You can customize per each post in the front matter:image: ""/images/mangoose.jpeg""
If you don’t set anything then the theme display the default image “https://raw.githubusercontent.com/jmau111/hugo-theme-ava/main/images/default.jpeg"".Comments There’s now a custom Disqus partial. Please be aware this is not the most privacy-focused solution on the market.To enable it, edit the Site variable disqus in the config.toml and replace “xxxxxxx” by your Disqus handle. Otherwise, nothing will be loaded.TODO A lot of stuff, including:i18nmore shortcodesauthor boxBut still, it’s not a multi-purpose theme.License You’re welcome to fork this, but keep the license MIT please.See AlsoAcademicAnatoleAnubisAstatineAxile",NA
Pravin Paratey,12,2022-12-11,MIT,"Blog, Responsive, Two-Column",Prav,Refined two column theme that's easy on the eyes,https://github.com/pravin/hugo-theme-prav,NA,"Hugo Theme PravHistory This theme began it’s life in early 2013, as the theme for my blog “Thoughts on Engineering and Management”. Back then it was generated using nanoc. In 2018, I moved to hugo because of it’s ability to hot-reload the website while I was working.Principles I have always believed in using as little computing resources as possible. This theme uses the excellent purecss css library, which is tiny while still being quite functional.The colours used have been chosen to be easy on the eyes, with just enough contrast to help with accessibility.This theme is by no means complete. I have added to it over the last six years and will continue to do so. I hope you and the rest of the community will help in contributing to making this theme even better.Features This is a two column theme with a navbar at the top and a sidebar to the right. The navbar contains links to major pages and links to social networks. The sidebar contains an about section, a section with the last 10 posts and finally a section which lists tags used across your site.Beautiful tables and images through purecss Syntax highlighting by pygments Set your pygments theme by setting,pygmentsCodeFences = ""true""
pygmentsStyle = ""perldoc""
Example highlighted code,Update the about image To update the image shown in the sidebar, simply create a file called “author.png” in the static/img/ folder. Alternatively, you can edit the path in config.toml file.Feature images in archives Setting the image parameter in the yaml header sets a feature image which is displayed in the articles section. Note that the feature images should be present in the static/img/feature/ folder. The frontmatter should contain something like,image: path-to-image.jpg
Custom header and footer If you want to add custom code to the header or footer, create a file called custom_header.html or custom_footer.html under layouts\partials folder in the root folder of your hugo project. The contents of these files will be included in the header and footer.Comments by disqus To enable comments, set your disqusShortname in config.toml. This will make comments appear on all single article pages. This bit of code is located at layouts/_default/single.html.Social To enable a link to a social network in the header (top-right), enter the url. To disable it, just comment it out. This bit of code is located at layouts/partials/menu.html.Configuration This is an example of the configuration file.baseURL = ""https://example.com/""
languageCode = ""en-gb""
title = ""Hugo Theme - Prav""
theme = ""hugo-theme-prav""

pygmentsCodeFences = ""true""
pygmentsStyle = ""perldoc""

# If you want to track using GA or use disqus for comments, uncomment the 
# following and add the correct values
#googleanalytics = """"
#disqusShortname = """"

# The settings below are used throughout the theme.
# Please update!
[params]
  title = ""Hugo Theme - Prav""
  tagline = ""Lorem ipsum dolor sit amet, consectetur adipiscing elit.""
  author = ""Pravin Paratey""
  authorImgPath = ""/img/author.png""
  authorBlurb = ""Something about me""

# If you do not want a social icon, just comment it out
# Please update the example values!
[social]
  email = ""mailto:example@example.com""
  facebook = ""https://www.facebook.com/example""
  twitter = ""http://twitter.com/example""
  medium = ""https://www.medium.com/@example""
  github = ""https://github.com/example""
  linkedin = ""http://uk.linkedin.com/in/example""
  mastodon = ""https://mstdn.social/example""


# Set unsafe mode to allow markdownify to work with goldmark
# This is important. Please do not delete. It is used to re-render markdown
[markup]
  [markup.goldmark]
    [markup.goldmark.renderer]
      unsafe = true
In closing I hope you enjoy this theme as much as I have enjoyed building and using it over the last few years.-PravSee AlsoArcanaCalligraphyDPSGDenDigital Garden",NA
Kien Nguyen-Tuan,10,2023-09-14,MIT,NA,Cuisine Book,NA,https://github.com/ntk148v/hugo-cuisine-book,NA,"Hugo Cuisine BookA simple Hugo theme


1. Requirements2. Installation2.1. Install as git module2.2. Install as hugo module3. Configuration & Customization3.1. Site configuration3.2. Customization4. ContributingCredits:Highly inspired by Recipe-BookImages from Freepik1. Requirements Hugo extended version.2. Installation 2.1. Install as git module Navigate to your hugo project root and run:git submodule add https://github.com/ntk148v/hugo-cuisine-book themes/cuisine-book
Run hugo (or set theme = “cuisine-book”/theme: hugo-book in configuration file)hugo server --minify --theme cuisine-book
2.2. Install as hugo module You can also add this theme as a Hugo module instead of a git submodule.Start with initializing hugo modules, if not done yet:hugo mod init github.com/repo/path
Navigate to your hugo project root and add [module] section to config.toml:[module]
[[module.imports]]
path = 'github.com/ntk148v/hugo-cuisine-book'
Load/update the theme module and run hugo:hugo mod get -u
hugo server --minify
3. Configuration & Customization 3.1. Site configuration There are a few configuration options that you can add to your config.toml file.# Your base url
baseURL = ""http://localhost/my-title""
# Your page title
title = ""my-title""
theme = ""cuisine-book""
# (Optional) Set this to true to enable Author.
enableGitInfo = true

[params]
  author = ""Your Name""
  description = ""Describe about you""
  # (Optional) Your logo in the header navbar which has to be stored in static folder.
  # If the logo is /static/logo.png then the path would be 'logo.png'
  logo = ""logo.png""
  # (Optional) Enable comments template on pages
  # By default partials/comments.html includes Disqus template
  # See https://gohugo.io/content-management/comments/#configure-disqus
  # Can be overwritten by same param in page frontmatter
  comment = true
  # Set source repository location.
  repo = 'https://github.com/ntk148v/mammam'
  # Enable 'Edit' links.
  # Disabled by default. Uncomment to enable. Requires 'repo' param.
  # Path must point to the site directory.
  editpath = 'edit/master'
  # Enable 'Add' links.
  # Disabled by default. Uncomment to enable. Requires 'repo' param.
  # Path must point to the site directory.
  newpath = 'new/master'
3.2. Customization Extra customization:FileDescriptionstatic/favicon.pngOverride default faviconassets/_custom.scssCustomize or override scss stylesassets/_fonts.scssReplace default font with custom fonts (e.g. local files or remote like google fonts)layouts/partials/comments.htmlOverride comments.html templateFor example, you want to change default site’s background.Add new background to static/, named it as background.png.Add assets/_custom.scssbody {
  background-image: url(""background.png"");
}
4. Contributing Fork it.Create your feature branch (git checkout -b my-new-feature).Commit your changes (git commit -am 'Add some feature').Push to the branch (git push origin my-new-feature).Create new Pull Request.",NA
NA,10,2023-07-12,NA,NA,Corporio,NA,https://github.com/AminZibayi/Corporio,NA,"CorporioCorporation Website TemplateCorporio is an enterprise level corporation website template leveraging latest technologies making it secure, fast, and SEO-ready — by defaultDemoWhy Corporio?RequirementsGet StartedStandalone Website1. Create a new site2. Install dependencies3. Start development serverAs a Theme1. Create a new site2. Install dependencies3. Configure websiteTina CMSUsing TinaCMS development modeUsing TinaCMS with Corporio in productionBuilding without TinaCMSBenefits of using TinaCMSOther commandsDocumentationContributingCommunitiesLicenseDemo corporio.onrender.comWhy Corporio? Eight reasons why you should use Corporio:Security aware. Get A+ scores on Mozilla Observatory out of the box. Easily change the default Security Headers to suit your needs.Fast by default. Leveraging the fastest static site generator, delivering optimized and minified static assets on the fastest CDNs on Render and Netlify.SEO-ready. Use sensible defaults for structured data, open graph, and Twitter cards. Or easily change the SEO settings to your liking.Tina Integrated. Do you prefer a graphical user interface over a text editor? or do you want to deliver the website to your non-technical customer? If so, Corporio is already integrated with tina, a feature-rich headless CMS.Development tools. Code with confidence. Check styles, scripts, and markdown for errors and fix automatically or manually.Responsive. Build robust, flexible, and intuitive websites with that looks best on any device.Integrated Blog. Beside the modern and well-designed company landing page, Corporio ships with a built-in and ready full-featured blog.Products Page. Introduce your products and services perfectly and impress your customers with our stunning product pages.Deploy-ready. Deploy to Netlify or Render with sensible defaults. Easily use Netlify Functions, Render Redirects, and Headers.Requirements Node.js — latest LTS versionGet Started Start a new Corporio themed site in two ways either as a theme or as a standalone website
Please note that it is recommended to use PNPM however you may also use NPM or Yarn, but they are not guaranteed to work.Standalone Website 1. Create a new site git clone https://github.com/AminZibayi/Corporio.git my-corporio-site && cd my-corporio-site
2. Install dependencies npm install
# OR
pnpm install
3. Start development server npm run start
# OR
pnpm start
As a Theme 1. Create a new site git submodule add https://github.com/AminZibayi/Corporio.git themes/corporio
2. Install dependencies cd /themes/corporio && pnpm install
3. Configure website Add theme: ""corporio"" to your website config file.Tina CMS The Corporio template includes integration with TinaCMS, an open-source headless content management system. TinaCMS allows you to edit and manage content directly within GitHub repositories using a graphical editing interface.Using TinaCMS development mode The tina:dev script starts TinaCMS in dev mode along with the Hugo development
server. This allows editing content in TinaCMS and seeing changes live.
Head to http://localhost:1313/admin to see Tina admin panel.Using TinaCMS with Corporio in production The tina:build script builds TinaCMS alongside generating a static site output with Hugo.Sign up for a free Tina account at https://tina.io/Create a new project and connect your GitHub repository that contains the Corporio codebaseEnter your own tina clientId and token in tina/config.jsTina will automatically detect the configuration for collections and fields in tina/config.jsYou can then edit content in Tina’s sidebar interface or modal popupsSaved changes will commit back to your connected repoBuilding without TinaCMS If you don’t need Tina integration, you can use the command pnpm build. This command will skip the Tina build step.Benefits of using TinaCMS Edit content visually without needing to edit codeIntegrated workflow using your existing Git repoCollaborate with other editors and content creatorsWork with both markdown and YAML contentFlexible fields and media managementOther commands TODODocumentation TODOContributing You can contribute to this project by using it to create your own website, sharing it with your friends, sharing your ideas or reporting a bug through opening an issue and informing us if you have crafted your website using Corporio.Contribution to the source code and documentation are highly welcome, there are many comments in the source code containing the keyword TODO: which could be a good staring point for you, feel free to ask a question by opening an issue.Communities TODOLicense The MIT License",NA
José Luis Núñez,10,2022-11-25,MIT,NA,Just me,A minimal and fancy theme for Hugo to create Personal Pages just with awesome backgrounds and your social profiles,https://github.com/jota-ele-ene/just-me,NA,"Just me!A minimal and fancy theme for Hugo to create Personal Pages with no blog or extra content, just awesome rotating backgrounds and your social profiles to allow people contact you. A demo site is deployed here: https://jota-ele-ene.github.io/just-me-starter.Features Just a homepage with rotating fullscreen backgroundsConfigure it including your social profilesManage both backgrounds and social profiles like any other content in Hugo to avoid hard-coding in config-filesSupport for Google AnalyticsContact form (in progress)Getting started The easiest way to get started is to import this theme in Forestry CMS{:target=""_blank""} in a single clickOnce the import is complete, you can start to customize your site editing front matter for backgrounds, profiles and home page. They are accesible from the Forestry sidebar. If you prefer import it from the command line, go to your Hugo project root folder and run:git submodule add https://github.com/jota-ele-ene/just-me.git themes/just-me
If you already had a site running, change the theme variable in your config.toml to just-me. Besides common variables like baseURL, title, languageCode and theme, add two new variables in the params section identifying you and a link where anyone can find info about you. These params will be shown in your homepage footer. They should appear in your file like this:[params]
  author = ""John Doe""
  author_link = ""#""
You can also add the ga_tracking_id param and set your Google Analytics tag.Just me! theme only renders the home page. So, you should also include the disableKinds variable to specify which type of pages Hugo should not render. Unless you extend the theme in your site and override with your own templates, keep these values for disableKinds:disableKinds = [""taxonomy"", ""term"", ""RSS"", ""sitemap""]
If you don’t have a config.toml file in your site yet, take a look inside the exampleSite folder of this theme. You’ll find the config file config.toml there. The folder also contais the minimum files required to set up your site and have it up & running. Besides the config.toml you will find some contents in the content folder. Copy the _index.md file and the folders backgrounds and profiles to your site own content folder.Don’t forget to remove the first lines in config.toml. The variable themesDir only is needed for running the example site.Finally, run:hugo server -D
You’ get your server up & running locally.Configuring the Home Page The site’s home and only page can be configured by editing the content/_index.md file front-matter and content. The theme will display the title param highlighted in the middle and the page and the content itself as a kind of subtitle. Edit them to fit your needs.---
title: ""Hello World!""
date: 2022-01-12T19:29:03+01:00
draft: false
---

Yes! You reach my personal page. Welcome here. I'm **John doe**.
Find me at [Linkedin](#), read some of my thoughts in [my blog](#) or visit my photos at [Flickr](#).
Configuring Social Profiles Beyond the claim and the text, the homepage also includes some social icons linked to your social profiles. You can manage them like any other content managed in Hugo. Review the folder content\profiles in the exampleSite if you didn’t copy it during installation. It contains some common examples of markdown files to configure the social icons.Consider that:Each markdown file determine a social profile. For instance, the file twitter.md allows you to define your Twitter account.You can also create additional social icons by going to the root of your project and typing:hugo new profiles/new-profile.md
Where new-profile.md is the name of the markdown file for managing the new icon. This will execute the theme’s profiles archetype to create a new markdown file with the following frontmatter:# Default profile frontmatter:
# The title of your profile. Default value is generated from the filename
title: ""Profile for {{ replace .Name ""-"" "" "" | title }}""
# The date the post was created
date: {{ .Date }}
# The URL for accesing your profile
href: #
# The estandard draft variable in Hugo
draft: false
# The name for displaying the icon from Font Awesome icon set
profile: new-profile
# The customized image for being displayed for this profile
image: """"
There are two types of icons. Most common ones are those where an icon exists in the Font Awesome icon set. If you can find the icon for your new profile there, fill in the profile variable in the front-matter. For example, if you want to add your Github profile, an icon exists for Github. To use the Github icon everywhere, your HTML must include this code:<i class=""fab fa-github""></i>
To use it in your home page rendered with Just-me!, set profile: github in the front-matter, removing the fa- prefix.If you can’t find an icon in Font Awesome, you can provide your own image. Review the content\profiles\blog.md markdown file to see an example.Only the markdown files where front-matter param draft is set to false are shown in the homepage.Favicon To update favicon of the site, override the ones in static/icons/ folder with your own. You can also review the template partials\head\icons.html to undertand how they are included in your pages.Backgrounds Just like Social icons, you can manage your homepage backgrounds by editing the existing markdown files in content\backgrounds or creating new ones by executing:hugo new backgrounds/new-image.md
Review the examples to see the params included in the front-matter. The most important one are the imageURL and imagesize variables. The theme will use it to set the image-background style property for the background. On loading, the theme will build the page including only those backgrounds with the param draft set to false. Additionally, the scripts will process the size param to use only those images that match with the window current orientation (landscape or portrait). After any resize event, orientation is re-evaluated.The rest of the data in the front-matter params will be used to attribute image credits. You can acces them by clicking in the i icon on the right-bottom corner of the page.Roadmap Visit the To-do column in the basic kanban-style board open to manage this repo roadmap.Suggestions, bugs and whatever All feedback is welcome! Head over to the issue tracker.License This repo is licensed under the MIT license. Check the LICENSE file for details.Thanks to the authors of following resources, among others, used for developing this code:Font Awesome, a popular icon set that I use to display the social profilesCodex and Anenke Hugo themes, that I use as examples of building a themeUnsplash, the internet’s source of freely-usable images where I have taken the sample backgrounds fromAuthor José Luis Núñez https://joseluisnuñez.esif you find this repo useful, enjoy it and please consider buying me a coffee ☕️.Thanks! ❤️",NA
antedoro,9,2023-10-26,MIT,"Blog, Responsive",Arberia Theme For Hugo,Arberia Theme is a fully responsive theme for tech blogger with 4 single post layout and 2 list layout!,https://github.com/antedoro/arberia,https://arberiatheme.netlify.app/,"Arberia Theme for HugoArberia Theme is a theme for the Hugo for tech blogger with 4 single post layout and 2 list layout!The goal of this project is to add more features and customization to the base theme.Live demo See https://arberiatheme.netlify.app/Features Responsive layout3 Single post view:Post view with sidebarPost view without sidebarPost view with cover imageVideo post view2 List post view:List postsGrid postsLanding pageList Cathegory/Tag viewIcon colored submenuTable of ContentsSearch supported by Flexsearch.jsGoogle Analytics supportedDisqus comment systemSocial-Media Share buttons on postsMultilingual supportUses Hugo’s asset generator with pipelining, fingerprinting, bundling and minification by default (No webpack, nodejs and other dependencies are required to edit the theme.Installation/updating Before starting, please be sure that you have
installed Hugo and
created a new site. After that, you are ready to install Arberia.There are two mode:a) Simple mode: Download as Zip from Github Page and extract in your themes directory orb) Or you can add it as a git submodule via the following command:git init
cd themes
git submodule add https://github.com/antedoro/arberia.git arberia
Next,copy contents from themes/arberia/exampleSite on site root folder.
Copy folder from themes/arberia/archetypes on site root folder.Open config/_defaults/config.toml folder and ensure the theme option is set to arberia:theme = ""arberia""
Now you can start hugo server and view the site:hugo server -D
open browser and follow this link: http://localhost:1313NOTE
To update theme installed:    cd themes/arberia
    git pull
Configuration Config.toml example title = ""Arberia Theme""
baseURL = ""https://exampleSite.com/""
relativeURLs = ""True""
languageName = ""En""
languageCode = ""en-us""
theme = ""arberia""
Front Matter example ---
weight: 1
title: Insert title here
subtitle: Subtitle
date: 2020-10-15T20:58:53+02:00
lastmod: 2020-10-15T20:58:53+02:00
draft: false
type: standard-view

author: athor name
authorLink: """"
description: """"

tags:
  - tag1
  - tag2
categories:
  - cathegory1

hiddenFromHomePage: false
hiddenFromSearch: false

resources:
  - name: featured-image
    src: featured-image.webp

featured: true
sidebar: true
toc: true

license: """"
slug: slug here if necessary
---
For more information about all available standard front matter variables, please read
Hugo Front Matter.Contributing Have you found a bug or got an idea for a new feature? Feel free to use the
issue tracker to let me know. Or make directly a
pull request.License This theme is released under the MIT license.FAQs / How To’s Guide Read Wiki For More Details => Arberia-FAQsRelease Changelog Release ChangeLog has info about stuff added: ReleasesSpecial Thanks flexsearch.jsmark.jsAll Contributors and SupportersSee AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArchie",NA
Filipe Carneiro,9,2023-10-14,MIT,"Blog, Bootstrap, Landing, Minimal, Responsive",Hugo Bootstrap Theme,Theme for a blazing fast static website and/or blog using bootstrap 5.,https://github.com/filipecarneiro/hugo-bootstrap-theme,https://filipecarneiro.github.io/hugo-bootstrap-theme/,"Hugo Bootstrap Theme Theme for a blazing fast static website and/or blog using bootstrap 5.Demo https://filipecarneiro.github.io/hugo-bootstrap-theme/Features 🛡️ Security awareGet A+ scores on Mozilla Observatory out of the box. Easily change the default Security Headers to suit your needs.⚡Fast by defaultGet 100 scores on Google Lighthouse by default. Hugo Bootstrap Theme removes unused css, prefetches links, and lazy loads images.📈 SEO-readyUse sensible defaults for structured data, open graph, and Twitter cards. Or easily change the Search Engine Optimization settings to your liking.Framework Hugo Hugo is the world’s fastest static website engine. It’s written in Go (aka Golang).Hugo DocumentationGo template documentationBootstrap Get started with BootstrapBootstrap 5.2Install Bootstrap in your Node.js powered apps with the npm packageRequirements The tools used are cross-platform and should work on Windows, MacOS and Linux. You will need the following tools to be downloaded and installed:Hugo static site builder - IMPORTANT: make sure you pick the extended version, Hugo_extended_0.xx.x_…Node & NPM - We use this to maintain project dependenciesGit - This is optional, but highly recommended for version control and remote backups.Usage Test the theme locally on your computer Clone this repo:git clone https://github.com/filipecarneiro/hugo-bootstrap-theme.git
Test if the site is working:hugo server -D --disableFastRender --source exampleSite
This launches Hugo development server and you can see the example site by opening http://localhost:1313/hugo-bootstrap-theme/.You can also use Hugo as an installed NPM local package. In this case, you don’t need to install Hugo globally:npm install
npm run start
This will install Hugo in a bin subfolder and then run it, using the NPM package exec-bin.Install on an existing Hugo site Step 1: Install via NPM npm install @filipecarneiro/hugo-bootstrap-theme
Hugo bootstrap theme package will also add bootstrap and feather-icons to node modules.Step 2: Add to Config Then add the theme hugo-bootstrap-theme to your sites configuration file config.toml, config.yaml or config.json:theme = ""hugo-bootstrap-theme""
themesdir = ""node_modules/@filipecarneiro""
The new themes directory (themesdir) is needed to get the new theme from the node_modules folder.Step 3: Test your site hugo server -D --disableFastRender
Step 4: Check your parameters Check your copyright variable, your menus (the theme supports main, footer and social menus), etc.Have a look on exampleSite for inspiration :)Start from Scratch Step 1: Create a new Hugo site Follow Hugo Quick Start to create a new site, add a sample page and change basic settings.Since you’ve created an Git repository, let’s specify some Hugo files and folders to ignore.Create a .gitignore file on the root of your project with this content:public
node_modules
resources
.hugo_build.lock
Optionally, add a remote repository and push your code.Step 2: Install and configure Hugo Bootstrap Theme Update npm to the latest version:npm install -g npm
If you don’t have npm, download and install Node.js and npm.Then, create an npm package for your site:npm init -y
If wanted, you can customize your package information, editing the generated package.json file.Now, install Hugo Bootstrap Theme:npm install @filipecarneiro/hugo-bootstrap-theme --save-dev
Then add the theme hugo-bootstrap-theme to your site configuration file config.toml:theme = 'hugo-bootstrap-theme'
themesdir = 'node_modules/@filipecarneiro'
Change the existing theme value from ananke to hugo-bootstrap-theme and add a new line for themesdir, like above.Add some configuration, like copyright, description and your menus (the theme supports main, footer and social menus).Have a look on exampleSite for inspiration :)See AlsoPaigeAcademicAdritian Free Hugo ThemeBeautiful HugoBootstrap-BP",NA
Homecat,9,2023-08-27,MIT,"Blog, Gallery, Light, Multilingual, Personal, Responsive",hugo-theme-walden,"Walden is a simple-structured, easy-to-use Hugo theme for personal websites.",https://github.com/Homecat805/hugo-theme-walden,https://walden.genway.com.cn/,"Hugo Theme WaldenAfter reading Walden, a collection of essays by American writer Henry David Thoreau, I was deeply influenced by his love of nature and simple living. So, I wrote this concise and clear theme for my personal website and named it Walden.Features Walden is a simple-structured, easy-to-use Hugo theme for personal websites.Responsive designHeadline on homepageThumbnail for postPersonalized shortcodesMultilingual mode&mldr;Demo Two ways to see the demo：Visit demo site.View demo by clone repository from Github.git clone https://github.com/homecat805/hugo-theme-walden.git hugo-theme-walden
cd exampleSite
hugo server --themesDir ../..
Quick start The Hugo documentation describes in detail how to install on different operating systems, which will not be repeated here, the operating system related to this article is Ubuntu 22.04 LTS.Create the website root directory mysite and perform git initialization, then install the theme as a module to the mysite/themes, and copy all the files in the exampleSite in theme directory to the root directory of the website.mkdir mysite
cd mysite
git init
git branch -m main
mkdir themes
git submodule add git@github.com:Homecat805/hugo-theme-walden.git themes/hugo-theme-walden
cp -rf themes/hugo-theme-walden/exampleSite/* ./
In subsequent use, if you need to update the theme, use the following command.git submodule update --remote --merge
Configuration The configuration file for the site is config.toml。Configure baseURL: URL of user’s website on the internet.baseURL = ""Your domain""
Configure themetheme = ""hugo-theme-walden""
Preview Excuting the command, visit http://localhost:1313/ to preview website locally.hugo server
Create Site Executing the command, the system will store all the files generated for the static website in the mysite/public directory, which can be accessed after uploading to the Internet.hugo
License Walden is licensed under the MIT，Check the LICENSE file for details.See AlsoAcademicPaigeAnubisBilberry Hugo ThemeBootstrap Theme for Personal Blog and Documentations",NA
Ralf Geschke,9,2023-02-16,MIT,"Blog, Bootstrap, Dark, Light, Minimal, Responsive",Tikva,"Tikva is a minimalistic Hugo theme, based on Bootstrap 4 framework",https://github.com/geschke/hugo-tikva,NA,"Tikva Theme for HugoTikva is a minimalistic Hugo theme, based on Bootstrap v4 CSS framework.
It is a port of the Tikva theme which I developed a while ago for Grav CMS and WordPress, but there are also some features added from the (still unpublished) Azbalac Theme for WordPress.
Tikva integrates multiple Bootstrap styles from the Bootswatch project and adds some customized styles.
It’s also possible to edit some color options by config option.Features Responsive design, using the Bootstrap frameworkMore than 30 designs included, half of them newly created, the other half taken from the Bootswatch projectThree main layouts available: Content column without sidebar, sidebar on right and sidebar on left sideCustomizable font settings (size, font type and variant), support of Google Fonts includedSupport of Google Analytics (with the internal async template), Matomo and Yandex MetricaFlexible footer handling with multiple columnsSupport of subfooter, i.e. an area below the footer to add some content like “Powered by&mldr;” as seen in the screenshotsIntegration of custom JavaScript/CSS snippets via placeholder partials: just add a file “javascript_header.html” and/or “javascript_footer.html” into the “layouts/partials/” folder of your site, this will include the code in the head section and/or before closing body tag.Demo You can find a demo here.Screenshots Some examples of different designs:“header” style, header image and “darkly” theme:“fixed-top” style, with “flatly” theme and customized footer colors:“header” style, header image, title above header image, “signa” theme:“header” style, header image, title and subtitle as overlay, “materia” theme:Installation Inside the folder of your Hugo site run:    cd themes
    git clone https://github.com/geschke/hugo-tikva.git
As a second option you can use the submodule feature of Git:    git submodule add -f https://github.com/geschke/hugo-tikva themes/hugo-tikva
For more information read the official setup guide of Hugo.Configuration Check out exampleSite/config.toml for theme configuration options and the contents of exampleSite folder.I’ve tried to comment as much as possible in the configuration file, but the theme and documentation are far away from being complete. It is still work in progress and currently some features of Hugo aren’t supported.Sections (Sidebars, Footer, Subfooter) As you can see in the screenshots this theme supports three content sections which aren’t shown in the demo site, because in the demo only the default content is used. To enable the sections, create a folder sections into your content folder. Then create one or more content folders in the sections folder with their special names footer, sidebar and subfooter. In every of these folders you can place any page content you want, make the page bundle “headless” and enable the section (footer, subfooter, sidebars) in the site config file.For a complete example please have a look at the exampleSite folder. The directory structure is at follows:content/
        [...]
        sections/
                 footer/
                        column01.md
                        column02.md
                        column03.md
                        index.md
                        [...]
                 sidebar/
                         content01.md
                         content02.html
                         index.md
                 subfooter/
                          content.md
                          index.md
                [...]
To activate the content sections, enable them in your config file:[params.theme.footer]
    enabled = true # Show the footer part
    #numberColumns = 3 # Set number of columns available in footer of a page. Use the ""footer"" folder in the page structure to add content. If nothing is set, the default number is 3. Currently.i.e. since v0.2 not used, the number of columns is identical to the number of files in footer directory.
 
[...]

[params.theme.subfooter]
    enabled = true # Show the content below the footer
[...]


[params.sidebar]
    enabled = true # default false; set to true to enable sidebar
    style = 'right' # options: 'left', 'right'. Left means sidebar on the left side, right displays the sidebar on the right side
Menu The navbar displays the main menus by default. You can find more details about how to configure it here, as well as in the exampleSite.License Open sourced under the MIT license.Contributing If you find a bug or have an idea for a feature, feel free to use the issue tracker to let me know.Thanks to / Used third-party components The Bootstrap project, which is licensed under the MIT licenseThomas Park and the contributors of the Bootswatch projectFont AwesomeImage render hook from hugo-theme-bootstrap by Razon YangSee AlsoBootstrap-BPLightbiPaigeAcademicAnubis",NA
Sergio Barriel,8,2023-11-05,MIT,"Blog, Minimal",TopHat,A simple theme for Hugo just for blogging,https://github.com/sergiobarriel/tophat-theme,NA,"Top HatTop Hat it’s a simple Hugo theme just for blogging.Live view My own blog nohat.dev uses this themeFeatures It supports:syntax hightlightfeatured postsnavigationtagswords count and time readingHow to install You can use the theme in by two flavors, downloading files from repository or using git submoduleDownload files from repository Download .zip file from this link and extract the content to themes/tophat folderThen open your hugo.toml file and add the following tag:theme = ""tophat""Use git submodule Run these commands to create a Hugo site with the tophat themehugo new site my-blog
cd my-blog
git init
git submodule add https://github.com/sergiobarriel/tophat-theme.git themes/tophat
echo ""theme = 'tophat'"" >> hugo.toml
hugo server
If you want to update the theme with the latest changes just run the commandgit submodule update --remoteHow to configure the theme Options You should configure minimal options on your hugo.toml file:theme = ""TopHat""
title = ""Your blog name""
baseURL = ""https://example.com/""
languageCode = ""en-us""
paginate = 5
The default pagination is 10 items, but you can set a different number.Parameters [params]
    
  subtitle = ""Your blog subtitle""
  description = ""Your blog description""
  author = ""Sergio Barriel""

  main = ""post""
  featured = true
  
  # You can customize the visibility of some elements like date, reading time, words counter and tags inside article by setting true or false
  show_date_on_article = true
  show_reading_time_on_article = true
  show_words_count_on_article = true
  show_tags_on_article = true  
Menus [menu]

  [[menu.main]]
    identifier = ""about""
    name = ""About""
    url = ""/pages/about/""

  [[menu.main]]
    identifier = ""contact""
    name = ""Contact""
    url = ""/pages/contact/""    
  
  [[menu.social]]
    identifier = ""twitter""
    name = ""Twitter""
    url = ""https://twitter.com/sergiobarriel"" 

  [[menu.social]]
    identifier = ""github""
    name = ""Github""
    url = ""https://github.com/sergiobarriel""
Google Analytics If you want to track telemetry from Google Analytics just add the googleAnalytics tag on your hugo.toml filegoogleAnalytics = ""G-XXXXXXXXXX""Syntax highlight You can customize the highlight configuration by overriding options on hugo.toml file according to these params[markup]
  [markup.highlight]
    anchorLineNos = false
    codeFences = true
    guessSyntax = false
    hl_Lines = ''
    hl_inline = false
    lineAnchors = ''
    lineNoStart = 1
    lineNos = false
    lineNumbersInTable = true
    noClasses = true
    noHl = false
    style = 'dracula'
    tabWidth = 4
See the Style Gallery for a full overview of available styles and how they may appear.Customize styles There are some scss files inside assets/scss folder, so you can customize the styles as you wish and then transpile by using sass commandsass styles.scss ../css/styles.cssSponsor If you like the project, you can consider making a donation at ko-fi.comContributors / Collaborators These individuals have contributed to the repository through suggestions, error corrections, or by opening issues. Thanks 😊foldfreechristian-cellSupport You can contact me via Twitter @sergiobarriel, or if you have an issue, you can open one 🙂See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Sebastian Pech,8,2023-07-09,MIT,"Dark, Light, Minimal, Multilingual, Responsive",Flex-BP-CV,Flexbox based Hugo CV theme which provides out of the box best practices.,https://github.com/spech66/flex-bp-hugo-cv,NA,"Flex-BP hugo CVFlexbox based Hugo CV theme which provides out of the box best practices like performance and SEO readiness. Using hugo-best-practices, Front-End Checklist and the Front-End Performance Checklist.Other themes by Sebastian Pech: Bootstrap-BP, Materialize-BP,
Bootstrap-BP hugo startpage.Table of contents Flex-BP hugo CVTable of contentsFeaturesInstall the themeUpdate the themeRun example siteConfiguration and theme specific settingsScreenshots of cofigurationsGoogle AnalyticsSchema.org supportSocial IconsCustom CSS/JSMiscFeatures Color themesPrint css mediaSEO best practices supported (Schema.org, open graph, meta information, &mldr;)Automatically resizing of imagesOne minified file per ressource only (js, css)CDN font support (Google Fonts, &mldr;)Settings for easy customization of layouts and featuresIcons for Social MediaCustom css/jsMultilingual and i18n support&mldr;Install the theme With Git installed, run the following commands inside the Hugo site folder. If Hugo has not yet been installed, read the setup guide here.mkdir themes
cd themes
git clone https://github.com/spech66/flex-bp-hugo-cv.git
You can get a zip of the latest version of the theme from the home page and extract it to the themes folder.Update the theme Go to the themes folder as in the installation and run the following command.git pull
Run example site Go to the exampleSite folder from the theme themes/flex-bp-hugo-cv/exampleSite and run the following command.hugo server --themesDir ../.. --minify
Configuration and theme specific settings None yet. See config.toml in the exampleSite folder for best settings.Best run with --minify flag for hugo.Screenshots of cofigurations Google Analytics This theme uses the internal asynchronous template for Google Analytics tracking. You only have to provide your tracking id in your configuration file.googleAnalytics = ""UA-123-45""
Schema.org support Provide one author to enable the Schema.org support.[Author]  
  name = ""Sebastian Pech""
Social Icons Icons for Social Media. Add the block to the config.# Sets Social Media icons to appear and link to your account. Value should be your
# username unless otherwise noted.
# Code from https://themes.gohugo.io/future-imperfect/ theme
[social]
  # Coding Communities
  github           = """"
  gitlab           = """"
  stackoverflow    = """" # User Number
  bitbucket        = """"
  jsfiddle         = """"
  codepen          = """"
  # Visual Art Communities
  deviantart       = """"
  flickr           = """"
  behance          = """"
  dribbble         = """"
  # Publishing Communities
  wordpress        = """"
  medium           = """"
  # Professional/Business Oriented Communities
  linkedin         = """"
  linkedin_company = """"
  foursquare       = """"
  xing             = """"
  slideshare       = """"
  # Social Networks
  facebook         = """"
  googleplus       = """"
  reddit           = """"
  quora            = """"
  youtube          = """"
  vimeo            = """"
  whatsapp         = """" # WhatsApp Number
  instagram        = """"
  tumblr           = """"
  twitter          = """"
  skype            = """"
  snapchat         = """"
  pinterest        = """"
  telegram         = """"
  discord          = """" # invite link
  # Email
  email            = """"
Custom CSS/JS The theme provides two ways for custom css/js. The first way is writing your styles to /assets/css/custom.css and scripts to /assets/js/custom.js. This will merge and minify the styles/scripts with the theme specific files resulting in only one file for the whole website.[params]
  js=[""/js/test_site.js""]
  jscdn=[""https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js""]
  css=[""/css/test_site.css""]
  csscdn=[""https://fonts.googleapis.com/css?family=Roboto&display=swap""]
---
js:
    - /js/test.js
jscdn:
    - https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js
css:
    - /css/test.css
csscdn:
    - https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900
---
Misc Dog Photo - Image by Nikki Luijpers from Pixabay.CSS Tricks - A Complete Guide to Dark Mode on the WebSee AlsoAcademicAnubisBootstrap-BPColor Your WorldHugoplate",NA
Rafed Muhammad Yasir,8,2023-06-23,GPL,"Blog, Bootstrap, Responsive",BlogRa,The Ultimate Tech Blogging Theme,https://github.com/rafed/BlogRa,NA,"BlogRaThe Ultimate Tech Blogging ThemeDemo You can see live demo of this theme for my blog at rafed.github.io/devra.Features Site features Google search barGoogle Analytics (v4)Share bar below articles for sharing across social mediaSocial links place holder for linking with different social mediaComments with DisqusCustomizable navbarMobile responsive- works great across desktops, tablets and mobilesSEO friendly (Opengraph, Twitter cards)Admin panel to see site summary (number of posts, tags, sections)Blogging features Attractive landing page with article/tag links everywhereAdd featured images to postsMaking sections for related articles (for example tutorials on a topic)Add code snippetsAdd math equationsAdd diagrams with mermaidAdd tags to articles and list articles by tagsInstallation & Update You will need to download Hugo extended versions to build your site with this theme. Search and download it from the releases page.$ # install
$ mkdir themes
$ cd themes
$ git submodule add https://github.com/rafed/BlogRa.git BlogRa

$ # update
$ git submodule update --remote --merge
If you want to know more information, see Hugo doc.config.toml example baseURL = ""https://example.com/""
canonifyURLs=true
pluralizeListTitles = false
summaryLength   = 25

theme           = ""BlogRa""
languageCode    = ""en-us""
title           = ""BlogRa Theme""

disqusShortname = """"

[params]
    description     = ""The Ultimate Tech Blogging Theme""
    contactEmail    = ""your-email@domain.com""
    footer          = """"
    googleSearch    = ""google-cse-key""
    googleAnalytics = ""G-A1B2C3D4E5"" # v4
    adsense         = ""adsense-key""
    math            = false   # best to enable this in the front matter of a page
    mermaid         = false   # best to enable this in the front matter of a page

    # Social Media Params
    facebook   = ""https://www.facebook.com/DevHacker-2351204168278028""
    twitter    = """"
    youtube    = ""https://www.youtube.com/channel/UC6uDg4IlPbLh2xNKrqnBczw""
    instagram  = """"
    github     = ""https://github.com/rafed""
    pinterest  = """"
    linkedin   = ""https://www.linkedin.com/in/rafed-m-yasir/""


# Configure the site menu here
[menu]
    [[menu.main]]
        name = ""Home""
        url = ""/""
        weight = 1

    [[menu.main]]
        identifier = ""blog""
        name = ""Blog""
        weight = 2
            [[menu.main]]
                parent = ""blog""
                name = ""Posts""
                url = ""/posts/""
                weight = 1
            [[menu.main]]
                parent = ""blog""
                name = ""Sections""
                url = ""/sections/""
                weight = 2
            [[menu.main]]
                parent = ""blog""
                name = ""divider""
                weight = 3
            [[menu.main]]
                parent = ""blog""
                name = ""Tags""
                url = ""/tags/""
                weight = 4
    [[menu.main]]
        name = ""About""
        url = ""/about/""
        weight = 3
    [[menu.main]]
        name = ""Contact""
        url = ""/contact/""
        weight = 4

# Don't touch this
[markup.goldmark.renderer]
    unsafe = true
Frontmatter example ---
title: {{ replace .Name ""-"" "" "" | title }}
date: {{ now.Format ""2006-01-2"" }}
tags: [tag1, tag2]
image: ""blog-pic.png""
description: ""A smalll optional description""
math: true              # to enable showing equations (katex)
mermaid: true           # to add diagrams using mermaid
---
Contributing If you find problems in the theme submit an issue. Also, contributions/pull requests are welcome.LICENSE GPL.See AlsoBeautiful HugoBootstrap Theme for Personal Blog and DocumentationsBootstrap-BPHB Starter Theme TemplateHugo Bootstrap Theme",NA
Aziz,8,2023-04-14,MIT,Blog,Red Rose,Hugo Blog Portofolio Dark theme,https://github.com/httpsecure/hugo-theme-red-rose,https://red-rose.netlify.app/,"Red Rose This theme needs a lot of improvement visit here
for new updateDemo Credit :Some text on demo site from wikipediaFlowers images from unsplashDemo SiteFeatures Fully responsiveAbout, Tags, and List pagesEasy to customizeLocal fontThis theme using bootstrap 5.2Using local BS for developmentFor production You can use CDNand add this inside head.html<!-- CSS only -->
<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT"" crossorigin=""anonymous"">
Code highlighting By default hugo using chroma to color your code syntax. All you need to do is to wrap you code like this:
``` css
 your code here
```
For style prefered you can try this :https://swapoff.org/chroma/playground/For this theme using solarized-dark256Favicon You can use favicon generator & put the favicon file inside static folderInstallation You can download the theme manually, extract & copy the examplesite go to themes directory
orRefer to the Hugo docs for more information.Note If you manualy install hugo, you must install hugo extended versionIf you using debian/ubuntu & install hugo from repo it will include libsass1License This theme released under the MIT License.See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
Debashish Chakrabarty,7,2023-10-06,GPL-3.0,"Company, Landing, Light, Minimal",Agnes,"Agnes is a landing page Hugo theme ported from the free HTML template designed by Cruip, a marketplace of Tailwind CSS templates. The design is lovely and features an intro screenshot preview, a product/service list, and a three-tier pricing table.",https://github.com/dchucks/agnes-hugo-theme,https://agnes-hugo-sample-site.netlify.app/,"Agnes

Agnes is a landing page Hugo theme ported from the free HTML template designed by Cruip, a marketplace of Tailwind CSS templates. The design is lovely and features an intro screenshot preview, a product/service list, and a three-tier pricing table.Check out the sample site.Getting startedWe are assuming that you have already installed Hugo on your computer follow the Quick start guide if not.Create your Hugo website hugo new site my_website
cd my_website
Adding theme to your website There are two ways to add the theme to your Hugo website.Method 1: Without involving Git (Easier) Download the Agnes theme as a Zip file from https://github.com/dchucks/agnes-hugo-theme/archive/refs/heads/main.zipCreate a sub-folder “Agnes” under the “Themes” folder.cd themes
mkdir Agnes
Unzip the zip file and copy all the files and folders (from the folder where the README.md file resides) to the Agnes folder.Now test if the theme is working, as follows, and your site should be running at http://localhost:1313/cd Agnes/exampleSite/*
hugo server --themesDir ../..
Method 2: With Git (needs Git knowledge) Clone the theme repositorygit clone https://github.com/dchucks/agnes-hugo-theme.git Agnes
Copy the example sitecp -r Agnes/* my_website/themes
Navigate to your website, and initialize an empty Git repository in the directory.cd my_website
git init
Add Agnes theme as a submodule and update the site configuration file for the current theme.git submodule add -f https://github.com/dchucks/agnes-hugo-theme.git ./themes/Agnes
echo ""theme = 'Agnes'"" >> hugo.toml
Start the dev server, your site should be running at http://localhost:1313/hugo server
Example config.toml An example site Config file can be found under the theme’s exampleSite folder. Just update the content in the file relevent to your website and you should be done.Contributing If you want to contribute to Agnes to add a feature or improve the code, please open an issue or make a pull request.Show your support Please give a :star: if this project helped you! Buy me a Coffee ;)License GPL-3.0 © Debashish ChakrabartySee AlsoAcademicPikoAdritian Free Hugo ThemeBeautiful HugoBootstrap-BP-Startpage",NA
kc0bfv,7,2022-11-11,MIT,"Blog, Bootstrap, Dark, Personal, Responsive",Ticky Tacky Dark,"Ticky Tacky Dark's front page is a set of little boxes, all the same, containing pictures that represent your site's pages.",https://github.com/kc0bfv/ticky_tacky_dark,NA,"Ticky Tacky Dark - Theme for HugoThis is a multi-page theme, where the list page displays a set of image buttons linking to your sub-pages. It passes the web accessibility evaluation tool tests.Preview at https://kc0bfv.github.io/ticky_tacky_darkSites based on this theme:https://pocumtuck.org/https://notmet.netConfiguration The exampleSite demonstrates the features unique to this theme. In your site config params section the following extra parameters are supported:favicon - the favicon URL, relative to your site (placed in header meta tag)description - the description for the header meta tagimages - a list of relative image URLs for the header of each pageheadername - text to place over the header imagesmsvalidate - MS validation taggooglesiteverification - Google site verification tagAdditionally, Author.name and Author.email in the site config will display as the author and webmaster email.Pages you add have custom front matter options:buttonimage - the relative image URL for the page’s button on the front pageimages - a list of relative image URLs for the left sidebar on the pageimagealt - the alternate text for the page’s left sidebar imageweight - an integer that specifies page ordering for the front page. If you want the buttons and navbar items to show pages in a specific order, specify the ordering via weight. Ordering goes from lowest weight to highest, left to right, top to bottom.author.name, author.email - overrides the site author name and emailPage Construction Navigation from the main page happens via a button image. These images are, optimally, 300x300 pixels. Specify these button image URLs in a page’s front matter with the buttonimage option.On sub-pages, images can appear on the left side. Sizing can vary there, but at full size images come out as about 277.5 pixels, and a size of about 300x500 pixels works nicely. You can specify multiple images for a sub-page, and they’ll be randomly selected on load. Specify them as a list of image URLs on the page front matter, with option images.Header images are, optimally, 950x200 pixels. Specify these in the site configuration as a list of image URLs with option images. One will be randomly selected on page load.Custom Shortcode Dropdown Text To add an HTML details element that, when clicked, drops-down a section of text, use shortcode dropdown.Example{{< dropdown summary=""Click here to see the text that will drop down."" >}}
  This is the text that drops down when you click the link.
{{< /dropdown >}}
Usage Put this theme in your site’s themes folder, then modify the site config to specify the theme ticky_tacky_tark, or use the -t ticky_tacky_dark command line switch.Licenses The Ubuntu Titling font is used, licensed by the GNU Lesser GPL, license included.See AlsoBootstrap Theme for Personal Blog and DocumentationsHB Starter Theme TemplateLightbiPaigeCalligraphy",NA
Giuseppe Masino (qub1750ul),7,2022-07-30,Apache-2.0,"Light, Responsive",SimpleIntro,Simple Single-Page Theme For Hugo,https://github.com/qub1750ul/hugo-simpleIntro,NA,See AlsoBlack & LightCalligraphyEdHugo ReFreshPuppet,NA
NA,5,2023-09-16,MIT,"Minimal, Responsive",HB Start Theme,"Building your own fast, responsive, modern and minimalist start page.",https://github.com/hbstack/theme-start,https://start.hbstack.dev/,"HB Start Theme



Building your own fast, responsive, modern and minimalist start page.Inspired by Google Chrome new tab, and port it for all platforms and browers.Docs PreviewSee AlsoAcademicAce documentationAdritian Free Hugo ThemeAnatoleAnubis","HB Framework, Razon Yang"
Aziz,5,2023-04-14,MIT,"Blog, Minimal",Kembang,Minimalist Blogging Theme,https://github.com/httpsecure/kembang,https://kembang-theme.netlify.app/,"kembang This theme needs a lot of improvement why this theme name kembang ? kembang = flowers.Demo Credit :Some text on demo site from wikipediaFlowers images from unsplashSVG icon bootstrap.Demo SiteFeatures Fully responsiveBootstrap CSS onlyAbout, Tags, and List pagesEasy to customizeLighthouse score 100%Local font jostMozilla Observatory A+ click this linkThis theme using bootstrap 5.2Using BS for local developmentcustom_css = [ ""/css/main.css"", ""/css/normalize.css"", ""/css/bootstrap.css""]
For production You can use CDN and delete this line parameters""/css/bootstrap.css""
and add this inside head.html<!-- CSS only -->
<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT"" crossorigin=""anonymous"">
or you can use hugo-mod-boostrapCode highlighting By default hugo using chroma to color your code syntax. All you need to do is to wrap you code like this:
``` css
 your code here
```
For style prefered you can try this :https://swapoff.org/chroma/playground/For this theme using solarized-dark256Favicon You can use favicon generator & put the favicon file inside static folderInstallation You can download the theme manually, extract & copy the examplesite go to themes directory
orNavigate to the root directory of your Hugo site and clone this repository.git clone https://github.com/httpsecure/kembang.git themes/kembang
Refer to the Hugo docs for more information.Note If you manualy install hugo, you must install hugo extended versionIf you using debian/ubuntu & install hugo from repo it will include libsass1Discussions DiscussionsLicense This theme released under the MIT License same as bootstrap.See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Joseph mcCarthy,5,2022-09-16,MIT,"Blog, Company, Personal",Bootstrap Freelancer,Theme based on the Bootstrap Freelancer Template,https://github.com/joseph-mccarthy/hugo-bootstrap-freelancer-template,https://joseph-mccarthy.github.io/,"Bootstrap Freelancer Hugo ThemeTable of Contents DescriptionHow To UseReferencesLicenseAuthor InfoDescription This repository contains a Hugo theme that is based on the Bootstrap Freelancer template. I created this Hugo theme as I have always liked the Freelancer Bootstrap template, and my preference for Hugo for static site generation made it a no brainer to me. As the origional Freelancer theme was a single page template, I have used some creative licence when it comes to the post listing pages, and content pages. If you have any suggestions on how it can be made better, please commit. You can see an example site running it, like I said my own site is using.Technologies HugoBootstrapBootstrap FormsBack To The TopHow To Use You can use this theme like you would with any Hugo theme. The generally accepted way of using themes is to install them as a git sub module so you’re able to keep them upto date with the theme repository.# inside your hugo directory clone this repository as a sub module
git submodule add https://github.com/joseph-mccarthy/hugo-bootstrap-freelancer-template themes/freelancer
# update your config to use new themem
echo theme = \""freelancer\"" >> config.toml
This theme also comes with it’s own default content type, and should be used also along with the idea of bundles. Here is an example command on how to use the default content typehugo new --kind default posts/my-post
This content type has some font matter that you’ll be able to make use of as it’s using bundles. There is a field named “hero” which would be the path to the banner image of the post, this image is also used in the post listing pages. The “sidebar” field states if to show the post as full width or with the meta sidebar which will show related posts and last 5 publised posts.There are also some extra paramters that should be added to your config.toml in order to use the theme to it’s full.[params]
  tagLine = ""Graphic Artist - Web Designer - Illustrator""
  homePosts = 3
  homeProjects = 3

  aboutLeft = ""Freelancer is a free bootstrap theme created by Start Bootstrap. The download includes the complete source files including HTML, CSS, and JavaScript as well as optional SASS stylesheets for easy customization.""
  aboutRight = ""You can create your own custom avatar for the masthead, change the icon in the dividers, and add your email address to the contact form to make it fully functional!""

[params.location]
  lineOne = ""2215 John Daniel Drive""
  lineTwo = ""Clark, MO 65243"" 

[params.sbform]
      token = """"

[params.homebutton]
  text = ""Free Donwload""
  link = ""https://startbootstrap.com/theme/freelancer/"" 
  icon = ""fa-download""

[related]
  includeNewer = true
  threshold = 80
  toLower = false
[[related.indices]]
  name = 'tags'
  weight = 100
[[related.indices]]
  name = 'date'
  weight = 10
There are also some assumptions made on the content structure for this theme. I have created this with the idea of two areas posts and projects which will drive the menu, home page and content listing areas.References HugoBootstrapBootstrap FreelancerBootstrap FormsBack To The TopLicense Copyright (c) 2022 Joseph McCarthyPermission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the “Software”), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
OR OTHER DEALINGS IN THE SOFTWARE.Back To The TopAuthor Info GitHubWebsiteBack To The TopSee AlsoAcademicLightbiPikoTailBlissUp Business Theme",NA
Adam Whitlock,4,2022-12-23,MIT,"Blog, Light, Minimal",Huey,Huey is a minimal blog theme which uses the Bulma CSS framework,https://github.com/alloydwhitlock/huey,NA,"HueyA minimal Hugo blog template using Bulma CSSQuestions Why is it Named Huey? The name “Huey” was taken from the musician “Baby Huey”. The record was on the mantle when the theme author was trying to come up with a name. The album cover for “The Baby Huey Story: The Living Legend” is used as the default favicon.ico for this theme.Why Use Bulma for CSS? Bulma is a great framework for starting off sites. It’s pure CSS, meaning you don’t need to bring in Javascript (unless you want to). This was also meant as an exercise for the author to learn Bulma CSS and how Sass works.Why Doesn’t Huey use “X” Bulma feature? This is meant to be “minimal”. Only add features needed for a slim site and when necessary. If you want a full-featured Bulma theme meant to provide everything Bulma offers, check out hugo-bulma.How Can I Contribute? File a pull request in the Huey theme repository. Preferably create a Github Issue which addresses a problem that needs to be solved, then submit a PR fixing it.How Can I Get New Features? If you need or want new functionality, please create a new issue on Github in the Huey project.Installation Prerequisites A Hugo site has been initialized or cloned. Example: hugo new site <site name>Git installed in development environmentGithub access availableMethod 1: Clone in Themes Directory The simplest method of installing Huey is cloning the Huey directly into the site themes/huey directory. Below is a command that can be copied & pasted into a terminal to clone the Huey theme.git clone https://github.com/alloydwhitlock/huey/ --depth=1If you use Huey cloned directly, you will need to run git pull within themes/huey for updating to the most recent version.Method 2: Use Git Submodule Git Submodule allows you to have one git repository located within another. This lets you separate what your working site directory will be from the Huey theme, as an example. It’s a great choice when you have an external component you don’t fully control, since it locks the repository reference to the specific commit you used.git submodule add https://github.com/alloydwhitlock/huey/ themes/huey --depth=1If you use Huey as a submodule, you will need to run git submodule update --remote --merge when updating the most more recent version.Theme Configuration Huey comes with a number of configuration options. Read through this section for more details, along with a boilerplate configuration that can be used to get started.Font Awesome Font Awesome icons are included as part of the Bulma CSS framework, though their use is optional. Using the icons in Huey is also optional. If you want to have icons next to page titles or social media icons in your page footer it’s necessary to enable Font Awesome. To use Font Awesome, you will first need to register with Font Awesome and get a token. Once you have a token, add it to the [Params] table as fontawesomeToken. Example configuration is provided below (with additional keys/values removed):[params]
    fontawesomeToken = ""018de52a07""
Subtitle This theme doesn’t use a subtitle. To add a subtitle, edit layouts/partials/header.html to include a {{ .Params.Subtitle }} along with adding subtitle to your config.toml [params] table.Social Media Icons and Links If you want to use social media icons in your page footer, you can add them through the [[menu.social]] table array. The example below shows a full configuration, where three social media locations are set. Any link and icon can be used, though if you don’t use Font Awesome it will show the name specified instead of an icon.[[ menu.social]]
  identifier = 'linkedin'
  name = 'LinkedIn'
  pre = ""<i class='fab fa-linkedin fa-lg'></i>""
  url = ""https://linkedin.com/in/yourlinkedinprofile""
  weight = 10

[[ menu.social]]
  identifier = 'github'
  name = 'Github'
  pre = ""<i class='fab fa-github fa-lg'></i>""
  url = ""https://github.com/yourgithubname""
  weight = 20

[[ menu.social]]
  identifier = 'twitter'
  name = 'Twitter'
  pre = ""<i class='fab fa-twitter fa-lg'></i>""
  url = ""https://twitter.com/yourtwittername""
  weight = 30
The pre key defines the Font Awesome icon code you would use. If you do a search on Font Awesome, you should be able to paste the icon code as the value. You can also use this to specify a location for an icon, if you don’t want to use Font Awesome.The weight key is used to determine the location of icons. Adjusting the weight from low-to-high will order left-to-right.Configuration Example This is a configuration boilerplate you can use with minimal changes.baseURL = ""https://www.yourbaseurl.com""
languageCode = ""en-us""
title = ""Put a site title here""
theme = ""huey""
canonifyurls = true

[params]
  # General site metadata, used in header and other places
  author = ""Author's name goes here""
  dateFormat = ""January 2, 2006""
  description = ""This is a description of your site. This is also used in your site header metadata.""
  keywords = """"
  email = ""adam@adamwhitlock.com""

  # Use your Font Awesome token here. Example token is fake, so please get your own.
  fontawesomeToken = ""018de52a07""

  # Use content from _index.md on homepage
  # useIndexContent = true # default is false

  # Navigation, use Bulma options here
  # navbarStyle = ""is-transparent"" # Default is ""is-transparent""
  # navbarTitleStyle = ""has-text-black"" # Default is ""has-text-black""

  # # Override Bulma schemes with values
  # schemeMain = """" # Change background color, default is white
  # link = ""#000"" # Bulma default is blue, though theme is black
  # linkHover = ""#888"" # Bulma default is grey-darker, though theme is #888
  # footerBackgroundColor = ""false"" # Bulma default is #fafafa. You can use ""false"" or #hex
  # navbarItemHoverColor = ""#444"" # Bulma default is blue, though theme is #444
  # navbarItemColor = ""#888"" # Bulma default is grey-dark, though theme is #888

  # Set static directory locations and favicon
  favicon = ""favicon.ico""
  staticDir = ['static']


[menu]

# Top Navigation
[[menu.nav]]
  identifier = 'home'
  name = 'Home'
  title = 'Home'
  url = '/'
  weight = 10

[[menu.nav]]
  identifier = 'archive'
  name = 'Archive'
  title = ""Archive""
  url = '/archive/'
  weight = 20

# Contacts

[[ menu.social]]
  identifier = 'linkedin'
  name = 'LinkedIn'
  pre = ""<i class='fab fa-linkedin fa-lg'></i>""
  url = ""https://linkedin.com/in/yourlinkedinprofile""
  weight = 10

[[ menu.social]]
  identifier = 'github'
  name = 'Github'
  pre = ""<i class='fab fa-github fa-lg'></i>""
  url = ""https://github.com/yourgithubname""
  weight = 20

[[ menu.social]]
  identifier = 'twitter'
  name = 'Twitter'
  pre = ""<i class='fab fa-twitter fa-lg'></i>""
  url = ""https://twitter.com/yourtwittername""
  weight = 30

[outputs]
  home = ['HTML', 'RSS']
  pages = ['HTML']
Page Configuration Layout for Individual Pages Huey pages require that you specify a type: pages and layout: page for any page that’s standalone (Examples: Contact, About Me). This will remove the “date” field from those pages, along with letting you specify an optional Font Awesome icon next to the page title. Unlike how Font Awesome icons are used in the configuration, you only need to put the short Font Awesome codes on your page front matter (the metadata at the top of a post).SSpecifying the menu:nav and weight: weight-value, as seen in the example, will ensure additional pages you create appear in navigation. If declared properly, the active page should be darker in the menu.Example Layout for Individual Page---
title: ""About""
date: 2021-12-22T22:31:55-06:00
draft: false
url: /about/
type: pages
layout: page
fa_icon: ""fas fa-user""
menu: nav
weight: 20

---

Content text goes here...
To add an icon next to a page title, use fa_icon: key where the value is the Font Awesome icon code. Example: fa_icon: fas fa-userLayout for Blog Posts Post Front Matter Blog posts only need the type blog specified in a page front matter, which allows new posts to appear on the main home page. If you don’t want a post to appear on the home page, it’s possible to hide them by ignoring the type or setting it to another (Example: post).Use the lastmod key in your page front matter to specify the last modified date. This is useful if you make changes to a post and want to highlight something new is present.archive is used throughout Huey as the blog post location, but you can specify your own. Rename layouts/pages/archive.html file accordingly.Example Layout for Blog Posts:---
title: ""Example Post""
date: 2021-12-30
# lastmod: 2021-12-29
draft: false
url: /archive/examplepost
type: blog
description: ""Every post should have a great description!""
---

Content text goes here...
There is not an option for Font Awesome codes with blog posts. If you need/want this functionality please create a new issue on Github in the Huey project.Header Images & Content When using Huey as a theme, it’s suggested to use page bundles. These allow for a content author to include all relevant content within a folder. Pages can reference bundle content directly. Below is an example of a page bundle layout:hugo-site
├── content/
│ ├── posts/
│ │ ├── new_post/
│ │ │ ├── header.png
│ │ │ ├── image1.png
│ │ │ └── index.md
│ │ ├── _index.md
...
Post bundles require an index.md for the bundle folder, which will contain the content of the post. See Page Bundles on Hugo for more information.Header Image (Front Page & Posts Page)Huey will use any picture named “header.jpg” or “header.png” that’s included within a page bundle. This picture is used on the front home page and the posts (blog posts) page. If you do not include an image meeting the naming convention, then no image will be used for the header.Images & Other ContentYou can reference any content in the page bundle, such as additional images, in your markdown files using a relative path. Example:![Image alt text](image1.png)
ShortcodesCentered TextExample:{{% center %}}Text to be centered{{% /center %}}Centered Image{{% center-image
src=“x400_board.png”
alt=“This is sample image” %}}Additional Scripts Huey supports loading scripts after the footer loads (Example: Javascript for site analytics). Adding new code directly to Huey’s existing huey/layouts/partials/scripts.html is the fastest method to get started. However, to maintain core site code separate from your theme create a layouts/partials/scripts.html file in the base site directory. When generating a new site, Hugo will load the base folder scripts.html accoording to the order of precedence.Example Layout Showing New scripts.html:hugo-site
├── layouts/
├── partials/
│└── scripts.html
... more files ...
├── themes/
│└── huey/
...
Site Local Assets and Online Dependencies Bulma CSS is stored as part of the project theme, in assets/css/bulma. This ensures you can move your site around without needing network access. If a newer version of Bulma is necessary, either replace the Bulma CSS directory completely or use a public Bulma CSS location. The location is specified in layouts/partials/head.html.Font Awesome is not stored within the theme, so network access to the Font Awesome CDN is required. If you need local icons, store them in the static folder (Example: static/icons) and reference their location directly. This may require theme modification depending on where you are adding or needing icons.Theme Customization If you want to change the colors that Huey uses, the best location is assets/css/base/base.scss. Huey uses Bulma, which itself uses Sass for generating CSS. This file will apply changes to Bulma CSS and generate what is ultimately created in your public folder. However, there are a number of Bulma variables already configurable in the [Params] table, which means you don’t need to edit this file directly. Only edit it directly if you need to make changes.If you want to add new CSS definitions that don’t exist in Bulma, add them to assets/css/extra/extra.css or copy CSS files to the assets/css/extra folder. Huey will read any CSS files in that folder.TODO This is the author’s current TODO list for Huey. It won’t impact your use of Huey. If you run into an issue and it’s in the list, be assured it’s being looked into.Children pages will show active for parent in menuSee AlsoCalligraphyEdHugoTeXMonday themeTatBanTheme2.0",NA
Cathelijne Hornstra,3,2023-09-26,MIT,"Light, Minimal, Responsive",Huguette,A very minimal theme for Hugo with options for classless.css and NetlifyCMS,https://github.com/cathelijne/hugo-theme-huguette,https://huguette.netlify.app/,"Huguette - a theme for HugoTLDR; git submodule add https://github.com/cathelijne/hugo-theme-huguette.git themes/huguette
echo ""theme = 'huguette'"" >> config.toml
See it in action Here’s an example site to see what Huguette looks like.About this theme I am a cloud engineer by day, and a hobbyist website builder whenever I have the time. I like to try lots of different technologies, just for the fun of it.
Often, I miss a very simple boilerplate theme that just demonstrates what a CMS or site builder can do. Either you have to take your pick from the many (and often excellent!) beautiful themes with lots of bells and whistles that obscure a bit how everything works, or you have to start from scratch.When I ran into Hugo, I decided to actually make such a simple theme. Without bells an whistles, no javascript, no npm or yarn needed to make changes to the theme. Just plain HTML. And to make it look better, I included classless.css. But using that is entirely optional (it does look good though!). I included a few, just enough, Hugo partials in the theme to give you an idea of what they can do, nothing more. I really had to sit on my hands there :)One-click install with NetlifyCMS This repository holds the theme only so you can install it to any existing site. But if you’re just starting with Hugo and want a one-click site install with the theme, the css and Netlify CMS enabled and hosted on Netlify, you can use the button below.
Jou can also have a look at the the example site repository or the example site itself (you will find the one click install there too).If you want just the theme, read on.Theme Installation Install the theme like any other theme:git submodule add https://github.com/cathelijne/hugo-theme-huguette.git themes/huguette
echo ""theme = 'huguette'"" >> config.toml
Enable the included Classless CSS: echo '[params]
  css = true' >> config.toml
And copy the static/css folder included in this theme to the static folder in the root of your site:mkdir static
cp -r themes/huguette/static/css static
Enable Netlify CMS To enable Netlify CMS, enable the inclusion of the CMS JavaScript by adding netlifycms = true to the params section of your config.toml so it looks like this:[params]
  css = true
  netlifycms = true
Copy the static/admin folder to the static folder in the root of your site:cp -r themes/huguette/static/admin static
You will need to edit config.yml in admin/static to match your site. Explaining how is outside of the scope if this installation doc, but you can use Netlify CMS’s documentation: instructions for adding NetlifyCMS to Hugo.Thanks to HugoNetlify CMSclassless.cssSee my other resources for Hugo A gist with a few snippets to use in templatesHuguette, a boilerplate theme to get you started and nothing more <– That’s this repo!An All-in-one, one-click Netlify install of Hugo with Huguette as a themeDummy Content for Hugo for Hugo: 100 pages in 5 sections with categories and tagsSee AlsoAcademicAce documentationAdritian Free Hugo ThemeAnubisBare",NA
Denis Machard,3,2023-09-23,MIT,"Blog, Minimal",Gists,A gists hugo theme,https://github.com/dmachard/hugo-theme-gists,https://dmachard.github.io/,"Hugo Theme - GistsA minimalist gists blog theme for Hugo, inspired by Github Gists.Init hugo site hugo new site mysite
cd mysite
Install the theme git init
git submodule add https://github.com/dmachard/hugo-theme-gists.git themes/gists
Run in local hugo server -D
Update the theme If you just installed the theme, it is already in the latest version. If not, you can update using the below commandscd themes/gists
git pull
Add new post Hugo will create a post with draft: true, change it to false in order for it to show in the website.hugo new posts/title_of_the_post.md
Pin post pin: true
See AlsoAcademicAnatoleAnubisArchieAstatine",NA
Chris Reddington,3,2023-06-19,MIT,Responsive,Hugo Creator,"Hugo Creator is a theme for the Hugo Static Site Generator. It is intended for content creators of all varieties. Whether you're a blogger, podcaster or YouTuber - The theme should hopefully meet your needs!",https://github.com/CloudWithChris/hugo-creator,NA,"Hugo Creator ThemeAbout Hugo Creator is a theme for the Hugo Static Site Generator. It is intended for content creators of all varieties. Whether you’re a blogger, podcaster or YouTuber - The theme should hopefully meet your needs!Example site Demo → hugo-creator.cloudwithchris.comInstall Inside the folder of your Hugo project, run:git submodule add https://github.com/CloudWithChris/hugo-creator themes/hugo-creator
Open config.yaml, change theme to ""hugo-creator"":theme: ""hugo-creator""
You can also specify which branch, tag or commit that you would like to reference. See Stack Overflow for further details.Visual Studio Code provides a simple experience for managing your submodule dependency versions. The screenshot below shows this working for Cloud With Chris.Usage For further details on how to configure the theme and gain the most value from it, as well as selecting the best configuration option for your scenario, please view the Reference.Contributing Thank you so much for your consideration! This project welcomes contributions and suggestions. When you submit code changes, your submissions will be understood under the same MIT License that covers the project.For detailed guidelines, including Feature Requests, Bug Reports and Code Contributions visit the Contributing Guide.Sites using Hugo Creator Cloud With ChrisHave you adopted Hugo Creator as the theme for your site? We’d love to know! Proudly display your site in this list by submitting a Pull Request to this README file with your site name and URL!License Distributed under the MIT License. See License for more information.See AlsoAcademicAce documentationAdritian Free Hugo ThemeAmethystAnanke Gohugo Theme",NA
Ameio Devloper,3,2022-10-08,MIT,"Blog, Bootstrap, Contact, Multilingual, Responsive",hugo-arogya-theme,"Blogs topics cover ways to live a healthier lifestyle, foods to add to your diet, and more specific information on common Disease symptoms.",https://github.com/ameio/hugo-arogya-theme,NA,"Hugo Arogya Theme
Hugo Arogya Themehugo arogya theme is bloging site in hugoYou are free to modify, save, share, use or do whatever you want with it:Setup theme in locally using following methods Method-1 : Run this theme directly in your local pc 1. Clone this theme [repo](git@github.com:ameio/hugo-arogya-theme.git)
2. After succesfully clone go to the theme/examplesite  
3. Run the following command
  - hugo server -D --themesDir ""../..""
Method-2 : Use this theme in your project 1. Set up your hugo project
2. go to themes directory and inside theme directory clone this [repo](git@github.com:ameio/hugo-arogya-theme.git)
3. Go to the example site folder and cut all the folders and paste it on the root of your project directory
4. set theme name in your config.toml file
5. run the following command for run the project
  - hugo server -D
For add mailing feature in your project do the following steps Create smtp detail for mailing from SMTPGenerate your secure Token from https://smtpjs.com/ siteSet the newly generated token in config.toml fileSet your fromMail email address in config.toml fileSet your bccMail email address in config.toml fileFeatures Multilangauge SupportedGoogle analytics supportedContact form Supported with Email featuresResponsive layoutDesign with Atomic LayoutImage ProsessingSupport Bootstra3See AlsoPaigeUNICEF InventoryAcademicBeautiful HugoBootstrap Theme for Personal Blog and Documentations",NA
Seb,2,2023-08-26,MIT,NA,Vinyl Records Collection,"A Theme to display your vinyl records collection, with categories and images.",https://github.com/Wivik/vinyl-records-collection-theme,https://vinyl.zedas.fr,"Vinyl Records Collection ThemeA Hugo theme made to present your vinyl records collection to the world.If this theme has been designed for a vinyl collection, it’s also suitable for any other music library with some customization.Live demo https://vinyl.zedas.frQuick start Create your new Hugo site.hugo new site my-vinyl-records-collection
Add this theme to your project :## Clone directly
git clone https://github.com/Wivik/vinyl-records-collection-theme themes/vinyl-records-collection-theme

## Or use as a sub module
git submodule add https://github.com/Wivik/vinyl-records-collection-theme themes/vinyl-records-collection-theme
This theme use a specific archetype, so delete or rename the default one.rm <your hugo site folder>/archetypes/default.md
Update the configuration file :baseurl: <your site URL>
languageCode: 'en-us'
title: 'My Vinyl Records Collection'
author: <Your Name>
theme: vinyl-records-collection-theme

taxonomies:
  artist: artist
  genres: genres
  label: label
  year: year
  format: format
Or if you use the Toml format :baseurl = '<your site URL>'
languageCode = 'en-us'
title = 'My Vinyl Records Collection'
author = '<Your Name>'
theme = 'vinyl-records-collection-theme'

[taxonomies]
  artist = 'artist'
  genres = 'genres'
  label = 'label'
  year = 'year'
  format = 'format'
Create your first record Create a new content file with hugo :hugo new an-album-name.md
Open the newly created file, the archetype will basically tell you what you need to do to finish the job.Example :---
# Mandatory parts :
title: ""Disc7""
date: 2023-08-19T23:31:17+02:00
draft: true

# Optional parts that you still should fill in order to sort your collection

## Label : name of the label that published the record
label: Record's Label

## The band's name
band: Record's Band

## The genres this record is classified into
genres:
  - To sort

## Cover image : will be displayed in the album list and top page.
## Display a default one unless you change this value.
cover: 

# More optional details you can use for your collection.

## A quick description of your record. Markdown is supported
# description: |
#    This is a great album.

## Disc format : 45rpm, 33rpm, 78rpm or size if you prefer.
# format: 33rpm

## Any supplementary pictures you want to display.
## These pictures should be in the site asset folder :
## <your hugo site>/assets
## If you put them into a sub-folder, don't forget it in the path !
# pictures:
#   - this-album/pict.jpg

## The publish year
# year: 1990

## Below the metadata block, you can write some content such as a review or anything else you want. It'll be displayed in the album page.
---
Documentation The most comprehensive documentation of the support content is directly written in the archetype.Customize theme Custom colors The CSS file is mostly variabilized and can be overloaded suing a custom.css file that will be loaded after the default style.├── assets
│   └── css
│       └── custom.css # 2. customize the color there
└── themes
    └── vinyl-records-collection-theme
        ├── assets
        │   ├── css
        │   │   ├── custom.css ## 1. copy this file to the site assets folder, in a 'css' sub-folder
        │   │   └── style.css
Custom images You can change the background image of the header and the footer, also the default record image, by adding your own one in the site assets folder.├── assets
│   └── img
│       └── back-header.jpg # will have the priority over the one in the template
└── themes
    └── vinyl-records-collection-theme
        ├── assets
        │   └── img
        │       ├── back-footer.jpg
        │       ├── back-header.jpg
        │       └── default.png
The theme expects the header and footer to be in jpg format, while the default record image is expected to be in png.License Vinyl Records Collection Theme is licensed under MIT.Pictures in the sample/ folder are from https://www.publicdomainpictures.netMaintenance and contribution This theme is maintained by Seb, the original author.If you wish to contribute, fork this repository and open a pull-request. Any contribution is welcome !Support If you like this project and was useful for you, please consider supporting its development. This theme is made by a coffee-lover, so you can just :",NA
17ms,1,2023-11-07,MIT,"Dark, Minimal",Yuan,Fast and minimalistic SPA theme for Hugo,https://github.com/17ms/yuan,https://17ms.github.io/yuan/,"Minimalistic SPA theme for Hugo - Demo A minimal single-page application theme for Hugo.Features Single-page application structure with interactive navbarAbout section with minimal SVG icon pack for displaying socialsProjects section with horizontally scrollable card view of the itemsMobile friendly scalingToggleable mouse tracker/hover animationOptimized CSS, JS, and webfonts (Yellow Lab Tools analysis)Small build size (~40 KB)  Usage The easiest way to install the theme is to use git submodules:$ git submodule add --depth=1 https://github.com/17ms/yuan.git themes/yuan
# Required when recloning the repository (e.g. during automated deployment)
$ git submodule update --init --recursive
Use the hugo.yaml template below to configure the theme:# Note that due to performance reasons the custom webfont used in the site's
# titles is stripped to only contain unicode range U+0000-007F

baseURL: https://example.com/
title: Example
author: Example Author
language: en-GB
paginate: 10

theme: yuan

params:
  description: Example description

  # Mouse tracking animation
  enableMouseTracker: false

  # Trunaction limit of summaries inside projects display containers
  truncationLimit: 150

  # Logos, favicons and theme colors
  assets:
    favicon: ""favicon.ico""
    favicon16: ""favicon-16x16.png""
    favicon32: ""favicon-32x32.png""
    appleTouchIcon: ""apple-touch-icon.png""
    safariPinnedTabIcon: ""safari-pinned-tab.svg""
    safariPinnedTabColor: ""#5bbad5""
    manifest: ""manifest.json""
    msTileColor: ""#2b5797""
    msTileIcon: ""mstile-150x150.png""
    themeColor: ""#040404""
    logo: ""logo.svg""

  # Icons shown below the about text snippet
  # List of the available icons can be found in the /layouts/partials/svg.html file
  socialIcons:
    - name: email
      url: ""mailto:example@example.com""
      display: Optional name shown in tooltips, defaults to capitalized name

  # List of displayed items (e.g. software projects)
  itemDisplays:
    - name: Example project
      url: ""#""
      description: Project description example
See AlsoAcademicAnatoleAnubisAstatineAva",NA
derme302,1,2023-10-07,MIT,"Blog, Personal, Responsive",triple-hyde,A simply cool Hyde inspired theme,https://github.com/derme302/triple-hyde,NA," Triple-hydeTriple-hyde is a Hugo’s theme that extends @htrn’s Hyde-hyde theme that was originally derived from @spf13’s Hyde and Nate Finch’s blog.Main changes hyde-hyde has been paused in development for awhile, this fork implements the following changes:PR #1 adds support for Google Analytics v4PR #5 by @eatingbrb adds support for Mastodon in social sidebarPR #6 adds support for img shortcodes, allowing you to align an image inside of markdown by adding #center, #left or #right at the end of an image link. E.g. ![Metal](/uploads/2014/06/metal_icon.png#center)PR #7 correctly breaks out the about section on the sidebar as a partialPR #8 updates theme to Font Awesome v6 and adds the Threads iconPR #10 by @MarcoIeni adds support for giscusFor more details, please refer to CHANGELOG. A real site in action can be found here and the example site for reference.Usage Installation triple-hyde can be easily installed as many other Hugo themes:$ cd HUGO_PROJECT

# then either clone hyde-hyde
$ git clone https://github.com/derme302/triple-hyde.git themes/triple-hyde

# or just add hyde-hyde as a submodule
$ git submodule add https://github.com/derme302/triple-hyde.git themes/triple-hyde
After that, choose triple-hyde as the main theme.config.tomltheme = ""triple-hyde""
config.yamltheme : ""triple-hyde""
That’s all. You can render your site using hugo and see triple-hyde in action.Options Triple-hyde essentially inherits most of Hyde’s options. There are some extra options thoughhighlightjs = true: use highlight.js instead of Hugo built-in support for code highlightinghighlightjsstyle=""highlight-style"": only when highlightjs = true, please choose one of many highlight.js’s styles.Since v2.0.1, highlighting for each page can be fine-tuned in the front matter, for examplehighlight = false (default true)highlightjslanguages = [""swift"", ""objectivec""]postNavigation = true|false (default true): Setting to false will disable the navigation Previous Post/ Next PostrelatedPosts = false|true (default false): Setting to true allows related posts. Please refer here for more details on related contents with Hugo.GraphCommentId = ""your-graphcomment-id"": to use GraphComment instead of the built-in Disqus. This option should be used exclusively with disqusShortname = ""disqus-shortname"".UtterancesRepo = ""owner/repo-name"": to use Utterances instead of the built-in Disqus. This option should be used exclusively with disqusShortname = ""disqus-shortname"".UtterancesIssueTerm = ""pathname"" Method for Utterances to match issue’s to posts (pathname, url, title, og:title)UtterancesTheme = ""github-light"" Theme for Utterances (github-light, github-dark)Commento = true: to use Commento instead of the built-in Disqus. This option should be used exclusively with disqusShortname = ""disqus-shortname"".CommentoHost = ""your-commento-instance"" Self-hosted Commento instance. This is not required if you’re a Commento.io user.[params.social]: in this section, you can set many social identities such as Twitter, Facebook, Github, Bitbucket, Gitlab, Instagram, LinkedIn, StackOverflow, Medium, Xing, Keybase.[params.social]
	mastodon = ""https://mastodon.gamedev.place/@derme302""
	github = ""derme302""
	...
include_toc = false: Setting to false in FrontMatter will disable too short TOC data as your want.Per PR #56, Gravatar pics can be used exclusively to .Site.Params.authorimage via the parameter .Site.Params.social.gravatar[params.social]
	gravatar = ""your.email@domain.com""
Customisations Most of the customisable SCSS styles in assets/scss/hyde-hyde and Hugo templates in hyde-hyde/layouts are modularised and can be altered/adapted easily.Portfolio Since version 2.0+, I added a portfolio page just in case. If you need it, simply add a menu section ‘Portfolio’ in config.toml as following.[[menu.main]]
    name = ""Portfolio""
    identifier = ""portfolio""
    weight = xyz
    url = ""/portfolio/""
In the folder content , create a subfolder portfolio and use the following folder/content structure as reference.$ tree portfolio
portfolio
├── _index.md
├── p1.md
├── p1.png
├── p2.md
├── p2.png
    ...
├── pn.md
└── pn.png
As I design the section portfolio to be rendered as list, _index.md can be used to set the title for your portfolio (you can read more about _index.md here). For instance, when I want to set the title of my portfolio “Projects”, the front matter of _index.md will be:---
title: 'Projects'
---
The remaining of _index.md will be ignored.For each project, just create a Markdown file with the following parameters in the front matter:---
title: ""Project P1's Title""
description: ""A short description""
date: '2018-01-02'
link: 'https://project-p1.com'
screenshot: 'p1.png'
layout: 'portfolio'
featured: true
---
Here is a longer summary of the project. You can write as long as you wish.
Note:date is important to sort the project chronologicallylayout 'portfolio' is important as you don’t want your project’s page appear in the list of posts in the main page of your Web site but only in the Portfolio ;)featured: true : when you want to show a project as featured project. It is default to false. Note that only one project should be marked featured: true , otherwise, the result could be random as the Hugo template will take the first one.The body of the Markdown file will be the summary of the project.If you want to adjust the portfolio page to your needs, please have a look at the main template, that uses this partial template and this SCSS style.Posts in home page By default hugo will show in your home page the most populated section.
This means that if you have more projects than posts, by default your home page will list your projects instead of your posts.
If you want to change this behaviour you can change the mainsections.
For example, for the exampleSite this is how you should change the config.toml file:[params]
    mainSections = [""posts""]
Some Screenshots Main page A post Portfolio Mobile Mode with Collapsible Menu Author(s) hyde-hyde originally developed by Alex TOriginal developed by Mark OttoHugo’s hyde ported by Steve FranciaLicense Open sourced under the MIT licenseSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Eamonn Cottrell,1,2023-09-06,MIT,NA,Recover,"Minimal, easy to maintain theme for recovery groups.",https://github.com/sieis/re-cover,https://re-cover-hugo-demo.netlify.app/,":boom: re-cover | Hugo theme for recovery groupsLive Demo: hereThis is meant to address the more common web needs of a group. Namely, a clean, readable and easily accessible site for any member to:Find basic information about the meeting. i.e. location, times, format.Access the meeting guide and participate without the need for paper handouts.Access any online only meeting resources.Contribute donations to the group easily online.Installation & Usage Make a new hugo site and clone theme into theme folder:$ hugo new site yoursitename
$ cd yoursitename
$ git clone git@github.com:sieis/re-cover.git themes/recover
Copy contents of /themes/exampleSite into yoursitename root directory. $ hugo server -D
12 Step Groups The example site included in the template is based upon The Beagle Pack’s web page project, and the inception of this theme was brought about after having built similar sites for different groups.For much of the configuration, editing the config.toml file will suffice. Particularly for groups with limited customization needs, this will provide plenty of the basic needs for a group or meeting’s home page.This project was built out of a need for a simple, fast, easily accessible and modern web site to host an AA group’s readings and donation information.In many cases, the site may be hosted for free with the only optional expense being a yearly domain registration if custom domain names are required. (i.e. meetingname.com or meetingname.org)Area Intergroups Local Intergroups may also find this theme useful. Please contact me if your needs stretch beyond the simplicity of this theme.I have worked with intergroups to provide custom solutions to existing sites.CONFIG Much of the data specific to each group is contained within the config.toml file. Copy and modify this from the exampleSite in order to change the specifics listed on almost every section of the template.Colors The theme is provided with custom coloring and pictures which match. The main.css file may be modifed to add or remove any of these choices, and you may replace the images with new ones of your own choosing as well. There are many available resources for images. One such is unDraw which I’ve utlized for the stock images in this theme.Icons I’ve used Font Awesome, albeit sparingly, and have it loading via CDN.Meta Data In the head partial, several pieces of meta data are set for the title, description, og:image and favicon. Edit these as you see fit. Favicons are stored in /static/favicons/.Regular Readings Many popular readings are included under the Regular Readings section. These may be changed if desired. The readings are in the content -> readings folder as individual markdown files. Setting the draft to true will deactivate any of these.You may add additional readings by creating new markdown files in the readings folder.Readings List There is a Readings List page (/readings/) that is not actively linked, but which can be if needed. It simply holds a list of each of the available readings that are available in the modal drop-down menus on the home page. The template controling this is the section.html in the default layouts folder. Likewise, there is a single.html template which controls the individual readings pages.About the meeting For meeting and/or chairperson guidelines specific to your group, the about page includes placeholder elements. In the example, chairperson guidelines are listed in six sections. These may be edited, removed, or added to via the data folder. The guidelines in use are contained within the guidelines.json file in the data folder.Blog, or a lack thereof The base template does not have proper blog functionality, though it could be added if a group needed it.",NA
Ian S. McBride,0,2023-11-09,MIT,"Blog, Light, Minimal, Portfolio, Responsive",smigle,Minimal Hugo theme using a Monospace font and free from tracking or external dependencies,https://gitlab.com/ian-s-mcb/smigle-hugo-theme,NA,"smigle-hugo-themeA minimalist theme for the static site generator Hugo. This
theme is shared on Hugo’s official collection of
themes.Features No JavaScriptNo Google spyware or tracking of any kindNo other external dependencies or comment sectionsOnly one local font (Iosevka)Demo https://smigle-hugo-theme.netlify.app/Screenshots Installation From the root of your site:git submodule add https://gitlab.com/ian-s-mcb/smigle-hugo-theme.git themes/smigle
Updating From the root of your site:git submodule foreach git pull origin main
Run example site hugo new site mysite -f yaml
cd mysite
git init
git submodule add https://gitlab.com/ian-s-mcb/smigle-hugo-theme themes/smigle
cd themes/smigle/exampleSite
hugo server
Contributing Have you found a bug or got an idea for a new feature? Feel free to use
the issue tracker to let me know. Or make directly a
merge request.Acknowledgements This theme was created from scratch and influenced by the following two
Hugo themes:colorchestra’s smolSumner Evans’s smolSee AlsoAcademicBeautiful HugoGokarnaHugo LiftoffLightbi",NA
Thomas Muguet,0,2023-08-24,GPL-3.0-or-later,"Blog, Gallery, Responsive",Hugo Split Gallery,Photo gallery inspired by Hugo Split Theme,https://gitlab.com/tmuguet/hugo-split-gallery,https://tmuguet.gitlab.io/hugo-split-gallery/,"Hugo Split Gallery | DemoSplit Gallery is a theme for Hugo focused on photos and maps.This Hugo theme features a photo gallery, a map and custom content per page, and supports custom sections and taxonomies.This project is licensed under the GPLv3 license. Due to 3rd-party included in this project, you are not free to use it for commercial applications. See the license section below for more info.It is inspired by Hugo Split Theme, itself ported from Split by One Page Love.Demo (built with exampleSite as source); Live example.This project follows semantic versioning, meaning any new minor version (e.g. 1.1.0 -> 1.2.0) only introduces new features without breaking changes, and breaking changes are only introduced in major versions (e.g. 1.1.0 -> 2.0.0).
This means you can safely upgrade from one minor version to the next one.Installation Inside the folder of your Hugo site, run the following command:git submodule add https://gitlab.com/tmuguet/hugo-split-gallery.git themes/hugo-split-gallery
Then, change (or add) the theme in the site’s configuration (e.g. config.toml):theme = ""hugo-split-gallery""
For more information, read the official setup guide of Hugo.Getting started After installing the theme successfully, you just need to add some content.Content archetype This theme supports any type of section (post, blog, &mldr;). For simplicity, we’ll use the term post in this part.This theme requires each post to follow this structure:content/
├── posts
│   ├── my-post
│   │   ├── index.md
│   │   ├── mytrack.gpx
│   │   └── images
│   │       ├── IMGP.jpg
│   │       └── ..
│   ├── my-other-post
│   │   ├── index.md
│   │   ├── mytrack.gpx
│   │   ├── mysecondtrack.gpx
│   │   └── images
│   │       ├── IMGP.jpg
│   │       └── ..
In other words, photos displayed in the gallery must be in a images subfolder, and track(s) -if any- must be at the same level as the content. Supported formats for tracks are GPX (.gpx files), KML (.kml files) and GeoJSON (.geojson files).Additionnally, the content of the post:requires an images parameter, refering to at least one picture from this post, which will be used as thumbnail in the home gallery,can have a seealso parameter, refering to one or multiple other posts.Example:---
title: ""Lac de la Muzelle et lac Lauvitel""
date: 2017-07-30T00:00:00+00:00
images: [""images/IMGP3719.jpg""]
seealso: [""posts/lac-lauvitel"", ""posts/lac-muzelle""]    # If single, can avoid the brackets
---

Cat ipsum dolor sit amet, hide from vacuum cleaner swat turds around the house hate dog don't nosh on the birds.
Tweaking your site In order to work, this theme does not require anything specific from the configuration of your site.This theme supports all configuration options specified in Hugo documentation. If you have issues with an option, please let me know via the issue tracker or by email.Some additionnal parameters are available to tweak your site, described in the documentation.Updating From the folder of your Hugo website, run the following commands to update to the latest version:cd themes/hugo-split-gallery && git pull
Reference For reference on site parameters, post parameters and warnings, see the documentation.License This theme is licensed under the GPLv3 license, except for the photos distributed with the example site which are not free to use.This theme includes fancybox, which is not free to use for commercial applications. If you wish to use this theme in commercial applications, you will need to get a commercial license from fancybox.All other third-parties included are free to use (under MIT License, SIL OFL 1.1, BSD-2-Clause).Contributors @tmuguet: Maintainer@beva-sdev: Czech and German translations, numerous bug reportingContributing If you find a bug or have an idea for a feature, feel free to use the issue tracker to let me know.In case you want to merge some code, you are more than welcome to open merge requests (with or without a related issue). Please branch from the next version of this repo and target the next branch for the merge request, as main is reserved for tagged versions. Please also note this theme follows semantic versioning, thus don’t introduce breaking changes if they are not necessary.Adding translation If you wish to add a new translation, there are two files to create:i18n/<language>.toml, containing main theme translationsassets/hugo-split-gallery/fancybox.<language>.js, containing fancybox translationsAdding new third-parties / updating third-parties Adding/updating a third-party requires npm to be used. Resources (JS, CSS, images, fonts, etc.) are copied and commited into git, so using this theme does not require npm.Add or update the third-party as a development dependency (e.g. npm install --save-dev my-third-party)Edit post-install.js to add the resources to be copiedRun npm i to run the scriptEdit layouts/partials/site-script.html and/or layouts/partials/site-style.html to include the new resourcesIf there are non-CSS/JS files (e.g. images, fonts), Hugo will not copy them by itself whne generating the site. A hack is provided in layouts/partials/site-style.html to bundle them anyway.See AlsoAcademicAutoPhugoBilberry Hugo ThemeHB Starter Theme TemplateMoments",NA
Iago Bozza,0,2023-08-08,MIT,"Blog, Bootstrap, Company, Landing, Light, Personal, Portfolio, Responsive",Up Business Theme,A clean and modern landing page website inspired by clean and modern illustrations.,https://gitlab.com/writeonlyhugo/up-business-theme,https://writeonlyhugo.gitlab.io/up-business-demo/,"Hugo Up Business ThemeUp Business is a clean and modern landing page, inspired on light illustrations
with a modern look, that can be used for companies or to showcase a product.Live Demo See here.Quick Start If you are creating a new website, the quickest way to get up and running is to
clone the theme into your themes folder:git clone https://gitlab.com/writeonlyhugo/up-business-theme.git themes/up-business-theme
The folder hugoBasicExample contains a working version of a website with the
theme. It includes: the configuration file config.yaml, the content folder
content and the data folder. It’s a good idea to copy this over to the
project folder to get an initial version of the website up and running.You can also use it as s Git submodule. If you are starting a new website:hugo new site NewSite
cd NewSite
git init
git submodule add https://gitlab.com/writeonlyhugo/up-business-theme.git themes/up-business-theme
rm hugo.toml
cp themes/up-business-theme/hugoBasicExample/config.yaml .
cp -a themes/up-business-theme/hugoBasicExample/content/* content/
cp -a themes/up-business-theme/hugoBasicExample/data/* data/
Now hugo server will start the local development server with a working
version of the website with the theme.Credits Hugo Up Business Theme is based on a Figma Design by Abell
Vo.License Up Business is licensed under the MIT license.See AlsoAcademicHugo InitioLightbiPaigePiko",NA
Iago Bozza,0,2023-08-04,MIT,"Blog, Bootstrap, Light, Personal, Responsive",Write-Only Hugo Theme,"A simple, clean and straightforward blog theme.",https://gitlab.com/writeonlyhugo/writeonlyhugo-theme,https://writeonlyhugo.gitlab.io/writeonlyhugo-demo/,"Write-Only Hugo ThemeWrite-Only Hugo is a simple, clean and straightforward blog theme.Live Demo See here.Quick Start If you are creating a new website, the quickest way to get up and running is to
clone the demo website.git clone https://gitlab.com/writeonlyhugo/writeonlyhugo-demo.git
Alternatively, you can clone just the theme to your theme folder:git clone https://gitlab.com/writeonlyhugo/writeonlyhugo-theme.git themes/writeonlyhugo-theme
The folder hugoBasicExample contains a working version of a website with the
theme. It includes: the configuration file config.yaml and the content folder
content with the usual markdown examples.Quick Test To test the website:cd hugoBasicExample && hugo server --themesDir ../..
License Write-Only Hugo Theme is licensed under the MIT license.See AlsoBootstrap Theme for Personal Blog and DocumentationsHugo InitioLightbiPaigeUp Business Theme",NA
Axorax,0,2023-06-04,MIT,"Blog, Dark, Minimal, Responsive",Axile,Simple modern Hugo theme,https://github.com/Axorax/axile-hugo,https://axile.netlify.app/,"Axile Hugo ThemeSimple modern Hugo theme. Demo siteUsage config.toml with all settingsbaseURL = ""https://axile.netlify.app/""
languageCode = ""en-us""
title = ""My New Hugo Site""
theme = ""axile""

[params]
icon = ""https://github.com/Axorax/css-button-maker/blob/main/assets/img/axorax.png?raw=true""

[params.navbar]
patreon = ""https://patreon.com/axorax""

[params.navbarButton]
Donate = ""https://patreon.com/axorax""
Front matter with all options---
title: ""Article example""
date: 2023-05-24T18:57:41+06:00
author: ""axorax""
thumbnail: ""image-url(https://site.com/image.png)""
alt: ""nature image""
tags: [""example""]
---
Support me on Patreon —
Check out my socialsSee AlsoAcademicAnatoleAnubisAstatineAva",NA
Abraham Raji,0,2023-05-15,GPL-3.0,"Blog, Dark Mode, Landing, Light, Minimal, Responsive",Gruvhugo,A minmal theme based on the Gruvbox color scheme.,https://gitlab.com/avron/gruvhugo,https://avron.gitlab.io/gruvhugo/,"Gruvhugo
This is a minmal theme based on the Gruvbox color scheme by Pavel PertsevFeatureMinimalism is the norm hereFast.Theming: Persistent color theme, depending on your preference.Clean UIIntuitive Navigation.Highly customizableEvery piece of text you see is customizable.Customizable PicturesCustomizable MenuFully responsiveSupport for social media iconsScrenshots Installation Adding theme as a sub-module is by the most efficient way to do things in my opinion. If you wish to use the theme as it is then all you need to do add the sub-module but if you wish to modify and maintain your own fork of the theme then make the necessary changes to the git remotes as you see fit.$ git submodule add https://gitlab.com/avron/gruvhugo.git
Configuration Like almost every other Hugo the config file is placed in
exampleSite/config.tomlContributing Issues and merge requests for bug fixes and enhancements are welcome.Licence The theme is released under the GPL v3 License.See AlsoHugoplatePaigePikoAcademicBlowfish",NA
JM Fergeau,0,2023-04-15,Apache 2,Blog,Hugo.386,Hugo port of the BOOTSTRA.386 theme,https://gitlab.com/jmfergeau/hugo.386,NA,"HUGO.386HUGO.386 is a port of the BOOTSTRA.386 theme. It has a cool MS-DOS feeling and is ready to be used for blogs. Despite its antique look, the theme is responsive and can be viewed on mobile devices.Test it on live here! (v1) Note: A new version based on Bootstrap 4 is in the making with a slightly different design. It’s still in beta but you can test it by fetching the v3 branch instead of the master. Don’t use it in production yet, though. You can test it here!Installation As a Hugo module Remove your previously used theme variable from your site config and remove the themes directory, or move it out of your Hugo site repo.In your siteconfig add the following:[module]
  [[module.imports]]
    path = ""gitlab.com/jmfergeau/hugo.386""
Inside the folder of your Hugo site run:$ hugo mod init hugo386
Finally to clean up the go.mod and update/generate the go.sum file which track the module dependencies for your site, run:$ hugo mod tidy
With git submodules Inside the folder of your Hugo site run:$ git submodule add https://gitlab.com/jmfergeau/hugo.386 themes/hugo.386
For more information read the official setup guide of Hugo.Getting started After installing the theme successfully it requires a just a few more steps to get your site running.The config file Take a look inside the exampleSite folder of this theme. You’ll find a file called config.toml.
It contains detailed information about the customization of all strings in this theme.To use it, copy the config.toml in the root folder of your Hugo site. Feel free to change strings as you like.Nearly finished In order to see your site in action, run Hugo’s built-in local server.$ hugo server
Now enter localhost:1313 in the address bar of your browser.Contributing Did you found a bug or got an idea for a new feature? Feel free to use the issue tracker to let me know. Or make directly a merge request.License This theme is released under the Apache License 2.0 For more information read the License.Annotations Thanks to Steve Francia for creating Hugo and the awesome community around the project. Many thanks to Kristopolous as well for the BOOTSRTA.386 theme. And finally huge thanks for all the contributors for helping this theme to stay updated and glitch-free!See AlsoAcademicAnanke Gohugo ThemeAnatoleAnubisArberia Theme For Hugo",NA
rmaguiar,0,2023-02-05,MIT,"Blog, Contact, Dark, Light, Minimal, Multilingual, Personal, Responsive",Color Your World,A minimalist theme for personal blogs with a colored twist.,https://gitlab.com/rmaguiar/hugo-theme-color-your-world,https://color-your-world-demo.netlify.app,"Color Your World


Live demo (on Netlify)Demo repoColor Your World is a Hugo theme developed around a single experiment that led me to this:It’s a HTML color picker. Along with some vanilla JS, it allows anyone to change what I’ll be calling here&mldr; the accent color, a color used mostly in interactive elements.I liked the result so much that I decided to use it on my main site, but I also want to share it, in case anyone wants to tinker with it.It makes heavy use of Hugo Pipes and I highly recommend using --minify when building!I’ve been working on this theme for so long that there are features I don’t even remember anymore&mldr; But here are some:Customizable dark/light mode;Customizable “accent color” (in an user-level);Keyboard-friendly;Privacy-aware to an extent (no Google Analytics/Fonts, Disqus, etc);Social shortcode including centralized and decentralized platforms;Contact form shortcode (via Formspree);Open Graph, Twitter Cards and structured data (Schema.org) meta tags;Responsive images via image processing;Basic search functionality via Fuse.js;Image lazy loading;noscript capable to an extent (except for KaTeX and search functionality).Screenshots Requirements Hugo ExtendedMinimum version: 0.73.0Installation If you have git installed, you can do the following at the CLI within the Hugo directory:git clone https://gitlab.com/rmaguiar/hugo-theme-color-your-world.git themes/color-your-world
For more information read the Hugo official setup guide.Customization Dark/light mode colors Both color palettes can be found in assets/scss/colors/variables.scss.Accent color By default, there are 2 accent colors plus 10 on the demo site, distributed into pairs.You can change the default mode and accent colors in the config:[params.style]

  # Dark mode as default
  # User preferences (site/system settings) will still have priority over it
  # The default is false
  isDark = true

  # Accent colors for dark and light mode respectively
  darkAccent   = ""#1dbc91"" # Default is ""#1dbc91""
  lightAccent  = ""#1f676b"" # Default is ""#1f676b""

  # More colors, pick as many as you want (not really sure if there's a limit)
  # Apparently these may not show up on every modern browser (ie.: Firefox)
  # There's no default value. Used here just as example
  presets = [ ""#1f676b"", ""#f3a530"", ""#902b37"", ""#1dbc91"", ""#754e85"", ""#7fc121"", ""#a8314a"", ""#ff7433"", ""#3e6728"", ""#c063bd"" ]
Fonts By default, this theme uses Oswald and Open Sans fonts. Latin charset only and woff2 format, which is supported by most modern browsers.If that’s not enough for your use case, you’ll have to generate a new set yourself.Fortunately, it’s fairly easy thanks to this tool: google-webfonts-helper.In your project folder, add the font files to a folder named /assets/fonts and the CSS content to a file named /assets/scss/fonts/font-face.scss.Also make sure to copy the file /assets/scss/fonts/variables.scss into your project folder and change the font names accordingly.Syntax highlighting This theme comes with two chroma styles, meant to be used with dark and light mode respectively. These are Monokai for dark mode and Solarized Dark for light mode.It’s worth noting that I’m not using the original stylesheets, but modified stylesheets based on the pygments-high-contrast-stylesheets (aka “WCAG AA passing Pygments stylesheets”).In case you want to change it, it can be found in assets/scss/colors/chroma as dark.scss and light.scss.The lines below are required in your config file to make use of this feature:[markup.highlight]
  noClasses = false
To disable it, you can just remove the noClasses = false (as its default value is true) and add the lines below:[params]
  [params.style]
    useCustomChroma = false
Image processing By default, images are responsive. This is achieved through image processing, where images are resized depending on their width.For example, images with width equal or greater than 1280 pixels are processed (resized) into 3 sizes: 1280x, 960x and 640x.If using Hugo v0.83 or above, a set of WEBP files will be generated as well.Cover images will also be resized (using the Fill method) for Open Graph (1200x630) and Twitter Cards (1280x640).You can change this behavior via config. Below you can find the default params:[imageProcessing]

  # Enable auto resize
  # Includes ""img"" and ""figure"" shortcodes
  autoResize = true
  
  # Convert ""tiff"" files to the format below
  # since the most used browsers don't support it
  fallbackOptions = ""jpeg""
  
  # Fill options for Open Graph and Twitter card images
  # These images are also used in the Schema.org structured data
  openGraphFillOptions = ""1200x630""
  twitterFillOptions = ""1280x640""
  
  # Extra formats (along JPEG/PNG)
  [[imageProcessing.extraFormats]]
    formatOptions = ""webp""
    mediaType = ""image/webp""
    minVersion = ""0.83""
  
  # Sizes at which images are resized
  # Keep the sizes in descending order
  # The smallest size will be used as the default image
  [[imageProcessing.sizes]]
    resizeOptions = ""1280x""
    descriptor = ""1280w""
    minWidth = 1280
  
  [[imageProcessing.sizes]]
    resizeOptions = ""960x""
    descriptor = ""960w""
    minWidth = 960
  
  [[imageProcessing.sizes]]
    resizeOptions = ""640x q90""
    descriptor = ""640w""
    minWidth = 640
When using the shortcodes img and figure, image processing can also be disabled by setting the resize param as false.Shortcodes The most complex shortcodes here are the social and contact-form. They can be used to inject a list of social platform links and a contact form, respectively.Social Here I make a distinction between centralized and decentralized platforms.Since decentralized platforms introduced the concept of “instances”. It’s not uncommon that a single person owns multiple accounts, in multiple instances, in the same platform.This distinction should make the setup easier.Here’s an example of config file:[params.social.centralized]
  facebook      = [ ""<username>"", ""Zuckerburg"" ]
  flickr        = [ ""<username>"" ]
  github        = [ ""<username>"" ]
  gitlab        = [ ""<username>"" ]
  instagram     = [ ""<username>"" ]
  keybase       = [ ""<username>"" ]
  linkedin      = [ ""<username>"" ]
  medium        = [ ""<username>"" ]
  reddit        = [ ""<username>"" ]
  snapchat      = [ ""<username>"" ]
  soundcloud    = [ ""<username>"" ]
  stackOverflow = [ ""<username>"" ]
  strava        = [ ""<username>"" ]
  telegram      = [ ""<username>"" ]
  twitch        = [ ""<username>"" ]
  twitter       = [ ""<username>"", ""@birb"" ]
  vimeo         = [ ""<username>"" ]
  whatsapp      = [ ""<number>"" ]
  xing          = [ ""<username>"" ]
  youtube       = [ ""<channelid>"" ]
  #entry         = [ ""username"", ""label (optional)"" ]
  
  # The ""entry"" here IS important. It's used to load the data.

[params.social.decentralized]

  [params.social.decentralized.element]
    1 = [ ""https://app.element.io/#/user/<username>:matrix.org"", ""matrix.org"" ]
    #entry = [ ""full url"", ""label (required)"" ]
    
  [params.social.decentralized.funkwhale]
    1 = [ ""https://open.audio/<username>"", ""open.audio"" ]
    
  [params.social.decentralized.mastodon]
    1 = [ ""https://mastodon.social/<username>"", ""mastodon.social"" ]
    2 = [ ""https://mastodon.too/<username>"", ""mastodon.too"" ]
    3 = [ ""https://yet.another.one/<username>"", ""yet.another.one"" ]
    
  [params.social.decentralized.matrix]
    1 = [ ""https://matrix.to/#/<username>:matrix.org"", ""matrix.org"" ]
    2 = [ ""https://matrix.to/#/<username>:other.org"", ""other.org"" ]
    
  [params.social.decentralized.peertube]
    1 = [ ""https://peertube.something/accounts/<username>"", ""peertube.something"" ]
    
  [params.social.decentralized.pixelfed]
    1 = [ ""https://pixelfed.social/<username>"", ""pixelfed.social"" ]
    
  # The ""entry"" here ISN'T important. It's used for nothing.
This information will also be used to generate social meta tags (ie.: rel=“me” and Schema.org).Contact form # Contact form shortcode
[params.contact]

  # formspree.io Form ID
  formspreeFormId = ""example""
  
  # Autocomplete [on/off] and min character length for message
  autoComplete      = false # Default is false
  messageMinLength  = 140   # Default is 140
  
  # Subject
  # You can set a single value below (and it will cease to be a dropdown),
  # BUT KEEP IT AS AN ARRAY
  # It can also be disabled entirely (and it will turn into a text field)
  subject = [ 'Just saying ""hi""', ""I know what you did last winter"", ""... Is that a sloth?"", ""お前はもう死んでいる。"" ]

  # Text placeholders. As usual, comment the lines if you don't want use them
  # The ""subject"" below will only be used if the ""subject"" above doesn't exist (ie.: commented/deleted)
  [params.contact.placeholder]
    name    = ""Jane Doe""
    email   = ""janedoe@example.com""
    subject = 'Just saying ""hi""'
    message = ""Aenean lacinia bibendum nulla sed consectetur. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Donec ullamcorper nulla non metus auctor fringilla nullam quis risus.""
Miscellaneous Rich content Minimal effort was put here, since I don’t use this feature. I recommend that you create your own assets/scss/rich-content.scss.404 A really basic 404 page can be generated via config file by using:[params.notFound]
  title         = ""Page not found""
  description   = ""This page was not found.""
  paragraph     = ""Nothing to see here, buddy.""
Custom front matter params mainTitle (string): Can be used to replace the <title> meta tag, if you wish it to be different from the <h1> (which will still use the title param);sitemapExclude (true|false): Can be used to exclude a page/section from the sitemap;noindex (true|false): Similar to the above. Can be used to exclude a page/section from being indexed (by bots or your own site). It will change the meta tag robots to noindex and the page(s) will not be added to the site’s search index.Custom partials The site title can be replaced by creating a file named layouts/partials/custom/site-title.html;Custom favicons can be used by creating a file named layouts/partials/custom/head-append.html;Custom CSS can be imported into the main CSS file by creating a file named static/css/custom.css or assets/scss/custom.scss;The footerText param can be replaced by creating a file named layouts/partials/custom/footer-text.html.More params More possible params for your config file (or front matter):# Used only in the RSS file
copyright = ""Copyright © 2008–2021, Steve Francia and the Hugo Authors; All rights reserved.""

[params]
  
  # Site description
  description = ""John Doe's personal website""
  
  # Author
  author      = ""John Doe""
  authorDesc  = ""Some indescribable horror.""
  
  # Footer text
  # Each value will become a paragraph
  # Keep it as an array
  footerText = [ ""Generated with [Hugo](https://gohugo.io) using the [Color Your World](https://gitlab.com/rmaguiar/hugo-theme-color-your-world) theme."" ]
  
  # Site cover, for Open Graph, Twitter Cards and Schema.org
  # It will be used if the current page doesn't have an image cover
  # File will be picked from the ""assets"" directory
  # Comment the lines if you don't want to use it
  cover     = ""img/cover.jpg""
  coverAlt  = ""A placeholder that doesn't deserve to be described.""
  
  # Shows a message in the footer about JavaScript being disabled
  # The default is false
  hasNoscriptNotice = true
  
  # Default path for images in posts
  # ie.: ""content/some-post/img""
  # Can also be set PER PAGE
  # It can be used to reduce repetition
  # There's no default value
  imgPath = ""img""
  
  # Default classes for markup image 
  # Modifies the default behavior of images placed via markdown
  # Can also be set PER PAGE via front matter
  # Available classes are: border and borderless
  # There's no default value
  markupImgClass = ""borderless""
  
  # This will append a separator (of your choice) along the site title to your <title>
  # ie.: | ❚ - – — • ⚫
  # You can disabled it PER PAGE by using ""disableTitleSeparator"" at front
  # matter or disable it entirely by commenting the line below
  titleSeparator = ""|""
  
  [params.search]
  
    # Enable search form (at the post list)
    # The default value is false
    enable = true
  
    # Limit search results
    # The default value is 30
    maxResults = 15
    
    # Limit seach field input and pattern matching
    minLength = 2   # Default is 3
    maxLength = 42  # Default is 32
    
    # Optional placeholder for search field
    placeholder = ""ie.: lorem ipsum""
    
    # Stop word filter list
    # Can also be set PER PAGE via front matter
    # There's no default value
    stopWords = [ ""a"", ""an"", ""and"", ""in"", ""the"", ""to"", ""was"", ""were"", ""with"" ]

  [params.style]
  
    # Disable the use of system settings (prefers-color-scheme)
    # Can be used as a workaround for Chrome on Linux
    # (Issue 998903: Dark Gtk theme does not affect prefers-color-scheme media query)
    # The default is false
    ignoreSystemSettings = false
  
    # Use an icon or text for footnote return links
    # The default is false
    hasIconAsFootnoteReturnLink = true
    
    # For the social shortcode
    # Use flexbox (with flex-grow) or grid (equal width)
    # The default is false
    socialIsFlex = false
    
    # Keep anchor links hidden until it's focused/hovered
    # They will always be visible in mobile devices, regardless the option
    # The default is false
    hideAnchors = true

    # CSS animation transition when changing colors
    # The default is "".5s ease""
    changeTransition = "".3s ease""
Contributing Currently not accepting contributions.If you have any question or suggestion, please feel free to open an issue.Acknowledgements Font Awesome and Fork Awesome for the icons;@nickpunt and @regpaq for the dark/light mode switcher idea;Glenn McComb and his article about custom pagination with Hugo;JeffProd and his article about building a custom search engine for Hugo;Many people on this forked gist for their takes on Fuse.js + Hugo;Philip Walton and his sticky footer solution with Flexbox;Fuse.js;KaTeX;Hugo and its community.Sponsoring If this repo was useful or helpful to you in any way, please consider buying me a coffee:See AlsoAcademicHugoplatePaigeAnubisHugo Liftoff",NA
Johannes Lippmann,0,2023-01-27,GPLv3,"Blog, Minimal, Responsive",Classless Blog,"A blog theme that works well with classless-css frameworks. It is designed to be as simple, accessible and minimal as possible.",https://gitlab.com/Kaligule/classless-blog,https://kaligule.gitlab.io/classless-blog/,"classless blogThis is a hugo-theme for blogs.It is extremly minimalistic and only features standard html - no javascript or custom css.
This makes it very accessible, responsive and privacy friendly (there is no tracking at all).To make it also look good a classless-css framework can be included.Demo A demo of this theme (with the default “Water.css” framework) is hosted on Gitlab pages.Choose a framework Some cool classess-css frameworks are:Water.cssClassless.cssSakuraMarxAtriCSSBut there are many more out there.Use a framework Such classess-css frameworks provide stylesheets that can be included into this theme in two ways, both with different pros and cons:Via url in the config Add an url to a stylesheet into your sites config like this:In your config.yaml:params:
  stylesheetUrl: ""https://unpkg.com/sakura.css/css/sakura.css""
Or in your config.toml:[params]
stylesheetUrl = ""https://unpkg.com/sakura.css/css/sakura.css""
Proslittle effortsmall diffs when changing the frameworkwill update automatically if the framework is updatedConsyou are dependend on a third party, which might go down without noticethe third party might track your usersFile in static/css/ Download the stylesheet and put it into the sites static folder as static/css/stylesheet.css.
If this file exists then the option stylesheetUrl from the config will be ignored.Prosfull controll over what is part of your siteyou can overwrite the file if you wantyou can use your own stylesheets, even if they are not publicly availableyou can get creative with using git submodules or makefiles to automate the processConschanging frameworks is more workforeign css-code is now in your repoCustom parameters There is only one standard parameter for posts: If you want a cover image, add it like this:image: path/to/image.jpg
Most of the time the path will just be coverimage.jpg or so.
This assumes that your posts are organized as page-bundles (which is the most sensible way anyways).
Have a look at the exampleSite to see how this would look.Ideas for improvement Add ci testsAutomatically create Screenshots in the CIHave versions of the demo site online for different css-frameworksMake sure the project can be internationalized wellSee AlsoAcademicAnatoleAnubisArchieAstatine",NA
Sean Feng,0,2022-11-08,MIT,"Blog, Light, Minimal, Personal",TechLab,A Simple Hugo Theme,https://github.com/sefeng211/techlab-hugo-theme,https://techlab.seanfeng.dev/,"TechLab Hugo ThemeA Hugo theme that targets simplicity.Screenshots Live Demos Live Demo: https://techlab.seanfeng.dev/The content and config of this sample site can be found in the techlab-example-site directoryYou can also check out https://seanfeng.dev for a more realistic usage.Install Rungit submodule add git@github.com:sefeng211/techlab-hugo-theme.git themes/techlab
Add theme= 'techlab' to the theme.toml.Configuration TODOSee AlsoCalligraphyMonday themeTatBanTheme2.0pulpAcademic",NA
Yevgeniy Chaban,0,2022-09-14,MIT,"Blog, Light, Minimal, Personal",Monday theme,Clean theme designed for personal blogs,https://github.com/cyevgeniy/monday-theme,NA,"Monday themeMonday theme is a clean and simple theme that is very suitable for blogs.
It almost doesn’t use any decoration elements while looking attractive,
so visitors will be concentrated on your content and will not be distracted.Screenshots Installation To install the monday theme, clone it
into themes directory of your hugo project:git clone https://github.com/cyevgeniy/monday-theme themes/monday-theme
Configuration Add theme=monday-theme to your site’s config.toml file,
after that Hugo will use the monday theme for building your site.Menu Adding top navigation menu is like putting
these lines in config.toml:[menu]
  [[menu.main]]
    name = ""Home""
    url = ""/""
    weight = 1
  [[menu.main]]
    name = ""Blog""
    url = ""/posts/""
    weight = 2
  [[menu.main]]
    name = ""About""
    url = ""/about/""
    weight = 3
The theme supports only single-level menu.Featured posts Use featured: true param in a post
to make it appear in the “Featured posts”
section. If you don’t want this post to be listed in the blog posts list,
add hidden: true parameter to the frontmatter of the post.Intro text Intro text is displayed
at the bottom of the aside block.To add the intro block, use introBody
and introTitle params:[params]
  introTitle=""Introduction""
  introBody = """"""Hello, this is my blog and my introduction message. Put
  here small description about yourself. It is also a good idea to put here
  your contact email or something like this.""""""
Featured image Featured images are shown right after a post heading
in the blog page. To set featured image for the post,
use featured_image param:---
Title: ""Some blog post""
featured_image: ""/img/subdir/img.png""
---

## Todo

- [ ] Add footer
- [ ] Publish to hugo themes
See AlsoCalligraphyTatBanTheme2.0TechLabpulpAcademic",NA
Tatsat Banerjee,0,2022-08-01,GNU General Public License Version 3,"Blog, Bootstrap, Light, Minimal, Personal, Responsive",TatBanTheme2.0,A minimal theme to build an elegant website and a working blog,https://github.com/tatsatb/TatBanTheme2.0,https://tatbanthemedemo.netlify.app/,"TatBanTheme2.0TatBanTheme2.0 is a minimal Hugo theme to build an elegant website and a working blog. The theme is built from scratch using responsive Bootstrap 5 framework.Live demo is on Netlify.Although it has 2.0 in its name, it is still a work-in-progress project. I will be adding more CSS (and hopefully some JS) elements in future releases.The aim of this theme is not necessarily to provide a plug and play framework, but to encourage people to get started with their own customizations. Pull requests are welcome.Installation I am assuming Hugo is already installed in the system as per the official instructions and you have created a Hugo site by running:    hugo new site myawesomesite 
    cd myawesomesite
You can now install the theme by using either of these three ways:Clone: Clone the theme repo into your themes folder (if you want to contribute to the theme in future or open pull requests) :git clone https://github.com/tatsatb/TatBanTheme2.0.git themes/TatBanTheme2.0
Submodule: Add As Git Submodule into your themes folder (if you currently have no plan of contributing to the theme):    git init
    git submodule add https://github.com/tatsatb/TatBanTheme2.0.git themes/TatBanTheme2.0
For so-called less-technical users: Simply install the theme by downloading the ZIP files by clicking the download option (under green Code button), then extract the files, and then copy the folder to your site’s themes folder.Quickstart In the root folder of your site (i.e. the myawesomesite folder), delete config.toml file.Copy the config.toml file from the themes/TatBanTheme2.0 /examplesite folder and paste into root myawesomesite folder and change the baseURL to your website’s URL.Copy everything from themes/TatBanTheme2.0/exmaplesite/content folder to myawesomesite/content folder.Inside your terminal, go to myawesomesite directory and use the following command.    hugo server -D
You should see a working website.Features Fully responsive mobile-first theme. It should look great in any screen.Unique design. The theme was designed from scratch. It is not a fork of any other Hugo/Jekyll/HTML5 theme or anything similar.Bootstrap 5. Elegant CSS framework and icon sets are included.Blog-aware theme. It can generate tags and categories pages by default.Comments are enabled. Disqus is configured and enabled by default.Separate page templates. Because your blog posts, list pages, and Homepage should not look the same!SEO friendly. Custom description meta-tag for each page.LaTeX is enabled. Markdown is great. However, sometimes we do need to write nice-looking equations. Hence, in this theme, LaTeX is integrated (using KaTex library).Custom HTML is enabled. Once again, markdown is great. However, sometimes we do need some finer control. So you can directly type in HTML inside any .md files if you are using this theme.Configuring your site Basics The ground rule of customizing any aspect of website for your personal use is to follow the directory struture of theme and create similar directory and files at the site’s root directory.You do not have to edit files in themes folder to edit your site configuration. As per Hugo’s lookup order, your site’s root directory’s files will get precedence and Hugo will use your file (instead of theme’s file) to render website. If you edit files directly inthemes folder, your site may become incompatible with future versions of the theme.Social media links Copy footer.html from themes/TatBanTheme2.0/layouts/partials/ to myawesomesite/layouts/partials/ folder. Open the copied files in your favorite Text editor/IDE and edit the links to add your Facebook/Twiiter/Linkedin/Email ID.Custom CSS The themes custom css file is in themes/TatBanTheme2.0/static/css/folder with name banerstyle.css. You can add your own in myawesomesite/lstatic/css/ folder and update your sites header.html files in myawesomesite/layouts/partials/ folderYou can add multiple custom stylesheets which will be loaded after the main theme css.
For example, the above line will load the CSS-file placed at /static/css/custom.css.Homepage settings The theme uses a different css framework for landing page/homepage. It is located at themes/TatBanTheme2.0/layouts/partials/index.html. You can copy and paste in your sites layouts folder and then edit it as you like. If you prefer a simpler/minmal option, you can, of course, make a new homepage:Use singlepage layout, as found in themes/TatBanTheme2.0/layouts/_default/ folder and write it in markdown as other pages are written.Disable HTML editing As I said, I always feel that sometimes we do need HTML and CSS inside Markdown structure to add more flairs. Hence, in this theme HTML is enabled by default site wide. If you prefer the other way, please delete this part from your config.toml:    [markup.goldmark]
        [markup.goldmark.renderer]
            unsafe = true
You can still selectively add HTML inside your markdown by using {{< rawhtml >}} _[Put your content here]_ {{< /rawhtml >}} syntax which employs rawhtml.html shortcode.Typing in LaTeX To type any equation (or anything for that matter) using LaTeX framework, parameter math in the front-matter should be set to true.---
math: true
---
Then, please use double dollar signs to enclose the TeX typesetting. You can also use inline equations by enclosing with single dollar sign.Comment system on blog posts Disqus Comments are enabled by default. Please update your Disqus username in disqusShortname field of your site’s config.toml file. If you have not signed up to Disqus, you can always sign up for free.Just use single layout in front matter to make Disqus appear at the bottom of the pages.License Copyright © 2022 Tatsat BanerjeeThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/.See AlsoLightbiPaigeCalligraphyeiioAcademic",NA
